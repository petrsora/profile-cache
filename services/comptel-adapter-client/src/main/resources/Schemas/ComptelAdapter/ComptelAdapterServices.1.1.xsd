<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:int="http://internal"
           xmlns:tns="http://www.vodafone.cz/ComptelAdapter/xml/Services/1.1"
           xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cmn="http://www.vodafone.cz/Common/xml/Common"
           xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
           xmlns:wsdlPfx="http://www.vodafone.cz/ComptelAdapter/wsdl/Services/1.1"
           xmlns:sp="http://www.vodafone.cz/common/xml/ServiceProvisioning"
           targetNamespace="http://www.vodafone.cz/ComptelAdapter/xml/Services/1.1"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified">
   <xs:import namespace="http://www.vodafone.cz/Common/xml/Common"
              schemaLocation="../Common/XmlCommonSchema.xsd"/>
   <xs:complexType name="ComptelAdapterHeader">
      <xs:sequence>
         <xs:element name="serviceProvisioningOrderId" type="xs:string" minOccurs="0"/>
         <xs:element name="doResend" type="xs:boolean" minOccurs="0"/>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="comptelAdapterHeader" type="tns:ComptelAdapterHeader"/>
   <xs:complexType name="ComptelAdapterRequestBase" abstract="true">
      <xs:annotation>
         <xs:documentation>Comptel Adapter Request base</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Request">
            <xs:attribute name="treatErrorResponseAsException" type="xs:boolean"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="DeleteAaaProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service aaaProfile - This service displayes and deletes instance of subscriber on or from network element AAA (Authentication, authorization and accounting server).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>IMSI of the subscriber.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteAaaProfileRequest" type="tns:DeleteAaaProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service aaaProfile - This service displayes and deletes instance of subscriber on or from network element AAA (Authentication, authorization and accounting server).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteAaaProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service aaaProfile - This service displayes and deletes instance of subscriber on or from network element AAA (Authentication, authorization and accounting server).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteAaaProfileResponse" type="tns:DeleteAaaProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service aaaProfile - This service displayes and deletes instance of subscriber on or from network element AAA (Authentication, authorization and accounting server).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetAaaProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service aaaProfile - This service displayes and deletes instance of subscriber on or from network element AAA (Authentication, authorization and accounting server).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>IMSI of the subscriber.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getAaaProfileRequest" type="tns:GetAaaProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service aaaProfile - This service displayes and deletes instance of subscriber on or from network element AAA (Authentication, authorization and accounting server).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetAaaProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service aaaProfile - This service displayes and deletes instance of subscriber on or from network element AAA (Authentication, authorization and accounting server).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="apn" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>APN</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="certificateId" type="xs:long" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Serial number of certificate</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="certificateIssuerName" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Issuer certificate</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="msisdn" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>MSISDN</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="userName" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>User name of aaansduser</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="userStatus" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Status of user on AAA</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getAaaProfileResponse" type="tns:GetAaaProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service aaaProfile - This service displayes and deletes instance of subscriber on or from network element AAA (Authentication, authorization and accounting server).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteAcsProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service acsProfile - This service updates, displayes and deletes instance of subscriber on or from network element ACS (Auto Configuration Server).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>IMSI of the subscriber.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteAcsProfileRequest" type="tns:DeleteAcsProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service acsProfile - This service updates, displayes and deletes instance of subscriber on or from network element ACS (Auto Configuration Server).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteAcsProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service acsProfile - This service updates, displayes and deletes instance of subscriber on or from network element ACS (Auto Configuration Server).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteAcsProfileResponse" type="tns:DeleteAcsProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service acsProfile - This service updates, displayes and deletes instance of subscriber on or from network element ACS (Auto Configuration Server).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetAcsProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service acsProfile - This service updates, displayes and deletes instance of subscriber on or from network element ACS (Auto Configuration Server).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>IMSI of the subscriber.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getAcsProfileRequest" type="tns:GetAcsProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service acsProfile - This service updates, displayes and deletes instance of subscriber on or from network element ACS (Auto Configuration Server).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetAcsProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service acsProfile - This service updates, displayes and deletes instance of subscriber on or from network element ACS (Auto Configuration Server).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="impi" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identification of the IMS subscription within the IMS network.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="impu" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identifier of the used identity to routing purposes.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="homeDomain" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>IMS home domain for the subscriber. Mandatory for success responses.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="msisdn" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>MSISDN for the subscriber of VoWiFi service.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getAcsProfileResponse" type="tns:GetAcsProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service acsProfile - This service updates, displayes and deletes instance of subscriber on or from network element ACS (Auto Configuration Server).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:simpleType name="AlternativeRoamingProvider_ArpSignallingStatus">
      <xs:restriction base="xs:string">
         <xs:enumeration value="OnLine"/>
         <xs:enumeration value="OffLine"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="AlternativeRoamingProvider_DeactivationReason">
      <xs:restriction base="xs:long">
         <xs:enumeration value="0"/>
         <xs:enumeration value="1"/>
         <xs:enumeration value="2"/>
         <xs:enumeration value="3"/>
         <xs:enumeration value="4"/>
         <xs:enumeration value="5"/>
         <xs:enumeration value="6"/>
         <xs:enumeration value="7"/>
         <xs:enumeration value="8"/>
         <xs:enumeration value="10"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="AlternativeRoamingProvider_UpdateArp">
      <xs:restriction base="xs:long">
         <xs:enumeration value="0"/>
         <xs:enumeration value="1"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="AlternativeRoamingProvider_SubscriberStatus">
      <xs:restriction base="xs:long">
         <xs:enumeration value="1"/>
         <xs:enumeration value="2"/>
         <xs:enumeration value="3"/>
         <xs:enumeration value="4"/>
         <xs:enumeration value="5"/>
         <xs:enumeration value="6"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="CreateAlternativeRoamingProviderRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service alternativeRoamingProvider - This service handles subscriber for ARP service in Roamware (backend proxy).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>IMSI of the Subscriber</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="transactionId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Transaction ID generated by ARP</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="arpTadigCode" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>TADIG Code of the ARP</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="dspTadigCode" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>TADIG Code of the DSP</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="arpSignallingStatus"
                           type="tns:AlternativeRoamingProvider_ArpSignallingStatus"
                           minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Signalling Status of ARP Subscription. If not sent, default value will be OnLine Values: OnLine, OffLine</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="dspSubscriberType" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber Type of DSP</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="startTimestamp" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Timestamp from when the Subscriber provisioning will be effective in the System. If not sent, value will be set with timestamp of received request in SI-e</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createAlternativeRoamingProviderRequest"
               type="tns:CreateAlternativeRoamingProviderRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service alternativeRoamingProvider - This service handles subscriber for ARP service in Roamware (backend proxy).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateAlternativeRoamingProviderResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service alternativeRoamingProvider - This service handles subscriber for ARP service in Roamware (backend proxy).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createAlternativeRoamingProviderResponse"
               type="tns:CreateAlternativeRoamingProviderResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service alternativeRoamingProvider - This service handles subscriber for ARP service in Roamware (backend proxy).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteAlternativeRoamingProviderRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service alternativeRoamingProvider - This service handles subscriber for ARP service in Roamware (backend proxy).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>IMSI of the Subscriber</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="transactionId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Transaction ID generated by ARP</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="arpTadigCode" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>TADIG Code of the ARP</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="dspTadigCode" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>TADIG Code of the DSP</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="deactivationReason"
                           type="tns:AlternativeRoamingProvider_DeactivationReason"
                           minOccurs="1"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber Deactivation Reason. Values: 0, 1, 2, 3, 4, 5, 6, 7, 8, 10</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="updateArp" type="tns:AlternativeRoamingProvider_UpdateArp" minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Need to Update ARP or Not. By default value is FALSE.0 - FALSE,1 - TRUE  Values: 0, 1</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteAlternativeRoamingProviderRequest"
               type="tns:DeleteAlternativeRoamingProviderRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service alternativeRoamingProvider - This service handles subscriber for ARP service in Roamware (backend proxy).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteAlternativeRoamingProviderResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service alternativeRoamingProvider - This service handles subscriber for ARP service in Roamware (backend proxy).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteAlternativeRoamingProviderResponse"
               type="tns:DeleteAlternativeRoamingProviderResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service alternativeRoamingProvider - This service handles subscriber for ARP service in Roamware (backend proxy).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetAlternativeRoamingProviderRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service alternativeRoamingProvider - This service handles subscriber for ARP service in Roamware (backend proxy).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>IMSI of the Subscriber</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="transactionId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Transaction ID generated by ARP</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getAlternativeRoamingProviderRequest"
               type="tns:GetAlternativeRoamingProviderRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service alternativeRoamingProvider - This service handles subscriber for ARP service in Roamware (backend proxy).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetAlternativeRoamingProviderResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service alternativeRoamingProvider - This service handles subscriber for ARP service in Roamware (backend proxy).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="arpTadigCode" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>TADIG Code of the ARP</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="dspTadigCode" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>TADIG Code of the DSP</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="arpSignallingStatus"
                                    type="tns:AlternativeRoamingProvider_ArpSignallingStatus"
                                    minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>Signalling Status of ARP Subscription. If not sent, default value will be OnLine Values: OnLine, OffLine</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="dspSubscriberType" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Subscriber Type of DSP</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="startTimestamp" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Timestamp from when the Subscriber provisioning will be effective in the System. If not sent, value will be set with timestamp of received request in SI-e</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="deactivationReason"
                                    type="tns:AlternativeRoamingProvider_DeactivationReason"
                                    minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>Subscriber Deactivation Reason. Values: 0, 1, 2, 3, 4, 5, 6, 7, 8, 10</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="updateArp" type="tns:AlternativeRoamingProvider_UpdateArp" minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>Need to Update ARP or Not. By default value is FALSE.0 - FALSE,1 - TRUE  Values: 0, 1</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="provisionTimestamp" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>The time of provision request received</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="lastUpdateTimestamp" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>The time of last update of the subscription</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="subscriberStatus" type="tns:AlternativeRoamingProvider_SubscriberStatus"
                                    minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>Subscriber Status. Values: 1, 2, 3, 4, 5, 6</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getAlternativeRoamingProviderResponse"
               type="tns:GetAlternativeRoamingProviderResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service alternativeRoamingProvider - This service handles subscriber for ARP service in Roamware (backend proxy).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:simpleType name="BarringByCustomer_SubscriberControlBarringServices">
      <xs:restriction base="xs:string">
         <xs:enumeration value="ONLYOPERATOR"/>
         <xs:enumeration value="SUBSCRIBER"/>
         <xs:enumeration value="UNSUPPORTEDSERVICE"/>
         <xs:enumeration value="BLOCKEDPASSWORD"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="SetBarringByCustomerRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service barringByCustomer - This service enables barring of specific services: barring of incoming services, barring of outgoing services, barring of outgoing international calls, barring of incoming calls in roaming, barring of outgoing international calls in roaming except to home site.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="incomingCall" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of incoming voice calls.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="incomingSms" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of incoming SMSs.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="incomingFax" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of incoming FAX calls.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="incomingData" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of incoming data calls.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="outgoingCall" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of outgoing voice calls.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="outgoingSms" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of outgoing SMS</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="outgoingFax" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of outgoing fax calls.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="outgoingData" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of outgoing data calls.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="outgoingIcCall" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of outgoing international voice calls</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="outgoingIcSms" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of outgoing international SMSs.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="outgoingIcFax" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of outgoing international FAX calls.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="outgoingIcData" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of outgoing international data calls.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="incomingRCall" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of incoming voice calls in roaming.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="incomingRSms" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of incoming SMSs in roaming.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="incomingRFax" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of incoming FAX calls in roaming.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="incomingRData" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of incoming data calls in roaming.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="outgoingIcRCall" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of outgoing international voice calls in roaming.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="outgoingIcRSms" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of outgoing international SMSs in roaming.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="outgoingIcRFax" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of outgoing international FAX calls in roaming.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="outgoingIcRData" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of outgoing international data calls in roaming.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="blockingPassword" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Password that should be provided by customer while operating with the service from handset</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="subscriberControlBarringServices"
                           type="tns:BarringByCustomer_SubscriberControlBarringServices"
                           minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Mode of  controlling ustomer. By the service can be set ONLYOPERATOR  (subscriber is not allowed to set barring) or SUBSCRIBER (subscriber can set barring with password or Operator).  Other values UNSUPPORTEDSERVICE (subscrier is located in VLR that does not support service - automated change by GSM ) and BLOCKEDPASSWORD (customer blocked password - operator have to unblock) are for display purpose. Values: ONLYOPERATOR, SUBSCRIBER, UNSUPPORTEDSERVICE, BLOCKEDPASSWORD</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setBarringByCustomerRequest" type="tns:SetBarringByCustomerRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service barringByCustomer - This service enables barring of specific services: barring of incoming services, barring of outgoing services, barring of outgoing international calls, barring of incoming calls in roaming, barring of outgoing international calls in roaming except to home site.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetBarringByCustomerResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service barringByCustomer - This service enables barring of specific services: barring of incoming services, barring of outgoing services, barring of outgoing international calls, barring of incoming calls in roaming, barring of outgoing international calls in roaming except to home site.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setBarringByCustomerResponse" type="tns:SetBarringByCustomerResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service barringByCustomer - This service enables barring of specific services: barring of incoming services, barring of outgoing services, barring of outgoing international calls, barring of incoming calls in roaming, barring of outgoing international calls in roaming except to home site.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetBarringByCustomerRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service barringByCustomer - This service enables barring of specific services: barring of incoming services, barring of outgoing services, barring of outgoing international calls, barring of incoming calls in roaming, barring of outgoing international calls in roaming except to home site.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getBarringByCustomerRequest" type="tns:GetBarringByCustomerRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service barringByCustomer - This service enables barring of specific services: barring of incoming services, barring of outgoing services, barring of outgoing international calls, barring of incoming calls in roaming, barring of outgoing international calls in roaming except to home site.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetBarringByCustomerResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service barringByCustomer - This service enables barring of specific services: barring of incoming services, barring of outgoing services, barring of outgoing international calls, barring of incoming calls in roaming, barring of outgoing international calls in roaming except to home site.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="incomingCall" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of incoming voice calls.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="incomingSms" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of incoming SMSs.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="incomingFax" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of incoming FAX calls.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="incomingData" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of incoming data calls.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingCall" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing voice calls.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingSms" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing SMS</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingFax" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing fax calls.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingData" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing data calls.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingIcCall" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing international voice calls</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingIcSms" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing international SMSs.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingIcFax" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing international FAX calls.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingIcData" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing international data calls.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="incomingRCall" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of incoming voice calls in roaming.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="incomingRSms" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of incoming SMSs in roaming.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="incomingRFax" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of incoming FAX calls in roaming.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="incomingRData" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of incoming data calls in roaming.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingIcRCall" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing international voice calls in roaming.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingIcRSms" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing international SMSs in roaming.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingIcRFax" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing international FAX calls in roaming.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingIcRData" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing international data calls in roaming.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="blockingPassword" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Password that should be provided by customer while operating with the service from handset</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="subscriberControlBarringServices"
                                    type="tns:BarringByCustomer_SubscriberControlBarringServices"
                                    minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>Mode of  controlling ustomer. By the service can be set ONLYOPERATOR  (subscriber is not allowed to set barring) or SUBSCRIBER (subscriber can set barring with password or Operator).  Other values UNSUPPORTEDSERVICE (subscrier is located in VLR that does not support service - automated change by GSM ) and BLOCKEDPASSWORD (customer blocked password - operator have to unblock) are for display purpose. Values: ONLYOPERATOR, SUBSCRIBER, UNSUPPORTEDSERVICE, BLOCKEDPASSWORD</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getBarringByCustomerResponse" type="tns:GetBarringByCustomerResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service barringByCustomer - This service enables barring of specific services: barring of incoming services, barring of outgoing services, barring of outgoing international calls, barring of incoming calls in roaming, barring of outgoing international calls in roaming except to home site.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:simpleType name="BarringByIn_Reason">
      <xs:restriction base="xs:string">
         <xs:enumeration value="CREDIT_EXPIRY"/>
         <xs:enumeration value="CREDIT_REACHED_ZERO"/>
         <xs:enumeration value="SERVICE_EXPIRY"/>
         <xs:enumeration value="POSITIVE_BALANCE"/>
         <xs:enumeration value="SUBSCRIBER_ACTIVATION"/>
         <xs:enumeration value="SUBSCRIBER_DELETION"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="SetBarringByInRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service barringByIn - This service will bar/unbar specified set of attributes from currently existing service. Barring By Operator based on a reason specified by IN and dependent on actual credit (the actions for a specific reasons are distinguished for under 0 and above 0 for specified reasons). This service is designed for IN purposes only; therefore the service is not part of Provisioing Client GUI.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="reason" type="tns:BarringByIn_Reason" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Reason specifies an action that is required to be performed from IN point of view. Values: CREDIT_EXPIRY, CREDIT_REACHED_ZERO, SERVICE_EXPIRY, POSITIVE_BALANCE, SUBSCRIBER_ACTIVATION, SUBSCRIBER_DELETION</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="credit" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Current balance in halers.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setBarringByInRequest" type="tns:SetBarringByInRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service barringByIn - This service will bar/unbar specified set of attributes from currently existing service. Barring By Operator based on a reason specified by IN and dependent on actual credit (the actions for a specific reasons are distinguished for under 0 and above 0 for specified reasons). This service is designed for IN purposes only; therefore the service is not part of Provisioing Client GUI.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetBarringByInResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service barringByIn - This service will bar/unbar specified set of attributes from currently existing service. Barring By Operator based on a reason specified by IN and dependent on actual credit (the actions for a specific reasons are distinguished for under 0 and above 0 for specified reasons). This service is designed for IN purposes only; therefore the service is not part of Provisioing Client GUI.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setBarringByInResponse" type="tns:SetBarringByInResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service barringByIn - This service will bar/unbar specified set of attributes from currently existing service. Barring By Operator based on a reason specified by IN and dependent on actual credit (the actions for a specific reasons are distinguished for under 0 and above 0 for specified reasons). This service is designed for IN purposes only; therefore the service is not part of Provisioing Client GUI.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:simpleType name="BarringByOperator_Target">
      <xs:restriction base="xs:string">
         <xs:enumeration value="HLR"/>
         <xs:enumeration value="MTAS"/>
         <xs:enumeration value="NGIN"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="BarringByOperator_OutgoingCall">
      <xs:restriction base="xs:string">
         <xs:enumeration value="NONE"/>
         <xs:enumeration value="ALL"/>
         <xs:enumeration value="INTERNATIONAL"/>
         <xs:enumeration value="EXCEPTHOMECOUNTRY"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="BarringByOperator_Mms">
      <xs:restriction base="xs:string">
         <xs:enumeration value="ALL"/>
         <xs:enumeration value="NONE"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="BarringByOperator_Tick">
      <xs:restriction base="xs:string">
         <xs:enumeration value="BASIC"/>
         <xs:enumeration value="PREPAIDROAMING"/>
         <xs:enumeration value="VPN"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="SetBarringByOperatorRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service barringByOperator - This service enables barring of specific services: barring of incoming services, barring of outgoing services, barring of outgoing international calls, barring of incoming calls in roaming, barring of outgoing international calls in roaming except to home site.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="target" type="tns:BarringByOperator_Target" minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Server where subscriber has subscription. For V4 VoLTE it should be MTAS. Values: HLR, MTAS, NGIN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="incomingCall" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of all incoming calls.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="incomingSms" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of all incoming SMSs.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="outgoingCall" type="tns:BarringByOperator_OutgoingCall" minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of all outgoing calls. Values: NONE, ALL, INTERNATIONAL, EXCEPTHOMECOUNTRY</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="audiotex" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of audiotex services.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="outgoingSms" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of all outgoing SMSs.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="roaming" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of roaming calls.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="roamingCamel" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Specifies hotline/dehotline status for prepaid customers.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="mms" type="tns:BarringByOperator_Mms" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of MMS MMSC. Not applicable for V2; for V2 mms barring = Deactivation of Nokia MMS service (MMS delete request). Values: ALL, NONE</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vpn" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of VPN’s short-code dialing (only for postpaid customers).</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="gprs" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of GPRS connection. Blocks all APNs.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="oick" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Originating calls forwarding.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="tick" type="tns:BarringByOperator_Tick" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Terminating calls forwarding. Values: BASIC, PREPAIDROAMING, VPN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="gprsInternetAndWap" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Barring of GPRS connection. Blocks all Internet and WAP APN, Rest remains active. NGIN subscribers only otherwise request is rejected.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="imsi" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber. Mandatory if parameter gprs is specified too.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="loan" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Setting the opt-out/in for loan eligibility</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setBarringByOperatorRequest" type="tns:SetBarringByOperatorRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service barringByOperator - This service enables barring of specific services: barring of incoming services, barring of outgoing services, barring of outgoing international calls, barring of incoming calls in roaming, barring of outgoing international calls in roaming except to home site.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetBarringByOperatorResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service barringByOperator - This service enables barring of specific services: barring of incoming services, barring of outgoing services, barring of outgoing international calls, barring of incoming calls in roaming, barring of outgoing international calls in roaming except to home site.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setBarringByOperatorResponse" type="tns:SetBarringByOperatorResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service barringByOperator - This service enables barring of specific services: barring of incoming services, barring of outgoing services, barring of outgoing international calls, barring of incoming calls in roaming, barring of outgoing international calls in roaming except to home site.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetBarringByOperatorRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service barringByOperator - This service enables barring of specific services: barring of incoming services, barring of outgoing services, barring of outgoing international calls, barring of incoming calls in roaming, barring of outgoing international calls in roaming except to home site.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="imsi" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber. Mandatory if parameter gprs is specified too.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getBarringByOperatorRequest" type="tns:GetBarringByOperatorRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service barringByOperator - This service enables barring of specific services: barring of incoming services, barring of outgoing services, barring of outgoing international calls, barring of incoming calls in roaming, barring of outgoing international calls in roaming except to home site.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetBarringByOperatorResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service barringByOperator - This service enables barring of specific services: barring of incoming services, barring of outgoing services, barring of outgoing international calls, barring of incoming calls in roaming, barring of outgoing international calls in roaming except to home site.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="target" type="tns:BarringByOperator_Target" minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>Server where subscriber has subscription. For V4 VoLTE it should be MTAS. Values: HLR, MTAS, NGIN</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="incomingCall" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of all incoming calls.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="incomingSms" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of all incoming SMSs.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingCall" type="tns:BarringByOperator_OutgoingCall" minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of all outgoing calls. Values: NONE, ALL, INTERNATIONAL, EXCEPTHOMECOUNTRY</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="audiotex" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of audiotex services.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingSms" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of all outgoing SMSs.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="roaming" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of roaming calls.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="roamingCamel" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Specifies hotline/dehotline status for prepaid customers.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="mms" type="tns:BarringByOperator_Mms" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of MMS MMSC. Not applicable for V2; for V2 mms barring = Deactivation of Nokia MMS service (MMS delete request). Values: ALL, NONE</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="vpn" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of VPN’s short-code dialing (only for postpaid customers).</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="gprs" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of GPRS connection. Blocks all APNs.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="oick" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Originating calls forwarding.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="tick" type="tns:BarringByOperator_Tick" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Terminating calls forwarding. Values: BASIC, PREPAIDROAMING, VPN</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="gprsInternetAndWap" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of GPRS connection. Blocks all Internet and WAP APN, Rest remains active. NGIN subscribers only otherwise request is rejected.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="loan" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Setting the opt-out/in for loan eligibility</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getBarringByOperatorResponse" type="tns:GetBarringByOperatorResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service barringByOperator - This service enables barring of specific services: barring of incoming services, barring of outgoing services, barring of outgoing international calls, barring of incoming calls in roaming, barring of outgoing international calls in roaming except to home site.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetCallForwardingRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service callForwarding - This service enables forwarding of calls in several circumstances: - When busy, - When unreachable, - When not responding, - Or unconditionally Voice calls, FAX and data can be forwarded.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="busyVoice" type="xs:long" minOccurs="0" nillable="true">
                  <xs:annotation>
                     <xs:documentation>The MSISDN number for voice call forwarding on mobile subscriber busy.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="busyFax" type="xs:long" minOccurs="0" nillable="true">
                  <xs:annotation>
                     <xs:documentation>The MSISDN number for FAX call forwarding on mobile subscriber busy.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="busyData" type="xs:long" minOccurs="0" nillable="true">
                  <xs:annotation>
                     <xs:documentation>The MSISDN number for data call forwarding on mobile subscriber busy.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="unreachableVoice" type="xs:long" minOccurs="0" nillable="true">
                  <xs:annotation>
                     <xs:documentation>The MSISDN number for voice call forwarding on mobile subscriber not reachable.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="unreachableFax" type="xs:long" minOccurs="0" nillable="true">
                  <xs:annotation>
                     <xs:documentation>The MSISDN number for FAX call forwarding on mobile subscriber not reachable.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="unreachableData" type="xs:long" minOccurs="0" nillable="true">
                  <xs:annotation>
                     <xs:documentation>The MSISDN number for data call forwarding on mobile subscriber not reachable.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="notRespondingVoice" type="xs:long" minOccurs="0" nillable="true">
                  <xs:annotation>
                     <xs:documentation>The MSISDN number for voice call forwarding on mobile subscriber not responding.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="notRespondingFax" type="xs:long" minOccurs="0" nillable="true">
                  <xs:annotation>
                     <xs:documentation>The MSISDN number for FAX call forwarding on mobile subscriber not responding.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="notRespondingData" type="xs:long" minOccurs="0" nillable="true">
                  <xs:annotation>
                     <xs:documentation>The MSISDN number for data call forwarding on mobile subscriber not responding.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="unconditionalVoice" type="xs:long" minOccurs="0" nillable="true">
                  <xs:annotation>
                     <xs:documentation>The MSISDN number for unconditional voice call forwarding.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="unconditionalFax" type="xs:long" minOccurs="0" nillable="true">
                  <xs:annotation>
                     <xs:documentation>The MSISDN number for unconditional FAX call forwarding.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="unconditionalData" type="xs:long" minOccurs="0" nillable="true">
                  <xs:annotation>
                     <xs:documentation>The MSISDN number for unconditional data call forwarding.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setCallForwardingRequest" type="tns:SetCallForwardingRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service callForwarding - This service enables forwarding of calls in several circumstances: - When busy, - When unreachable, - When not responding, - Or unconditionally Voice calls, FAX and data can be forwarded.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetCallForwardingResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service callForwarding - This service enables forwarding of calls in several circumstances: - When busy, - When unreachable, - When not responding, - Or unconditionally Voice calls, FAX and data can be forwarded.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setCallForwardingResponse" type="tns:SetCallForwardingResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service callForwarding - This service enables forwarding of calls in several circumstances: - When busy, - When unreachable, - When not responding, - Or unconditionally Voice calls, FAX and data can be forwarded.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetCallForwardingRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service callForwarding - This service enables forwarding of calls in several circumstances: - When busy, - When unreachable, - When not responding, - Or unconditionally Voice calls, FAX and data can be forwarded.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getCallForwardingRequest" type="tns:GetCallForwardingRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service callForwarding - This service enables forwarding of calls in several circumstances: - When busy, - When unreachable, - When not responding, - Or unconditionally Voice calls, FAX and data can be forwarded.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetCallForwardingResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service callForwarding - This service enables forwarding of calls in several circumstances: - When busy, - When unreachable, - When not responding, - Or unconditionally Voice calls, FAX and data can be forwarded.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="busyVoice" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for voice call forwarding on mobile subscriber busy.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="busyFax" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for FAX call forwarding on mobile subscriber busy.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="busyData" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for data call forwarding on mobile subscriber busy.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="unreachableVoice" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for voice call forwarding on mobile subscriber not reachable.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="unreachableFax" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for FAX call forwarding on mobile subscriber not reachable.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="unreachableData" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for data call forwarding on mobile subscriber not reachable.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="notRespondingVoice" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for voice call forwarding on mobile subscriber not responding.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="notRespondingFax" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for FAX call forwarding on mobile subscriber not responding.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="notRespondingData" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for data call forwarding on mobile subscriber not responding.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="unconditionalVoice" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for unconditional voice call forwarding.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="unconditionalFax" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for unconditional FAX call forwarding.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="unconditionalData" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for unconditional data call forwarding.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getCallForwardingResponse" type="tns:GetCallForwardingResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service callForwarding - This service enables forwarding of calls in several circumstances: - When busy, - When unreachable, - When not responding, - Or unconditionally Voice calls, FAX and data can be forwarded.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateCallHoldRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service callHold - Service enables holding incoming call while customer is speaking with someone else.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createCallHoldRequest" type="tns:CreateCallHoldRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service callHold - Service enables holding incoming call while customer is speaking with someone else.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateCallHoldResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service callHold - Service enables holding incoming call while customer is speaking with someone else.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createCallHoldResponse" type="tns:CreateCallHoldResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service callHold - Service enables holding incoming call while customer is speaking with someone else.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteCallHoldRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service callHold - Service enables holding incoming call while customer is speaking with someone else.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteCallHoldRequest" type="tns:DeleteCallHoldRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service callHold - Service enables holding incoming call while customer is speaking with someone else.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteCallHoldResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service callHold - Service enables holding incoming call while customer is speaking with someone else.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteCallHoldResponse" type="tns:DeleteCallHoldResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service callHold - Service enables holding incoming call while customer is speaking with someone else.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetCallHoldRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service callHold - Service enables holding incoming call while customer is speaking with someone else.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getCallHoldRequest" type="tns:GetCallHoldRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service callHold - Service enables holding incoming call while customer is speaking with someone else.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetCallHoldResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service callHold - Service enables holding incoming call while customer is speaking with someone else.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getCallHoldResponse" type="tns:GetCallHoldResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service callHold - Service enables holding incoming call while customer is speaking with someone else.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateCallWaitingRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service callWaiting - The Call waiting service provides a mobile subscriber with the possibility of being notified of an incoming call during another call. The subscriber can either answer, reject, or ignore the incoming call. A maximum of one call waiting is allowed. This means that no further calls are forwarded to the subscriber during the call waiting state.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="voice" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Call Waiting service for voice calls.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fax" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Call Waiting service for FAX calls.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="data" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Call Waiting service for data calls.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createCallWaitingRequest" type="tns:CreateCallWaitingRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service callWaiting - The Call waiting service provides a mobile subscriber with the possibility of being notified of an incoming call during another call. The subscriber can either answer, reject, or ignore the incoming call. A maximum of one call waiting is allowed. This means that no further calls are forwarded to the subscriber during the call waiting state.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateCallWaitingResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service callWaiting - The Call waiting service provides a mobile subscriber with the possibility of being notified of an incoming call during another call. The subscriber can either answer, reject, or ignore the incoming call. A maximum of one call waiting is allowed. This means that no further calls are forwarded to the subscriber during the call waiting state.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createCallWaitingResponse" type="tns:CreateCallWaitingResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service callWaiting - The Call waiting service provides a mobile subscriber with the possibility of being notified of an incoming call during another call. The subscriber can either answer, reject, or ignore the incoming call. A maximum of one call waiting is allowed. This means that no further calls are forwarded to the subscriber during the call waiting state.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetCallWaitingRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service callWaiting - The Call waiting service provides a mobile subscriber with the possibility of being notified of an incoming call during another call. The subscriber can either answer, reject, or ignore the incoming call. A maximum of one call waiting is allowed. This means that no further calls are forwarded to the subscriber during the call waiting state.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="voice" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Call Waiting service for voice calls.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fax" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Call Waiting service for FAX calls.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="data" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Call Waiting service for data calls.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setCallWaitingRequest" type="tns:SetCallWaitingRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service callWaiting - The Call waiting service provides a mobile subscriber with the possibility of being notified of an incoming call during another call. The subscriber can either answer, reject, or ignore the incoming call. A maximum of one call waiting is allowed. This means that no further calls are forwarded to the subscriber during the call waiting state.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetCallWaitingResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service callWaiting - The Call waiting service provides a mobile subscriber with the possibility of being notified of an incoming call during another call. The subscriber can either answer, reject, or ignore the incoming call. A maximum of one call waiting is allowed. This means that no further calls are forwarded to the subscriber during the call waiting state.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setCallWaitingResponse" type="tns:SetCallWaitingResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service callWaiting - The Call waiting service provides a mobile subscriber with the possibility of being notified of an incoming call during another call. The subscriber can either answer, reject, or ignore the incoming call. A maximum of one call waiting is allowed. This means that no further calls are forwarded to the subscriber during the call waiting state.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteCallWaitingRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service callWaiting - The Call waiting service provides a mobile subscriber with the possibility of being notified of an incoming call during another call. The subscriber can either answer, reject, or ignore the incoming call. A maximum of one call waiting is allowed. This means that no further calls are forwarded to the subscriber during the call waiting state.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteCallWaitingRequest" type="tns:DeleteCallWaitingRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service callWaiting - The Call waiting service provides a mobile subscriber with the possibility of being notified of an incoming call during another call. The subscriber can either answer, reject, or ignore the incoming call. A maximum of one call waiting is allowed. This means that no further calls are forwarded to the subscriber during the call waiting state.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteCallWaitingResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service callWaiting - The Call waiting service provides a mobile subscriber with the possibility of being notified of an incoming call during another call. The subscriber can either answer, reject, or ignore the incoming call. A maximum of one call waiting is allowed. This means that no further calls are forwarded to the subscriber during the call waiting state.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteCallWaitingResponse" type="tns:DeleteCallWaitingResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service callWaiting - The Call waiting service provides a mobile subscriber with the possibility of being notified of an incoming call during another call. The subscriber can either answer, reject, or ignore the incoming call. A maximum of one call waiting is allowed. This means that no further calls are forwarded to the subscriber during the call waiting state.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetCallWaitingRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service callWaiting - The Call waiting service provides a mobile subscriber with the possibility of being notified of an incoming call during another call. The subscriber can either answer, reject, or ignore the incoming call. A maximum of one call waiting is allowed. This means that no further calls are forwarded to the subscriber during the call waiting state.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getCallWaitingRequest" type="tns:GetCallWaitingRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service callWaiting - The Call waiting service provides a mobile subscriber with the possibility of being notified of an incoming call during another call. The subscriber can either answer, reject, or ignore the incoming call. A maximum of one call waiting is allowed. This means that no further calls are forwarded to the subscriber during the call waiting state.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetCallWaitingResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service callWaiting - The Call waiting service provides a mobile subscriber with the possibility of being notified of an incoming call during another call. The subscriber can either answer, reject, or ignore the incoming call. A maximum of one call waiting is allowed. This means that no further calls are forwarded to the subscriber during the call waiting state.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="voice" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Call Waiting service for voice calls.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="fax" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Call Waiting service for FAX calls.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="data" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Call Waiting service for data calls.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getCallWaitingResponse" type="tns:GetCallWaitingResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service callWaiting - The Call waiting service provides a mobile subscriber with the possibility of being notified of an incoming call during another call. The subscriber can either answer, reject, or ignore the incoming call. A maximum of one call waiting is allowed. This means that no further calls are forwarded to the subscriber during the call waiting state.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateClirRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service clir - The Calling Line Identification Restriction (CLIR) service enables calling party to bar his/her own number information to the receiving party.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="type" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Specifies typeof CLIR service for given MSISDN. In case that the parameter is not present in create default PERMANENT (always suppress MSISDN) is used. TEMPRESTRICTED (by default MSISDN is not shown but can be swithed on by handset) TEMPALLOWED (by default MSISDN is shown but can be swithed on by handset).</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createClirRequest" type="tns:CreateClirRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service clir - The Calling Line Identification Restriction (CLIR) service enables calling party to bar his/her own number information to the receiving party.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateClirResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service clir - The Calling Line Identification Restriction (CLIR) service enables calling party to bar his/her own number information to the receiving party.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createClirResponse" type="tns:CreateClirResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service clir - The Calling Line Identification Restriction (CLIR) service enables calling party to bar his/her own number information to the receiving party.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetClirRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service clir - The Calling Line Identification Restriction (CLIR) service enables calling party to bar his/her own number information to the receiving party.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="type" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Specifies typeof CLIR service for given MSISDN. In case that the parameter is not present in create default PERMANENT (always suppress MSISDN) is used. TEMPRESTRICTED (by default MSISDN is not shown but can be swithed on by handset) TEMPALLOWED (by default MSISDN is shown but can be swithed on by handset).</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setClirRequest" type="tns:SetClirRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service clir - The Calling Line Identification Restriction (CLIR) service enables calling party to bar his/her own number information to the receiving party.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetClirResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service clir - The Calling Line Identification Restriction (CLIR) service enables calling party to bar his/her own number information to the receiving party.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setClirResponse" type="tns:SetClirResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service clir - The Calling Line Identification Restriction (CLIR) service enables calling party to bar his/her own number information to the receiving party.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteClirRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service clir - The Calling Line Identification Restriction (CLIR) service enables calling party to bar his/her own number information to the receiving party.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteClirRequest" type="tns:DeleteClirRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service clir - The Calling Line Identification Restriction (CLIR) service enables calling party to bar his/her own number information to the receiving party.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteClirResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service clir - The Calling Line Identification Restriction (CLIR) service enables calling party to bar his/her own number information to the receiving party.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteClirResponse" type="tns:DeleteClirResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service clir - The Calling Line Identification Restriction (CLIR) service enables calling party to bar his/her own number information to the receiving party.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetClirRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service clir - The Calling Line Identification Restriction (CLIR) service enables calling party to bar his/her own number information to the receiving party.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getClirRequest" type="tns:GetClirRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service clir - The Calling Line Identification Restriction (CLIR) service enables calling party to bar his/her own number information to the receiving party.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetClirResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service clir - The Calling Line Identification Restriction (CLIR) service enables calling party to bar his/her own number information to the receiving party.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="type" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Specifies typeof CLIR service for given MSISDN. In case that the parameter is not present in create default PERMANENT (always suppress MSISDN) is used. TEMPRESTRICTED (by default MSISDN is not shown but can be swithed on by handset) TEMPALLOWED (by default MSISDN is shown but can be swithed on by handset).</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getClirResponse" type="tns:GetClirResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service clir - The Calling Line Identification Restriction (CLIR) service enables calling party to bar his/her own number information to the receiving party.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:simpleType name="CurContentFilter_VfAdminContentFilter">
      <xs:restriction base="xs:string">
         <xs:enumeration value="adult"/>
         <xs:enumeration value="general"/>
         <xs:enumeration value="child"/>
         <xs:enumeration value="custom"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="CurContentFilter_VfContentFilter">
      <xs:restriction base="xs:string">
         <xs:enumeration value="adult"/>
         <xs:enumeration value="general"/>
         <xs:enumeration value="child"/>
         <xs:enumeration value="custom"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="CurContentFilter_VfContentFilterLang">
      <xs:restriction base="xs:string">
         <xs:enumeration value="CZECH"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="SetCurContentFilterRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service curContentFilter - Content filter attributes relating to user’s or subscriber’s Content Filtering preferences and attributes relating to it. 
		Includes credentials to enable adult content as well as content filter parameters.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="vfSid" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscription (mobile phone/SIM) number.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="newVfSid" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>New subscription (mobile phone/SIM) number for changekey operation.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vfAdminAgeCeiling" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Admin age ceiling threshold to filter content.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vfAdminContentFilter" type="tns:CurContentFilter_VfAdminContentFilter"
                           minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Administrator ruleset to apply to incoming messages and web browsing. Values: adult, general, child, custom</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vfAdminContentFilterConf" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Additional configuration for administrative content filter.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vfAdminSafeSearchCriterion" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Admin Search threshold to filter content.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vfAgeCeiling" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>A default age ceiling threshold to filter content.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vfContentFilter" type="tns:CurContentFilter_VfContentFilter"
                           minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Profile to be applied for filtering contents. Self-selected profile. Values: adult, general, child, custom</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vfContentFilterConf" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Additional configuration for content filter.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vfContentFilterLang" type="tns:CurContentFilter_VfContentFilterLang"
                           minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Default language for content filtering ruleset. Values: CZECH</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vfPin" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>User’s pin code.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vfPinDisabled" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Suppress the prompt for a PIN.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vfSafeSearchCriterion" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Search threshold to filter content.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vfNoAdviceOfCharge" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>If set TRUE, it means the subscriber has requested not to see the Advice-of- Charge page.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setCurContentFilterRequest" type="tns:SetCurContentFilterRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service curContentFilter - Content filter attributes relating to user’s or subscriber’s Content Filtering preferences and attributes relating to it. 
		Includes credentials to enable adult content as well as content filter parameters.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetCurContentFilterResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service curContentFilter - Content filter attributes relating to user’s or subscriber’s Content Filtering preferences and attributes relating to it. 
		Includes credentials to enable adult content as well as content filter parameters.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setCurContentFilterResponse" type="tns:SetCurContentFilterResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service curContentFilter - Content filter attributes relating to user’s or subscriber’s Content Filtering preferences and attributes relating to it. 
		Includes credentials to enable adult content as well as content filter parameters.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteCurContentFilterRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service curContentFilter - Content filter attributes relating to user’s or subscriber’s Content Filtering preferences and attributes relating to it. 
		Includes credentials to enable adult content as well as content filter parameters.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="vfSid" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscription (mobile phone/SIM) number.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteCurContentFilterRequest" type="tns:DeleteCurContentFilterRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service curContentFilter - Content filter attributes relating to user’s or subscriber’s Content Filtering preferences and attributes relating to it. 
		Includes credentials to enable adult content as well as content filter parameters.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteCurContentFilterResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service curContentFilter - Content filter attributes relating to user’s or subscriber’s Content Filtering preferences and attributes relating to it. 
		Includes credentials to enable adult content as well as content filter parameters.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteCurContentFilterResponse" type="tns:DeleteCurContentFilterResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service curContentFilter - Content filter attributes relating to user’s or subscriber’s Content Filtering preferences and attributes relating to it. 
		Includes credentials to enable adult content as well as content filter parameters.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetCurContentFilterRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service curContentFilter - Content filter attributes relating to user’s or subscriber’s Content Filtering preferences and attributes relating to it. 
		Includes credentials to enable adult content as well as content filter parameters.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="vfSid" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscription (mobile phone/SIM) number.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getCurContentFilterRequest" type="tns:GetCurContentFilterRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service curContentFilter - Content filter attributes relating to user’s or subscriber’s Content Filtering preferences and attributes relating to it. 
		Includes credentials to enable adult content as well as content filter parameters.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetCurContentFilterResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service curContentFilter - Content filter attributes relating to user’s or subscriber’s Content Filtering preferences and attributes relating to it. 
		Includes credentials to enable adult content as well as content filter parameters.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="newVfSid" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>New subscription (mobile phone/SIM) number for changekey operation.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="vfAdminAgeCeiling" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Admin age ceiling threshold to filter content.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="vfAdminContentFilter" type="tns:CurContentFilter_VfAdminContentFilter"
                                    minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>Administrator ruleset to apply to incoming messages and web browsing. Values: adult, general, child, custom</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="vfAdminContentFilterConf" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Additional configuration for administrative content filter.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="vfAdminSafeSearchCriterion" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Admin Search threshold to filter content.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="vfAgeCeiling" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>A default age ceiling threshold to filter content.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="vfContentFilter" type="tns:CurContentFilter_VfContentFilter"
                                    minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>Profile to be applied for filtering contents. Self-selected profile. Values: adult, general, child, custom</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="vfContentFilterConf" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Additional configuration for content filter.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="vfContentFilterLang" type="tns:CurContentFilter_VfContentFilterLang"
                                    minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>Default language for content filtering ruleset. Values: CZECH</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="vfPin" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>User’s pin code.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="vfPinDisabled" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Suppress the prompt for a PIN.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="vfSafeSearchCriterion" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Search threshold to filter content.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="vfNoAdviceOfCharge" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>If set TRUE, it means the subscriber has requested not to see the Advice-of- Charge page.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getCurContentFilterResponse" type="tns:GetCurContentFilterResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service curContentFilter - Content filter attributes relating to user’s or subscriber’s Content Filtering preferences and attributes relating to it. 
		Includes credentials to enable adult content as well as content filter parameters.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteDeleteSubscriberRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service deleteSubscriber - This service deletes all subscribers’ services on network elements: - CUR (CUR Content Filter), - NPS (MMS), - ALU IN (Alcatel), - HLR (Profile), - SMS2EMAIL (SMS2Email), -EMAIL (VISTO Email, VISTO Email Enterprise Licence, VISTO Email User), - VMS (Voice Mail), - OMM (Ericsson Online Multi Mediation).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="enterpriseName" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Name of Enterprise to be provisioned into VISTO Mobile. If not present, voiceMsisdn is used as default.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteDeleteSubscriberRequest" type="tns:DeleteDeleteSubscriberRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service deleteSubscriber - This service deletes all subscribers’ services on network elements: - CUR (CUR Content Filter), - NPS (MMS), - ALU IN (Alcatel), - HLR (Profile), - SMS2EMAIL (SMS2Email), -EMAIL (VISTO Email, VISTO Email Enterprise Licence, VISTO Email User), - VMS (Voice Mail), - OMM (Ericsson Online Multi Mediation).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteDeleteSubscriberResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service deleteSubscriber - This service deletes all subscribers’ services on network elements: - CUR (CUR Content Filter), - NPS (MMS), - ALU IN (Alcatel), - HLR (Profile), - SMS2EMAIL (SMS2Email), -EMAIL (VISTO Email, VISTO Email Enterprise Licence, VISTO Email User), - VMS (Voice Mail), - OMM (Ericsson Online Multi Mediation).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteDeleteSubscriberResponse" type="tns:DeleteDeleteSubscriberResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service deleteSubscriber - This service deletes all subscribers’ services on network elements: - CUR (CUR Content Filter), - NPS (MMS), - ALU IN (Alcatel), - HLR (Profile), - SMS2EMAIL (SMS2Email), -EMAIL (VISTO Email, VISTO Email Enterprise Licence, VISTO Email User), - VMS (Voice Mail), - OMM (Ericsson Online Multi Mediation).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:simpleType name="Gprs_Qos">
      <xs:restriction base="xs:string">
         <xs:enumeration value="STANDARD"/>
         <xs:enumeration value="FUP"/>
         <xs:enumeration value="MMSONLY"/>
         <xs:enumeration value="STANDARD-VOLTE"/>
         <xs:enumeration value="MMSONLY-VOLTE"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="CreateGprsRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service gprs - General Packet Radio Service (GPRS) is a mobile data service available to users of GSM mobile phones. It is often described as “2.5G”, that is, a technology between the second (2G) and third (3G) generations of mobile telephony. It provides moderate speed data transfer, by using unused TDMA channels in the GSM network.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="type" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the requested GPRS profile (e.g. postpaid - PDPCP 20, prepaid - PDPCP 21).</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="qos" type="tns:Gprs_Qos" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Sets the requested quality of service (standard 2048 kb/s; fup - 20kb/s; MMSONLY - blocks all data APNs and allows GPRS only as transport layer for MMS). Values: STANDARD, FUP, MMSONLY, STANDARD-VOLTE, MMSONLY-VOLTE</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createGprsRequest" type="tns:CreateGprsRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service gprs - General Packet Radio Service (GPRS) is a mobile data service available to users of GSM mobile phones. It is often described as “2.5G”, that is, a technology between the second (2G) and third (3G) generations of mobile telephony. It provides moderate speed data transfer, by using unused TDMA channels in the GSM network.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateGprsResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service gprs - General Packet Radio Service (GPRS) is a mobile data service available to users of GSM mobile phones. It is often described as “2.5G”, that is, a technology between the second (2G) and third (3G) generations of mobile telephony. It provides moderate speed data transfer, by using unused TDMA channels in the GSM network.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createGprsResponse" type="tns:CreateGprsResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service gprs - General Packet Radio Service (GPRS) is a mobile data service available to users of GSM mobile phones. It is often described as “2.5G”, that is, a technology between the second (2G) and third (3G) generations of mobile telephony. It provides moderate speed data transfer, by using unused TDMA channels in the GSM network.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetGprsRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service gprs - General Packet Radio Service (GPRS) is a mobile data service available to users of GSM mobile phones. It is often described as “2.5G”, that is, a technology between the second (2G) and third (3G) generations of mobile telephony. It provides moderate speed data transfer, by using unused TDMA channels in the GSM network.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="type" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the requested GPRS profile (e.g. postpaid - PDPCP 20, prepaid - PDPCP 21).</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="qos" type="tns:Gprs_Qos" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Sets the requested quality of service (standard 2048 kb/s; fup - 20kb/s; MMSONLY - blocks all data APNs and allows GPRS only as transport layer for MMS). Values: STANDARD, FUP, MMSONLY, STANDARD-VOLTE, MMSONLY-VOLTE</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setGprsRequest" type="tns:SetGprsRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service gprs - General Packet Radio Service (GPRS) is a mobile data service available to users of GSM mobile phones. It is often described as “2.5G”, that is, a technology between the second (2G) and third (3G) generations of mobile telephony. It provides moderate speed data transfer, by using unused TDMA channels in the GSM network.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetGprsResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service gprs - General Packet Radio Service (GPRS) is a mobile data service available to users of GSM mobile phones. It is often described as “2.5G”, that is, a technology between the second (2G) and third (3G) generations of mobile telephony. It provides moderate speed data transfer, by using unused TDMA channels in the GSM network.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setGprsResponse" type="tns:SetGprsResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service gprs - General Packet Radio Service (GPRS) is a mobile data service available to users of GSM mobile phones. It is often described as “2.5G”, that is, a technology between the second (2G) and third (3G) generations of mobile telephony. It provides moderate speed data transfer, by using unused TDMA channels in the GSM network.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteGprsRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service gprs - General Packet Radio Service (GPRS) is a mobile data service available to users of GSM mobile phones. It is often described as “2.5G”, that is, a technology between the second (2G) and third (3G) generations of mobile telephony. It provides moderate speed data transfer, by using unused TDMA channels in the GSM network.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteGprsRequest" type="tns:DeleteGprsRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service gprs - General Packet Radio Service (GPRS) is a mobile data service available to users of GSM mobile phones. It is often described as “2.5G”, that is, a technology between the second (2G) and third (3G) generations of mobile telephony. It provides moderate speed data transfer, by using unused TDMA channels in the GSM network.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteGprsResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service gprs - General Packet Radio Service (GPRS) is a mobile data service available to users of GSM mobile phones. It is often described as “2.5G”, that is, a technology between the second (2G) and third (3G) generations of mobile telephony. It provides moderate speed data transfer, by using unused TDMA channels in the GSM network.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteGprsResponse" type="tns:DeleteGprsResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service gprs - General Packet Radio Service (GPRS) is a mobile data service available to users of GSM mobile phones. It is often described as “2.5G”, that is, a technology between the second (2G) and third (3G) generations of mobile telephony. It provides moderate speed data transfer, by using unused TDMA channels in the GSM network.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetGprsRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service gprs - General Packet Radio Service (GPRS) is a mobile data service available to users of GSM mobile phones. It is often described as “2.5G”, that is, a technology between the second (2G) and third (3G) generations of mobile telephony. It provides moderate speed data transfer, by using unused TDMA channels in the GSM network.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getGprsRequest" type="tns:GetGprsRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service gprs - General Packet Radio Service (GPRS) is a mobile data service available to users of GSM mobile phones. It is often described as “2.5G”, that is, a technology between the second (2G) and third (3G) generations of mobile telephony. It provides moderate speed data transfer, by using unused TDMA channels in the GSM network.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetGprsResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service gprs - General Packet Radio Service (GPRS) is a mobile data service available to users of GSM mobile phones. It is often described as “2.5G”, that is, a technology between the second (2G) and third (3G) generations of mobile telephony. It provides moderate speed data transfer, by using unused TDMA channels in the GSM network.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="type" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identifies the requested GPRS profile (e.g. postpaid - PDPCP 20, prepaid - PDPCP 21).</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="qos" type="tns:Gprs_Qos" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Sets the requested quality of service (standard 2048 kb/s; fup - 20kb/s; MMSONLY - blocks all data APNs and allows GPRS only as transport layer for MMS). Values: STANDARD, FUP, MMSONLY, STANDARD-VOLTE, MMSONLY-VOLTE</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getGprsResponse" type="tns:GetGprsResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service gprs - General Packet Radio Service (GPRS) is a mobile data service available to users of GSM mobile phones. It is often described as “2.5G”, that is, a technology between the second (2G) and third (3G) generations of mobile telephony. It provides moderate speed data transfer, by using unused TDMA channels in the GSM network.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateGprsProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service gprsProfile - This service activates a new customer subscription in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="type" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Type of the customer. Based on the customer type OMM alters default behaviour of GPRS usage charging.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="billPeriod" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Current bill period of post-paid customer. Mandatory for type POSTPAID and CONVERG.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fupAutorebuy" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>TRUE if FUP autorebuy is activated, FALSE if FUP autorebuy is not activated.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createGprsProfileRequest" type="tns:CreateGprsProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service gprsProfile - This service activates a new customer subscription in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateGprsProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service gprsProfile - This service activates a new customer subscription in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createGprsProfileResponse" type="tns:CreateGprsProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service gprsProfile - This service activates a new customer subscription in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetGprsProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service gprsProfile - This service activates a new customer subscription in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="type" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Type of the customer. Based on the customer type OMM alters default behaviour of GPRS usage charging.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="billPeriod" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Current bill period of post-paid customer. Mandatory for type POSTPAID and CONVERG.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fupAutorebuy" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>TRUE if FUP autorebuy is activated, FALSE if FUP autorebuy is not activated.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="newVoiceMsisdn" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies new subscriber identifier in MSISDN swap.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setGprsProfileRequest" type="tns:SetGprsProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service gprsProfile - This service activates a new customer subscription in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetGprsProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service gprsProfile - This service activates a new customer subscription in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setGprsProfileResponse" type="tns:SetGprsProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service gprsProfile - This service activates a new customer subscription in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteGprsProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service gprsProfile - This service activates a new customer subscription in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteGprsProfileRequest" type="tns:DeleteGprsProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service gprsProfile - This service activates a new customer subscription in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteGprsProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service gprsProfile - This service activates a new customer subscription in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteGprsProfileResponse" type="tns:DeleteGprsProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service gprsProfile - This service activates a new customer subscription in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetGprsProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service gprsProfile - This service activates a new customer subscription in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getGprsProfileRequest" type="tns:GetGprsProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service gprsProfile - This service activates a new customer subscription in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetGprsProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service gprsProfile - This service activates a new customer subscription in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="type" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Type of the customer. Based on the customer type OMM alters default behaviour of GPRS usage charging.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="billPeriod" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Current bill period of post-paid customer. Mandatory for type POSTPAID and CONVERG.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="fupAutorebuy" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>TRUE if FUP autorebuy is activated, FALSE if FUP autorebuy is not activated.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="pricePlans" minOccurs="0" maxOccurs="unbounded">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="pricePlan" type="xs:long" minOccurs="1" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Identifies the price plan - please refer to table in service gprsProfilePricePlan.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="startDate" type="xs:dateTime" minOccurs="1" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Start date of the price plan.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="finishDate" type="xs:dateTime" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>End date of the price plan. Missing (null) value specifies indefinite period.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="fupLimitId" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Individual limit on subscription level, ID from predefined set, can be null.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="numberOfAutoRebuys" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Number of autorebuys, which can happen during one bill cycle. Can be null. Value “-1” indicates unlimited number.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="autoRebuyFupLimitId" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Specifies FUP bundle ID, which will be used when AutoRebuy is triggered.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="activePeriod" minOccurs="0" maxOccurs="unbounded">
                                    <xs:complexType>
                                       <xs:sequence>
                                          <xs:element name="startDate" type="xs:dateTime" minOccurs="1" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>Start date of currently active period.</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                          <xs:element name="finishDate" type="xs:dateTime" minOccurs="0" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>End date of currently active period.</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                          <xs:element name="usage" type="xs:long" minOccurs="1" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>Usage in active period in bytes.</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                          <xs:element name="totalUsage" type="xs:long" minOccurs="1" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>Total Usage in active period in bytes.</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                          <xs:element name="fupLimit" type="xs:long" minOccurs="1" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>FUP limit for active period.</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                          <xs:element name="numberOfAutoRebuys" type="xs:long" minOccurs="0" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>Number of remaining autorebuys within related bill cycle. Can be null. Value “-1” indicates unlimited number.</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                       </xs:sequence>
                                    </xs:complexType>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getGprsProfileResponse" type="tns:GetGprsProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service gprsProfile - This service activates a new customer subscription in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetGprsProfileCostControlRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service gprsProfileCostControl - This service enables setting or displaying of cost control roaming solution parameters 
		for subscriber in Ericsson Online Multi Mediation. Service doesn’t support operations create and delete.
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="controlEnabled" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the new subscriber Opt status and control service. Switching on  when TRUE, Switching off when FALSE, FALSE for Opt-out, TRUE for Opt-in.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="control80WarningEnabled" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the new subscriber Opt status. FALSE for 80% Spending limit Opt-out, TRUE for 80% Spending limit Opt-in.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="lowLimit" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>New value of lowLimit (Spending Limit) in CZK Hallers.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="continueOverLowLimit" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Allows continue using roaming data service if Spending Limit is reached (or almost reached).
			TRUE - continue using service. FALSE - no actionsOperation.
			Get indicates that service was allowed after reaching spending limit.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="counter" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>New value of Cost Control Counter in CZK Hallers. Valid value of counter, 0 - reset all flags.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="type" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s type: POSTPAID, PREPAID, NGIN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="billPeriod" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Postpaid subscriber’s billing period.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="costPeriodType" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Type of the cost control period (e.g. ROAMING).</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Start date of the cost period.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="finishDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>End date of the cost period.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="flagLowLimit80PercentReached" type="xs:boolean" minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>The flag indicating whether the customer has already reached 80% of the set low spending limit value in current cost period. 
			TRUE - limit reached, FALSE - limit not reached.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="flagLowLimit100PercentReached" type="xs:boolean" minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>The flag indicating whether the customer has already reached 100% of the set low spending limit value in current cost period. 
			TRUE - limit reached, FALSE - limit not reached.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="flagHighLimit100PercentReached" type="xs:boolean" minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>The flag indicating whether the customer has already reached 100% of the hard spending limit value in current cost period. 
			TRUE - limit reached, FALSE - limit doesn’t reached.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setGprsProfileCostControlRequest"
               type="tns:SetGprsProfileCostControlRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service gprsProfileCostControl - This service enables setting or displaying of cost control roaming solution parameters 
		for subscriber in Ericsson Online Multi Mediation. Service doesn’t support operations create and delete.
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetGprsProfileCostControlResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service gprsProfileCostControl - This service enables setting or displaying of cost control roaming solution parameters 
		for subscriber in Ericsson Online Multi Mediation. Service doesn’t support operations create and delete.
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setGprsProfileCostControlResponse"
               type="tns:SetGprsProfileCostControlResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service gprsProfileCostControl - This service enables setting or displaying of cost control roaming solution parameters 
		for subscriber in Ericsson Online Multi Mediation. Service doesn’t support operations create and delete.
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetGprsProfileCostControlRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service gprsProfileCostControl - This service enables setting or displaying of cost control roaming solution parameters 
		for subscriber in Ericsson Online Multi Mediation. Service doesn’t support operations create and delete.
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getGprsProfileCostControlRequest"
               type="tns:GetGprsProfileCostControlRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service gprsProfileCostControl - This service enables setting or displaying of cost control roaming solution parameters 
		for subscriber in Ericsson Online Multi Mediation. Service doesn’t support operations create and delete.
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetGprsProfileCostControlResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service gprsProfileCostControl - This service enables setting or displaying of cost control roaming solution parameters 
		for subscriber in Ericsson Online Multi Mediation. Service doesn’t support operations create and delete.
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="controlEnabled" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identifies the new subscriber Opt status and control service. Switching on  when TRUE, Switching off when FALSE, FALSE for Opt-out, TRUE for Opt-in.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="control80WarningEnabled" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identifies the new subscriber Opt status. FALSE for 80% Spending limit Opt-out, TRUE for 80% Spending limit Opt-in.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="lowLimit" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>New value of lowLimit (Spending Limit) in CZK Hallers.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="continueOverLowLimit" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Allows continue using roaming data service if Spending Limit is reached (or almost reached).
			TRUE - continue using service. FALSE - no actionsOperation.
			Get indicates that service was allowed after reaching spending limit.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="counter" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>New value of Cost Control Counter in CZK Hallers. Valid value of counter, 0 - reset all flags.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="type" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Subscriber’s type: POSTPAID, PREPAID, NGIN</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="billPeriod" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Postpaid subscriber’s billing period.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="costPeriodType" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Type of the cost control period (e.g. ROAMING).</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Start date of the cost period.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="finishDate" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>End date of the cost period.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="flagLowLimit80PercentReached" type="xs:boolean" minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>The flag indicating whether the customer has already reached 80% of the set low spending limit value in current cost period. 
			TRUE - limit reached, FALSE - limit not reached.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="flagLowLimit100PercentReached" type="xs:boolean" minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>The flag indicating whether the customer has already reached 100% of the set low spending limit value in current cost period. 
			TRUE - limit reached, FALSE - limit not reached.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="flagHighLimit100PercentReached" type="xs:boolean" minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>The flag indicating whether the customer has already reached 100% of the hard spending limit value in current cost period. 
			TRUE - limit reached, FALSE - limit doesn’t reached.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getGprsProfileCostControlResponse"
               type="tns:GetGprsProfileCostControlResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service gprsProfileCostControl - This service enables setting or displaying of cost control roaming solution parameters 
		for subscriber in Ericsson Online Multi Mediation. Service doesn’t support operations create and delete.
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateGprsProfileFupBundleRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service gprsProfileFupBundle - This service enables purchase of FUP bundle for subscriber in Ericsson Online Multi Mediation. 
		Service support only operation CREATE.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fupType" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Type of the FUP bundle.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="pricePlan" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the price plan, Mandatory for V2 and V4, Optional for MVNO.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Start date of the price plan.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createGprsProfileFupBundleRequest"
               type="tns:CreateGprsProfileFupBundleRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service gprsProfileFupBundle - This service enables purchase of FUP bundle for subscriber in Ericsson Online Multi Mediation. 
		Service support only operation CREATE.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateGprsProfileFupBundleResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service gprsProfileFupBundle - This service enables purchase of FUP bundle for subscriber in Ericsson Online Multi Mediation. 
		Service support only operation CREATE.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createGprsProfileFupBundleResponse"
               type="tns:CreateGprsProfileFupBundleResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service gprsProfileFupBundle - This service enables purchase of FUP bundle for subscriber in Ericsson Online Multi Mediation. 
		Service support only operation CREATE.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateGprsProfilePricePlanRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service gprsProfilePricePlan - This service enables setting of pricing plans for subscriber in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="pricePlan" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the price plan. Valid OMM price plan value is required.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Start date of the price plan. Valid start date for CREATE required.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="finishDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>End date of the price plan. For CREATE operations only missing (null) value specifies indefinite period.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="masterMsisdn" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the master subscriber of the shared FUP group that the subscription belongs to</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fupLimitId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Individual limit on subscription level, ID from predefined set, can be null.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="numberOfAutoRebuys" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Number of autorebuys, which can happen during one bill cycle. Can be null. Value “-1” indicates unlimited number.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="superchargerId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Specifies FUP bundle ID, which will be used for setting the Super Charger.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createGprsProfilePricePlanRequest"
               type="tns:CreateGprsProfilePricePlanRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service gprsProfilePricePlan - This service enables setting of pricing plans for subscriber in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateGprsProfilePricePlanResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service gprsProfilePricePlan - This service enables setting of pricing plans for subscriber in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createGprsProfilePricePlanResponse"
               type="tns:CreateGprsProfilePricePlanResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service gprsProfilePricePlan - This service enables setting of pricing plans for subscriber in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetGprsProfilePricePlanRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service gprsProfilePricePlan - This service enables setting of pricing plans for subscriber in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="pricePlan" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the price plan. Valid OMM price plan value is required.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Start date of the price plan. Valid start date for CREATE required.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="finishDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>End date of the price plan. For CREATE operations only missing (null) value specifies indefinite period.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="usage" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Usage counter for active period (SET purposes only).</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fupLimitId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Individual limit on subscription level, ID from predefined set, can be null.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="numberOfAutoRebuys" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Number of autorebuys, which can happen during one bill cycle. Can be null. Value “-1” indicates unlimited number.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="superchargerId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Specifies FUP bundle ID, which will be used for setting the Super Charger.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setGprsProfilePricePlanRequest" type="tns:SetGprsProfilePricePlanRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service gprsProfilePricePlan - This service enables setting of pricing plans for subscriber in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetGprsProfilePricePlanResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service gprsProfilePricePlan - This service enables setting of pricing plans for subscriber in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setGprsProfilePricePlanResponse"
               type="tns:SetGprsProfilePricePlanResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service gprsProfilePricePlan - This service enables setting of pricing plans for subscriber in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteGprsProfilePricePlanRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service gprsProfilePricePlan - This service enables setting of pricing plans for subscriber in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="pricePlan" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the price plan. Valid OMM price plan value is required.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Start date of the price plan. Valid start date for CREATE required.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="finishDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>End date of the price plan. For CREATE operations only missing (null) value specifies indefinite period.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteGprsProfilePricePlanRequest"
               type="tns:DeleteGprsProfilePricePlanRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service gprsProfilePricePlan - This service enables setting of pricing plans for subscriber in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteGprsProfilePricePlanResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service gprsProfilePricePlan - This service enables setting of pricing plans for subscriber in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteGprsProfilePricePlanResponse"
               type="tns:DeleteGprsProfilePricePlanResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service gprsProfilePricePlan - This service enables setting of pricing plans for subscriber in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetGprsProfilePricePlanRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service gprsProfilePricePlan - This service enables setting of pricing plans for subscriber in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="pricePlan" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the price plan. Valid OMM price plan value is required.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getGprsProfilePricePlanRequest" type="tns:GetGprsProfilePricePlanRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service gprsProfilePricePlan - This service enables setting of pricing plans for subscriber in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetGprsProfilePricePlanResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service gprsProfilePricePlan - This service enables setting of pricing plans for subscriber in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="pricePlan" type="xs:long" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identifies the price plan. Valid OMM price plan value is required.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Start date of the price plan. Valid start date for CREATE required.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="finishDate" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>End date of the price plan. For CREATE operations only missing (null) value specifies indefinite period.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="fupLimitId" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Individual limit on subscription level, ID from predefined set, can be null.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="numberOfAutoRebuys" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Number of autorebuys, which can happen during one bill cycle. Can be null. Value “-1” indicates unlimited number.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="autoRebuyFupLimitId" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Specifies FUP bundle ID, which will be used when AutoRebuy is triggered.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="activePeriod" minOccurs="0" maxOccurs="unbounded">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="startDate" type="xs:dateTime" minOccurs="1" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Start date of currently active period.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="finishDate" type="xs:dateTime" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>End date of currently active period.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="usage" type="xs:long" minOccurs="1" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>MSISDN of shared FUP group master subscriber</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="totalUsage" type="xs:long" minOccurs="1" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Total Usage in active period in bytes.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="fupLimit" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>FUP limit for active period.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="numberOfAutoRebuys" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Number of remaining autorebuys within related bill cycle. Can be null. Value “-1” indicates unlimited number.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="superchargerId" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Specifies FUP bundle ID, which will be used for setting the Super Charger.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getGprsProfilePricePlanResponse"
               type="tns:GetGprsProfilePricePlanResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service gprsProfilePricePlan - This service enables setting of pricing plans for subscriber in Ericsson Online Multi Mediation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:simpleType name="ImsiChange_State">
      <xs:restriction base="xs:string">
         <xs:enumeration value="PENDING"/>
         <xs:enumeration value="EXECUTED"/>
         <xs:enumeration value="FORCED"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="CreateImsiChangeRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service imsiChange - This service provides the IMSI change possibility.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="newImsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The new IMSI for the IMSI Change service. Valid subscriber new IMSI number.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="oldImsi" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the IMSI Change service. Valid subscriber old IMSI number.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="activationDate" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Activation date of the new IMSI. If valid date is missing; request is processed immediatelly. The future date is handled by GSM Network (not in service provisioning tool). Valid date in format YYMMDD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createImsiChangeRequest" type="tns:CreateImsiChangeRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service imsiChange - This service provides the IMSI change possibility.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateImsiChangeResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service imsiChange - This service provides the IMSI change possibility.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createImsiChangeResponse" type="tns:CreateImsiChangeResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service imsiChange - This service provides the IMSI change possibility.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetImsiChangeRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service imsiChange - This service provides the IMSI change possibility.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="newImsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The new IMSI for the IMSI Change service. Valid subscriber new IMSI number.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="activationDate" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Activation date of the new IMSI. If valid date is missing; request is processed immediatelly. The future date is handled by GSM Network (not in service provisioning tool). Valid date in format YYMMDD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setImsiChangeRequest" type="tns:SetImsiChangeRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service imsiChange - This service provides the IMSI change possibility.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetImsiChangeResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service imsiChange - This service provides the IMSI change possibility.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setImsiChangeResponse" type="tns:SetImsiChangeResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service imsiChange - This service provides the IMSI change possibility.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteImsiChangeRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service imsiChange - This service provides the IMSI change possibility.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="newImsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The new IMSI for the IMSI Change service. Valid subscriber new IMSI number.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteImsiChangeRequest" type="tns:DeleteImsiChangeRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service imsiChange - This service provides the IMSI change possibility.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteImsiChangeResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service imsiChange - This service provides the IMSI change possibility.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteImsiChangeResponse" type="tns:DeleteImsiChangeResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service imsiChange - This service provides the IMSI change possibility.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetImsiChangeRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service imsiChange - This service provides the IMSI change possibility.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="newImsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The new IMSI for the IMSI Change service. Valid subscriber new IMSI number.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getImsiChangeRequest" type="tns:GetImsiChangeRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service imsiChange - This service provides the IMSI change possibility.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetImsiChangeResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service imsiChange - This service provides the IMSI change possibility.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="oldImsi" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identifies the subscriber to whom provide the IMSI Change service. Valid subscriber old IMSI number.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="activationDate" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Activation date of the new IMSI. If valid date is missing; request is processed immediatelly. The future date is handled by GSM Network (not in service provisioning tool). Valid date in format YYMMDD.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="state" type="tns:ImsiChange_State" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>pending - Indicates that Change-over is `pending'. executed - Indicates that Change-over is `executed. forced - Indicates that Change-over is `forced'. Values: PENDING, EXECUTED, FORCED</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getImsiChangeResponse" type="tns:GetImsiChangeResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service imsiChange - This service provides the IMSI change possibility.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateLocalBreakOutRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service localBreakOut - This service handles subscriber of LBO service.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="transactionId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Transaction ID generated by ARP</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The new IMSI for the IMSI Change service</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createLocalBreakOutRequest" type="tns:CreateLocalBreakOutRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service localBreakOut - This service handles subscriber of LBO service.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateLocalBreakOutResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service localBreakOut - This service handles subscriber of LBO service.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createLocalBreakOutResponse" type="tns:CreateLocalBreakOutResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service localBreakOut - This service handles subscriber of LBO service.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteLocalBreakOutRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service localBreakOut - This service handles subscriber of LBO service.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="transactionId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Transaction ID generated by ARP</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The new IMSI for the IMSI Change service</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteLocalBreakOutRequest" type="tns:DeleteLocalBreakOutRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service localBreakOut - This service handles subscriber of LBO service.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteLocalBreakOutResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service localBreakOut - This service handles subscriber of LBO service.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteLocalBreakOutResponse" type="tns:DeleteLocalBreakOutResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service localBreakOut - This service handles subscriber of LBO service.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetLocalBreakOutRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service localBreakOut - This service handles subscriber of LBO service.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="transactionId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Transaction ID generated by ARP</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The new IMSI for the IMSI Change service</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getLocalBreakOutRequest" type="tns:GetLocalBreakOutRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service localBreakOut - This service handles subscriber of LBO service.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetLocalBreakOutResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service localBreakOut - This service handles subscriber of LBO service.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="transactionId" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Transaction ID.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getLocalBreakOutResponse" type="tns:GetLocalBreakOutResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service localBreakOut - This service handles subscriber of LBO service.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:simpleType name="Mca_Language">
      <xs:restriction base="xs:string">
         <xs:enumeration value="CZECH"/>
         <xs:enumeration value="ENGLISH"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="CreateMcaRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service mca - The Missed Call Alert (MCA) service enables subscribers to recover “lost calls” that result from periods when a subscriber’s handset is turned off or out of coverage. In particular, this service is as complementary to the “missed calls” handset feature. Whereas handsets can track missed calls because the line was busy (with service “call waiting” active) or because they were not answered, the MCA service will notify subscribers about call attempts made when the phone was not reachable.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="language" type="tns:Mca_Language" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Sets the MCA notification SMS language. Values: CZECH, ENGLISH</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createMcaRequest" type="tns:CreateMcaRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service mca - The Missed Call Alert (MCA) service enables subscribers to recover “lost calls” that result from periods when a subscriber’s handset is turned off or out of coverage. In particular, this service is as complementary to the “missed calls” handset feature. Whereas handsets can track missed calls because the line was busy (with service “call waiting” active) or because they were not answered, the MCA service will notify subscribers about call attempts made when the phone was not reachable.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateMcaResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service mca - The Missed Call Alert (MCA) service enables subscribers to recover “lost calls” that result from periods when a subscriber’s handset is turned off or out of coverage. In particular, this service is as complementary to the “missed calls” handset feature. Whereas handsets can track missed calls because the line was busy (with service “call waiting” active) or because they were not answered, the MCA service will notify subscribers about call attempts made when the phone was not reachable.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createMcaResponse" type="tns:CreateMcaResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service mca - The Missed Call Alert (MCA) service enables subscribers to recover “lost calls” that result from periods when a subscriber’s handset is turned off or out of coverage. In particular, this service is as complementary to the “missed calls” handset feature. Whereas handsets can track missed calls because the line was busy (with service “call waiting” active) or because they were not answered, the MCA service will notify subscribers about call attempts made when the phone was not reachable.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetMcaRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service mca - The Missed Call Alert (MCA) service enables subscribers to recover “lost calls” that result from periods when a subscriber’s handset is turned off or out of coverage. In particular, this service is as complementary to the “missed calls” handset feature. Whereas handsets can track missed calls because the line was busy (with service “call waiting” active) or because they were not answered, the MCA service will notify subscribers about call attempts made when the phone was not reachable.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="language" type="tns:Mca_Language" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Sets the MCA notification SMS language. Values: CZECH, ENGLISH</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setMcaRequest" type="tns:SetMcaRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service mca - The Missed Call Alert (MCA) service enables subscribers to recover “lost calls” that result from periods when a subscriber’s handset is turned off or out of coverage. In particular, this service is as complementary to the “missed calls” handset feature. Whereas handsets can track missed calls because the line was busy (with service “call waiting” active) or because they were not answered, the MCA service will notify subscribers about call attempts made when the phone was not reachable.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetMcaResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service mca - The Missed Call Alert (MCA) service enables subscribers to recover “lost calls” that result from periods when a subscriber’s handset is turned off or out of coverage. In particular, this service is as complementary to the “missed calls” handset feature. Whereas handsets can track missed calls because the line was busy (with service “call waiting” active) or because they were not answered, the MCA service will notify subscribers about call attempts made when the phone was not reachable.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setMcaResponse" type="tns:SetMcaResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service mca - The Missed Call Alert (MCA) service enables subscribers to recover “lost calls” that result from periods when a subscriber’s handset is turned off or out of coverage. In particular, this service is as complementary to the “missed calls” handset feature. Whereas handsets can track missed calls because the line was busy (with service “call waiting” active) or because they were not answered, the MCA service will notify subscribers about call attempts made when the phone was not reachable.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteMcaRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service mca - The Missed Call Alert (MCA) service enables subscribers to recover “lost calls” that result from periods when a subscriber’s handset is turned off or out of coverage. In particular, this service is as complementary to the “missed calls” handset feature. Whereas handsets can track missed calls because the line was busy (with service “call waiting” active) or because they were not answered, the MCA service will notify subscribers about call attempts made when the phone was not reachable.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteMcaRequest" type="tns:DeleteMcaRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service mca - The Missed Call Alert (MCA) service enables subscribers to recover “lost calls” that result from periods when a subscriber’s handset is turned off or out of coverage. In particular, this service is as complementary to the “missed calls” handset feature. Whereas handsets can track missed calls because the line was busy (with service “call waiting” active) or because they were not answered, the MCA service will notify subscribers about call attempts made when the phone was not reachable.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteMcaResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service mca - The Missed Call Alert (MCA) service enables subscribers to recover “lost calls” that result from periods when a subscriber’s handset is turned off or out of coverage. In particular, this service is as complementary to the “missed calls” handset feature. Whereas handsets can track missed calls because the line was busy (with service “call waiting” active) or because they were not answered, the MCA service will notify subscribers about call attempts made when the phone was not reachable.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteMcaResponse" type="tns:DeleteMcaResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service mca - The Missed Call Alert (MCA) service enables subscribers to recover “lost calls” that result from periods when a subscriber’s handset is turned off or out of coverage. In particular, this service is as complementary to the “missed calls” handset feature. Whereas handsets can track missed calls because the line was busy (with service “call waiting” active) or because they were not answered, the MCA service will notify subscribers about call attempts made when the phone was not reachable.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetMcaRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service mca - The Missed Call Alert (MCA) service enables subscribers to recover “lost calls” that result from periods when a subscriber’s handset is turned off or out of coverage. In particular, this service is as complementary to the “missed calls” handset feature. Whereas handsets can track missed calls because the line was busy (with service “call waiting” active) or because they were not answered, the MCA service will notify subscribers about call attempts made when the phone was not reachable.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getMcaRequest" type="tns:GetMcaRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service mca - The Missed Call Alert (MCA) service enables subscribers to recover “lost calls” that result from periods when a subscriber’s handset is turned off or out of coverage. In particular, this service is as complementary to the “missed calls” handset feature. Whereas handsets can track missed calls because the line was busy (with service “call waiting” active) or because they were not answered, the MCA service will notify subscribers about call attempts made when the phone was not reachable.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetMcaResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service mca - The Missed Call Alert (MCA) service enables subscribers to recover “lost calls” that result from periods when a subscriber’s handset is turned off or out of coverage. In particular, this service is as complementary to the “missed calls” handset feature. Whereas handsets can track missed calls because the line was busy (with service “call waiting” active) or because they were not answered, the MCA service will notify subscribers about call attempts made when the phone was not reachable.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="language" type="tns:Mca_Language" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Sets the MCA notification SMS language. Values: CZECH, ENGLISH</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getMcaResponse" type="tns:GetMcaResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service mca - The Missed Call Alert (MCA) service enables subscribers to recover “lost calls” that result from periods when a subscriber’s handset is turned off or out of coverage. In particular, this service is as complementary to the “missed calls” handset feature. Whereas handsets can track missed calls because the line was busy (with service “call waiting” active) or because they were not answered, the MCA service will notify subscribers about call attempts made when the phone was not reachable.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateMmsRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service mms - Multimedia Messaging Service (MMS) allows sending messages that includes multimedia objects (images, audio, video, rich text) 
		and not just text messages as in Short message service (SMS).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="subscriberType" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber type.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createMmsRequest" type="tns:CreateMmsRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service mms - Multimedia Messaging Service (MMS) allows sending messages that includes multimedia objects (images, audio, video, rich text) 
		and not just text messages as in Short message service (SMS).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateMmsResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service mms - Multimedia Messaging Service (MMS) allows sending messages that includes multimedia objects (images, audio, video, rich text) 
		and not just text messages as in Short message service (SMS).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createMmsResponse" type="tns:CreateMmsResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service mms - Multimedia Messaging Service (MMS) allows sending messages that includes multimedia objects (images, audio, video, rich text) 
		and not just text messages as in Short message service (SMS).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetMmsRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service mms - Multimedia Messaging Service (MMS) allows sending messages that includes multimedia objects (images, audio, video, rich text) 
		and not just text messages as in Short message service (SMS).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="newVoiceMsisdn" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>New voiceMsisdn for subscriber during MSISDN swap. Valid subscriber voice MSISDN number.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="subscriberType" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber type.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setMmsRequest" type="tns:SetMmsRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service mms - Multimedia Messaging Service (MMS) allows sending messages that includes multimedia objects (images, audio, video, rich text) 
		and not just text messages as in Short message service (SMS).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetMmsResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service mms - Multimedia Messaging Service (MMS) allows sending messages that includes multimedia objects (images, audio, video, rich text) 
		and not just text messages as in Short message service (SMS).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setMmsResponse" type="tns:SetMmsResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service mms - Multimedia Messaging Service (MMS) allows sending messages that includes multimedia objects (images, audio, video, rich text) 
		and not just text messages as in Short message service (SMS).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteMmsRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service mms - Multimedia Messaging Service (MMS) allows sending messages that includes multimedia objects (images, audio, video, rich text) 
		and not just text messages as in Short message service (SMS).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteMmsRequest" type="tns:DeleteMmsRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service mms - Multimedia Messaging Service (MMS) allows sending messages that includes multimedia objects (images, audio, video, rich text) 
		and not just text messages as in Short message service (SMS).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteMmsResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service mms - Multimedia Messaging Service (MMS) allows sending messages that includes multimedia objects (images, audio, video, rich text) 
		and not just text messages as in Short message service (SMS).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteMmsResponse" type="tns:DeleteMmsResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service mms - Multimedia Messaging Service (MMS) allows sending messages that includes multimedia objects (images, audio, video, rich text) 
		and not just text messages as in Short message service (SMS).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetMmsRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service mms - Multimedia Messaging Service (MMS) allows sending messages that includes multimedia objects (images, audio, video, rich text) 
		and not just text messages as in Short message service (SMS).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getMmsRequest" type="tns:GetMmsRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service mms - Multimedia Messaging Service (MMS) allows sending messages that includes multimedia objects (images, audio, video, rich text) 
		and not just text messages as in Short message service (SMS).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetMmsResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service mms - Multimedia Messaging Service (MMS) allows sending messages that includes multimedia objects (images, audio, video, rich text) 
		and not just text messages as in Short message service (SMS).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="subscriberType" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identifies the subscriber type.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getMmsResponse" type="tns:GetMmsResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service mms - Multimedia Messaging Service (MMS) allows sending messages that includes multimedia objects (images, audio, video, rich text) 
		and not just text messages as in Short message service (SMS).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateMsisdnChangeRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service msisdnChange - This service provides the MSIDN change possibility. Changes MSISDN on network. Clones original MSISDN network profile, creates new MSISDN and deletes original.
		Service queries and sets following services:
		•	Barring by Customer
		•	Barring by Operator
		•	Call forwarding
		•	Call history
		•	Call Waiting
		•	CLIP
		•	CLIR
		•	COLP
		•	COLR
		•	Data
		•	Data for WAP
		•	Fax
		•	GPRS
		•	International calls HR
		•	MCA
		•	Ported Number
		•	MultiParty
		•	Ported Number Notification
		•	Roaming
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="newMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The new MSISDN for the MSISDN Change service. Valid subscriber new MSISDN number.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The new IMSI for the MSISDN Change service. Valid subscriber new IMSI number.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="oldMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the MSISDN Change service. Valid subscriber old MSISDN number.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createMsisdnChangeRequest" type="tns:CreateMsisdnChangeRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service msisdnChange - This service provides the MSIDN change possibility. Changes MSISDN on network. Clones original MSISDN network profile, creates new MSISDN and deletes original.
		Service queries and sets following services:
		•	Barring by Customer
		•	Barring by Operator
		•	Call forwarding
		•	Call history
		•	Call Waiting
		•	CLIP
		•	CLIR
		•	COLP
		•	COLR
		•	Data
		•	Data for WAP
		•	Fax
		•	GPRS
		•	International calls HR
		•	MCA
		•	Ported Number
		•	MultiParty
		•	Ported Number Notification
		•	Roaming
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateMsisdnChangeResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service msisdnChange - This service provides the MSIDN change possibility. Changes MSISDN on network. Clones original MSISDN network profile, creates new MSISDN and deletes original.
		Service queries and sets following services:
		•	Barring by Customer
		•	Barring by Operator
		•	Call forwarding
		•	Call history
		•	Call Waiting
		•	CLIP
		•	CLIR
		•	COLP
		•	COLR
		•	Data
		•	Data for WAP
		•	Fax
		•	GPRS
		•	International calls HR
		•	MCA
		•	Ported Number
		•	MultiParty
		•	Ported Number Notification
		•	Roaming
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createMsisdnChangeResponse" type="tns:CreateMsisdnChangeResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service msisdnChange - This service provides the MSIDN change possibility. Changes MSISDN on network. Clones original MSISDN network profile, creates new MSISDN and deletes original.
		Service queries and sets following services:
		•	Barring by Customer
		•	Barring by Operator
		•	Call forwarding
		•	Call history
		•	Call Waiting
		•	CLIP
		•	CLIR
		•	COLP
		•	COLR
		•	Data
		•	Data for WAP
		•	Fax
		•	GPRS
		•	International calls HR
		•	MCA
		•	Ported Number
		•	MultiParty
		•	Ported Number Notification
		•	Roaming
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetMsisdnChangeRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service msisdnChange - This service provides the MSIDN change possibility. Changes MSISDN on network. Clones original MSISDN network profile, creates new MSISDN and deletes original.
		Service queries and sets following services:
		•	Barring by Customer
		•	Barring by Operator
		•	Call forwarding
		•	Call history
		•	Call Waiting
		•	CLIP
		•	CLIR
		•	COLP
		•	COLR
		•	Data
		•	Data for WAP
		•	Fax
		•	GPRS
		•	International calls HR
		•	MCA
		•	Ported Number
		•	MultiParty
		•	Ported Number Notification
		•	Roaming
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setMsisdnChangeRequest" type="tns:SetMsisdnChangeRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service msisdnChange - This service provides the MSIDN change possibility. Changes MSISDN on network. Clones original MSISDN network profile, creates new MSISDN and deletes original.
		Service queries and sets following services:
		•	Barring by Customer
		•	Barring by Operator
		•	Call forwarding
		•	Call history
		•	Call Waiting
		•	CLIP
		•	CLIR
		•	COLP
		•	COLR
		•	Data
		•	Data for WAP
		•	Fax
		•	GPRS
		•	International calls HR
		•	MCA
		•	Ported Number
		•	MultiParty
		•	Ported Number Notification
		•	Roaming
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetMsisdnChangeResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service msisdnChange - This service provides the MSIDN change possibility. Changes MSISDN on network. Clones original MSISDN network profile, creates new MSISDN and deletes original.
		Service queries and sets following services:
		•	Barring by Customer
		•	Barring by Operator
		•	Call forwarding
		•	Call history
		•	Call Waiting
		•	CLIP
		•	CLIR
		•	COLP
		•	COLR
		•	Data
		•	Data for WAP
		•	Fax
		•	GPRS
		•	International calls HR
		•	MCA
		•	Ported Number
		•	MultiParty
		•	Ported Number Notification
		•	Roaming
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setMsisdnChangeResponse" type="tns:SetMsisdnChangeResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service msisdnChange - This service provides the MSIDN change possibility. Changes MSISDN on network. Clones original MSISDN network profile, creates new MSISDN and deletes original.
		Service queries and sets following services:
		•	Barring by Customer
		•	Barring by Operator
		•	Call forwarding
		•	Call history
		•	Call Waiting
		•	CLIP
		•	CLIR
		•	COLP
		•	COLR
		•	Data
		•	Data for WAP
		•	Fax
		•	GPRS
		•	International calls HR
		•	MCA
		•	Ported Number
		•	MultiParty
		•	Ported Number Notification
		•	Roaming
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteMsisdnChangeRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service msisdnChange - This service provides the MSIDN change possibility. Changes MSISDN on network. Clones original MSISDN network profile, creates new MSISDN and deletes original.
		Service queries and sets following services:
		•	Barring by Customer
		•	Barring by Operator
		•	Call forwarding
		•	Call history
		•	Call Waiting
		•	CLIP
		•	CLIR
		•	COLP
		•	COLR
		•	Data
		•	Data for WAP
		•	Fax
		•	GPRS
		•	International calls HR
		•	MCA
		•	Ported Number
		•	MultiParty
		•	Ported Number Notification
		•	Roaming
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteMsisdnChangeRequest" type="tns:DeleteMsisdnChangeRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service msisdnChange - This service provides the MSIDN change possibility. Changes MSISDN on network. Clones original MSISDN network profile, creates new MSISDN and deletes original.
		Service queries and sets following services:
		•	Barring by Customer
		•	Barring by Operator
		•	Call forwarding
		•	Call history
		•	Call Waiting
		•	CLIP
		•	CLIR
		•	COLP
		•	COLR
		•	Data
		•	Data for WAP
		•	Fax
		•	GPRS
		•	International calls HR
		•	MCA
		•	Ported Number
		•	MultiParty
		•	Ported Number Notification
		•	Roaming
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteMsisdnChangeResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service msisdnChange - This service provides the MSIDN change possibility. Changes MSISDN on network. Clones original MSISDN network profile, creates new MSISDN and deletes original.
		Service queries and sets following services:
		•	Barring by Customer
		•	Barring by Operator
		•	Call forwarding
		•	Call history
		•	Call Waiting
		•	CLIP
		•	CLIR
		•	COLP
		•	COLR
		•	Data
		•	Data for WAP
		•	Fax
		•	GPRS
		•	International calls HR
		•	MCA
		•	Ported Number
		•	MultiParty
		•	Ported Number Notification
		•	Roaming
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteMsisdnChangeResponse" type="tns:DeleteMsisdnChangeResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service msisdnChange - This service provides the MSIDN change possibility. Changes MSISDN on network. Clones original MSISDN network profile, creates new MSISDN and deletes original.
		Service queries and sets following services:
		•	Barring by Customer
		•	Barring by Operator
		•	Call forwarding
		•	Call history
		•	Call Waiting
		•	CLIP
		•	CLIR
		•	COLP
		•	COLR
		•	Data
		•	Data for WAP
		•	Fax
		•	GPRS
		•	International calls HR
		•	MCA
		•	Ported Number
		•	MultiParty
		•	Ported Number Notification
		•	Roaming
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetMsisdnChangeRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service msisdnChange - This service provides the MSIDN change possibility. Changes MSISDN on network. Clones original MSISDN network profile, creates new MSISDN and deletes original.
		Service queries and sets following services:
		•	Barring by Customer
		•	Barring by Operator
		•	Call forwarding
		•	Call history
		•	Call Waiting
		•	CLIP
		•	CLIR
		•	COLP
		•	COLR
		•	Data
		•	Data for WAP
		•	Fax
		•	GPRS
		•	International calls HR
		•	MCA
		•	Ported Number
		•	MultiParty
		•	Ported Number Notification
		•	Roaming
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getMsisdnChangeRequest" type="tns:GetMsisdnChangeRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service msisdnChange - This service provides the MSIDN change possibility. Changes MSISDN on network. Clones original MSISDN network profile, creates new MSISDN and deletes original.
		Service queries and sets following services:
		•	Barring by Customer
		•	Barring by Operator
		•	Call forwarding
		•	Call history
		•	Call Waiting
		•	CLIP
		•	CLIR
		•	COLP
		•	COLR
		•	Data
		•	Data for WAP
		•	Fax
		•	GPRS
		•	International calls HR
		•	MCA
		•	Ported Number
		•	MultiParty
		•	Ported Number Notification
		•	Roaming
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetMsisdnChangeResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service msisdnChange - This service provides the MSIDN change possibility. Changes MSISDN on network. Clones original MSISDN network profile, creates new MSISDN and deletes original.
		Service queries and sets following services:
		•	Barring by Customer
		•	Barring by Operator
		•	Call forwarding
		•	Call history
		•	Call Waiting
		•	CLIP
		•	CLIR
		•	COLP
		•	COLR
		•	Data
		•	Data for WAP
		•	Fax
		•	GPRS
		•	International calls HR
		•	MCA
		•	Ported Number
		•	MultiParty
		•	Ported Number Notification
		•	Roaming
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getMsisdnChangeResponse" type="tns:GetMsisdnChangeResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service msisdnChange - This service provides the MSIDN change possibility. Changes MSISDN on network. Clones original MSISDN network profile, creates new MSISDN and deletes original.
		Service queries and sets following services:
		•	Barring by Customer
		•	Barring by Operator
		•	Call forwarding
		•	Call history
		•	Call Waiting
		•	CLIP
		•	CLIR
		•	COLP
		•	COLR
		•	Data
		•	Data for WAP
		•	Fax
		•	GPRS
		•	International calls HR
		•	MCA
		•	Ported Number
		•	MultiParty
		•	Ported Number Notification
		•	Roaming
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateOcsBundleRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service ocsBundle - This service enables setting of various Bundles on Alcatel IN.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:choice>
                  <xs:element name="voiceMsisdn" type="xs:long" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="groupId" type="xs:string" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies SFT group to which provide the service. Valid SFT account ID required.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:choice>
               <xs:element name="bundle" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s bundle (promotional Tariff Plan with discount and/or Buckets attached to it). Valid Bundle value.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="discount" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Discount of renewal fee. In percents.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="discountCode" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Discount code for renewal fee discount. Valid discount code (0..9999).</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="absoluteExtraAmount" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The extra free allowance for each bucket in the bundle.Parameter is mutually exclusive to percentageExtraAmount. 
			Units are: Credits = units, Minutes = seconds, SMS = SMS.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="percentageExtraAmount" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The extra free allowance percentage based on amount value for each bucket in the bundle. Parameter is mutually exclusive to absoluteExtraAmount.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="extraDiscountCode" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Discount code extra allowance. Field is evaluated only if absoluteExtraAmount or percentageExtraAmount is used. Valid discount code (0..9999).</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="ocsStartDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicate the bundle start date. ALU platform is limited only to format YYYYMMDD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="ocsEndDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicate the bundle end date. ALU platform is limited only to format YYYYMMDD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="costBundle" type="xs:long" minOccurs="0" nillable="true">
                  <xs:annotation>
                     <xs:documentation>The individual price rate.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createOcsBundleRequest" type="tns:CreateOcsBundleRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service ocsBundle - This service enables setting of various Bundles on Alcatel IN.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateOcsBundleResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service ocsBundle - This service enables setting of various Bundles on Alcatel IN.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createOcsBundleResponse" type="tns:CreateOcsBundleResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service ocsBundle - This service enables setting of various Bundles on Alcatel IN.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetOcsBundleRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service ocsBundle - This service enables setting of various Bundles on Alcatel IN.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:choice>
                  <xs:element name="voiceMsisdn" type="xs:long" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="groupId" type="xs:string" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies SFT group to which provide the service. Valid SFT account ID required.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:choice>
               <xs:element name="bundle" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s bundle (promotional Tariff Plan with discount and/or Buckets attached to it). Valid Bundle value.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="newBundle" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s bundle (CVM tariff only). Valid Bundle value.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="bucket" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s bucket linked to bundle. Valid bucket value. Bucket field can’t be send without valid bundle.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="adjustAmount" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s adjustment amount for bucket. Amount in units.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="ocsEndDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicate the bundle end date. ALU platform is limited only to format YYYYMMDD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="renewalDateMinusOne" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Renewal date of bundle minus one day. ALU platform is limited only to format YYYYMMDD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="costBundle" type="xs:long" minOccurs="0" nillable="true">
                  <xs:annotation>
                     <xs:documentation>The individual price rate.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setOcsBundleRequest" type="tns:SetOcsBundleRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service ocsBundle - This service enables setting of various Bundles on Alcatel IN.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetOcsBundleResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service ocsBundle - This service enables setting of various Bundles on Alcatel IN.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setOcsBundleResponse" type="tns:SetOcsBundleResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service ocsBundle - This service enables setting of various Bundles on Alcatel IN.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteOcsBundleRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service ocsBundle - This service enables setting of various Bundles on Alcatel IN.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:choice>
                  <xs:element name="voiceMsisdn" type="xs:long" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="groupId" type="xs:string" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies SFT group to which provide the service. Valid SFT account ID required.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:choice>
               <xs:element name="bundle" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s bundle (promotional Tariff Plan with discount and/or Buckets attached to it). Valid Bundle value.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="getAddInfo" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>If TRUE then renewalDateMinusOne is returned in the response.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteOcsBundleRequest" type="tns:DeleteOcsBundleRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service ocsBundle - This service enables setting of various Bundles on Alcatel IN.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteOcsBundleResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service ocsBundle - This service enables setting of various Bundles on Alcatel IN.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="renewalDateMinusOne" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Renewal date of bundle minus one day. ALU platform is limited only to format YYYYMMDD.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteOcsBundleResponse" type="tns:DeleteOcsBundleResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service ocsBundle - This service enables setting of various Bundles on Alcatel IN.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetOcsBundleRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service ocsBundle - This service enables setting of various Bundles on Alcatel IN.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:choice>
                  <xs:element name="voiceMsisdn" type="xs:long" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="groupId" type="xs:string" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies SFT group to which provide the service. Valid SFT account ID required.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:choice>
               <xs:element name="bundle" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s bundle (promotional Tariff Plan with discount and/or Buckets attached to it). Valid Bundle value.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="bucket" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s bucket linked to bundle. Valid bucket value. Bucket field can’t be send without valid bundle.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getOcsBundleRequest" type="tns:GetOcsBundleRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service ocsBundle - This service enables setting of various Bundles on Alcatel IN.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetOcsBundleResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service ocsBundle - This service enables setting of various Bundles on Alcatel IN.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="leftoverBalance" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Subscriber’s number of left units within the period. In units.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="rolloverBalance" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Subscriber’s number of free units rolled over from previous period related to specific bundle. In units.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="tresholdUsage" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Value that is defined for bundle and means what usage (number of minutes, SMSes) subscriber has to spent in order to get the benefit. 
			Will be always same value for given bundle.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="cumulatedUsage" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Usage (number of minutes, SMSes) which subscriber spent in measured period (the week days) until today.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="discount" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Discount of renewal fee. In percents.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="discountCode" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Discount code for renewal fee discount. Valid discount code (0..9999).</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="absoluteExtraAmount" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>The extra free allowance for each bucket in the bundle.Parameter is mutually exclusive to percentageExtraAmount. 
			Units are: Credits = units, Minutes = seconds, SMS = SMS.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="percentageExtraAmount" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>The extra free allowance percentage based on amount value for each bucket in the bundle. Parameter is mutually exclusive to absoluteExtraAmount.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="extraDiscountCode" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Discount code extra allowance. Field is evaluated only if absoluteExtraAmount or percentageExtraAmount is used. Valid discount code (0..9999).</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="ocsStartDate" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Indicate the bundle start date. ALU platform is limited only to format YYYYMMDD.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="ocsEndDate" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Indicate the bundle end date. ALU platform is limited only to format YYYYMMDD.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="renewalDateMinusOne" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Renewal date of bundle minus one day. ALU platform is limited only to format YYYYMMDD.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="costBundle" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The individual price rate.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getOcsBundleResponse" type="tns:GetOcsBundleResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service ocsBundle - This service enables setting of various Bundles on Alcatel IN.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:simpleType name="OcsDiscount_ProductType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="RC"/>
         <xs:enumeration value="Bundle"/>
         <xs:enumeration value="BUK"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="CreateOcsDiscountRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service ocsDiscount - Applies discount to subscriber renewal fee (recurring charge or bundle).
		Just one and only one of discount, absoluteDiscount and percentageDiscount has to be included in a reqeust.
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:choice>
                  <xs:element name="voiceMsisdn" type="xs:long" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="groupId" type="xs:string" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies SFT group to which provide the service. Valid SFT account ID.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:choice>
               <xs:element name="productId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Product to which discount is applied. Could be bundle, bucket or recurring charge.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="descriptionId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Finer identifier of promotion, e.g. could identify group of subscriber’s RC.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="productType" type="tns:OcsDiscount_ProductType" minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Distinguish between RC, bundle and bucket. Values: RC, Bundle, BUK</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="discount" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Discount on product fee. In percents. Mutually exclusive to absoluteDiscount.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="absoluteDiscount" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Absolute bonus on bundle/bucket refill. In units. Mutually exclusive to discount. 
			Units are: Credits = units, Minutes = seconds, SMS = SMS.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="discountCode" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Discount code. Valid discount code (0..9999).</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="ocsStartDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Start date applied to recurring charge discount. Valid date format YYYY/MM/DD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="ocsEndDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>End date applied to recurring charge discount. Valid date format YYYY/MM/DD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createOcsDiscountRequest" type="tns:CreateOcsDiscountRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service ocsDiscount - Applies discount to subscriber renewal fee (recurring charge or bundle).
		Just one and only one of discount, absoluteDiscount and percentageDiscount has to be included in a reqeust.
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateOcsDiscountResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service ocsDiscount - Applies discount to subscriber renewal fee (recurring charge or bundle).
		Just one and only one of discount, absoluteDiscount and percentageDiscount has to be included in a reqeust.
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createOcsDiscountResponse" type="tns:CreateOcsDiscountResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service ocsDiscount - Applies discount to subscriber renewal fee (recurring charge or bundle).
		Just one and only one of discount, absoluteDiscount and percentageDiscount has to be included in a reqeust.
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetOcsDiscountRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service ocsDiscount - Applies discount to subscriber renewal fee (recurring charge or bundle).
		Just one and only one of discount, absoluteDiscount and percentageDiscount has to be included in a reqeust.
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:choice>
                  <xs:element name="voiceMsisdn" type="xs:long" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="groupId" type="xs:string" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies SFT group to which provide the service. Valid SFT account ID.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:choice>
               <xs:element name="productId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Product to which discount is applied. Could be bundle, bucket or recurring charge.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="descriptionId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Finer identifier of promotion, e.g. could identify group of subscriber’s RC.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="productType" type="tns:OcsDiscount_ProductType" minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Distinguish between RC, bundle and bucket. Values: RC, Bundle, BUK</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="discount" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Discount on product fee. In percents. Mutually exclusive to absoluteDiscount.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="absoluteDiscount" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Absolute bonus on bundle/bucket refill. In units. Mutually exclusive to discount. 
			Units are: Credits = units, Minutes = seconds, SMS = SMS.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="discountCode" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Discount code. Valid discount code (0..9999).</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="ocsStartDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Start date applied to recurring charge discount. Valid date format YYYY/MM/DD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="ocsEndDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>End date applied to recurring charge discount. Valid date format YYYY/MM/DD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setOcsDiscountRequest" type="tns:SetOcsDiscountRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service ocsDiscount - Applies discount to subscriber renewal fee (recurring charge or bundle).
		Just one and only one of discount, absoluteDiscount and percentageDiscount has to be included in a reqeust.
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetOcsDiscountResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service ocsDiscount - Applies discount to subscriber renewal fee (recurring charge or bundle).
		Just one and only one of discount, absoluteDiscount and percentageDiscount has to be included in a reqeust.
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setOcsDiscountResponse" type="tns:SetOcsDiscountResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service ocsDiscount - Applies discount to subscriber renewal fee (recurring charge or bundle).
		Just one and only one of discount, absoluteDiscount and percentageDiscount has to be included in a reqeust.
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteOcsDiscountRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service ocsDiscount - Applies discount to subscriber renewal fee (recurring charge or bundle).
		Just one and only one of discount, absoluteDiscount and percentageDiscount has to be included in a reqeust.
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:choice>
                  <xs:element name="voiceMsisdn" type="xs:long" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="groupId" type="xs:string" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies SFT group to which provide the service. Valid SFT account ID.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:choice>
               <xs:element name="productId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Product to which discount is applied. Could be bundle, bucket or recurring charge.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="descriptionId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Finer identifier of promotion, e.g. could identify group of subscriber’s RC.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="productType" type="tns:OcsDiscount_ProductType" minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Distinguish between RC, bundle and bucket. Values: RC, Bundle, BUK</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="ocsStartDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Start date applied to recurring charge discount. Valid date format YYYY/MM/DD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="ocsEndDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>End date applied to recurring charge discount. Valid date format YYYY/MM/DD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteOcsDiscountRequest" type="tns:DeleteOcsDiscountRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service ocsDiscount - Applies discount to subscriber renewal fee (recurring charge or bundle).
		Just one and only one of discount, absoluteDiscount and percentageDiscount has to be included in a reqeust.
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteOcsDiscountResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service ocsDiscount - Applies discount to subscriber renewal fee (recurring charge or bundle).
		Just one and only one of discount, absoluteDiscount and percentageDiscount has to be included in a reqeust.
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteOcsDiscountResponse" type="tns:DeleteOcsDiscountResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service ocsDiscount - Applies discount to subscriber renewal fee (recurring charge or bundle).
		Just one and only one of discount, absoluteDiscount and percentageDiscount has to be included in a reqeust.
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetOcsDiscountRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service ocsDiscount - Applies discount to subscriber renewal fee (recurring charge or bundle).
		Just one and only one of discount, absoluteDiscount and percentageDiscount has to be included in a reqeust.
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:choice>
                  <xs:element name="voiceMsisdn" type="xs:long" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="groupId" type="xs:string" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies SFT group to which provide the service. Valid SFT account ID.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:choice>
               <xs:element name="productId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Product to which discount is applied. Could be bundle, bucket or recurring charge.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="productType" type="tns:OcsDiscount_ProductType" minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Distinguish between RC, bundle and bucket. Values: RC, Bundle, BUK</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getOcsDiscountRequest" type="tns:GetOcsDiscountRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service ocsDiscount - Applies discount to subscriber renewal fee (recurring charge or bundle).
		Just one and only one of discount, absoluteDiscount and percentageDiscount has to be included in a reqeust.
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetOcsDiscountResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service ocsDiscount - Applies discount to subscriber renewal fee (recurring charge or bundle).
		Just one and only one of discount, absoluteDiscount and percentageDiscount has to be included in a reqeust.
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="discount" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Discount on product fee. In percents. Mutually exclusive to absoluteDiscount.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="absoluteDiscount" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Absolute bonus on bundle/bucket refill. In units. Mutually exclusive to discount. 
			Units are: Credits = units, Minutes = seconds, SMS = SMS.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="discountCode" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Discount code. Valid discount code (0..9999).</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="ocsStartDate" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Start date applied to recurring charge discount. Valid date format YYYY/MM/DD.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="ocsEndDate" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>End date applied to recurring charge discount. Valid date format YYYY/MM/DD.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getOcsDiscountResponse" type="tns:GetOcsDiscountResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service ocsDiscount - Applies discount to subscriber renewal fee (recurring charge or bundle).
		Just one and only one of discount, absoluteDiscount and percentageDiscount has to be included in a reqeust.
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:simpleType name="OcsProfile_Language">
      <xs:restriction base="xs:string">
         <xs:enumeration value="CZECH"/>
         <xs:enumeration value="ENGLISH"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="OcsProfile_IvrBarring">
      <xs:restriction base="xs:string">
         <xs:enumeration value="RECHARGES"/>
         <xs:enumeration value="NOTBARRED"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="OcsProfile_SubscriberState">
      <xs:restriction base="xs:string">
         <xs:enumeration value="MIGRATION"/>
         <xs:enumeration value="FREEZE"/>
         <xs:enumeration value="ACTIVE"/>
         <xs:enumeration value="SUSPEND"/>
         <xs:enumeration value="RESUME"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="OcsProfile_SubscriberNotificationType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="NOTHING"/>
         <xs:enumeration value="VOICE"/>
         <xs:enumeration value="ALL"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="CreateOcsProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service ocsProfile - This service activates subscription with requested tariff in Alcatel IN. Although limited set of features can be modified via this service, it is also possible to read complete supported structure of bundles.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="subscriberType" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies type of subscriber: PREPAID, POSTPAID, PRE2POST, POST2PRE, FAKE, ADSL, ITS</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="tariff" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Main Tariff Plan associated to subscriber.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="spendingLimit" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Amount of account spending limit in units. Mandatory in create only for POSTPAID. Mandatory in set only for PRE2POST.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="classOfService" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s class of service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="confiscatedCredit" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s confiscated credit. For subscriber creation determines initial credit. Amount is in units. Applicable only for prepaid..</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="language" type="tns:OcsProfile_Language" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s preferred language. Values: CZECH, ENGLISH</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="balanceBillingDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicates billing date due the balance is billed. Applicable only for postpaid. Valid date in format YYYYMMDD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="balanceDefinitionId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Balance definition ID. Applicable only for postpaid. Valid balance definition ID according SurePay LLD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="flexiCeiling" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber flexi ceiling. Amount is in units. Applicable only to postpaid.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="flexiLimit" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber flexi limit. Amount is in units. Applicable only to postpaid.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="subscriberNotificationType"
                           type="tns:OcsProfile_SubscriberNotificationType"
                           minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Defines subscriber notification type. Values: NOTHING, VOICE, ALL</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="accountId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Account ID of SP. If missing then VF values are used: 10 for prepaid and 20 for postpaid. Needs to be included SET request for provisioning MVNO SP partner in PRE2POST and POST2PRE </xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createOcsProfileRequest" type="tns:CreateOcsProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service ocsProfile - This service activates subscription with requested tariff in Alcatel IN. Although limited set of features can be modified via this service, it is also possible to read complete supported structure of bundles.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateOcsProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service ocsProfile - This service activates subscription with requested tariff in Alcatel IN. Although limited set of features can be modified via this service, it is also possible to read complete supported structure of bundles.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createOcsProfileResponse" type="tns:CreateOcsProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service ocsProfile - This service activates subscription with requested tariff in Alcatel IN. Although limited set of features can be modified via this service, it is also possible to read complete supported structure of bundles.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetOcsProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service ocsProfile - This service activates subscription with requested tariff in Alcatel IN. Although limited set of features can be modified via this service, it is also possible to read complete supported structure of bundles.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="newMsisdn" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>MSISDN of subscriber for msisdn change.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="subscriberType" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies type of subscriber: PREPAID, POSTPAID, PRE2POST, POST2PRE, FAKE, ADSL, ITS</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="tariff" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Main Tariff Plan associated to subscriber.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="spendingLimit" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Amount of account spending limit in units. Mandatory in create only for POSTPAID. Mandatory in set only for PRE2POST.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="classOfService" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s class of service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="language" type="tns:OcsProfile_Language" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s preferred language. Values: CZECH, ENGLISH</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="balanceBillingDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicates billing date due the balance is billed. Applicable only for postpaid. Valid date in format YYYYMMDD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="balanceDefinitionId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Balance definition ID. Applicable only for postpaid. Valid balance definition ID according SurePay LLD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="airTimeExpiry" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The date of current airtime expiration. ALU platform is limited only to format YYYYMMDD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="serviceExpiry" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The date of service expiration. ALU platform is limited only to format YYYYMMDD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="firstCall" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>First IVR call indicator. While SET operation is used, only True can be set.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="ivrBarring" type="tns:OcsProfile_IvrBarring" minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies whether subscriber has barred voucher-based recharges (Y = barred owing to invalid recharges; N = not barred). Values: RECHARGES, NOTBARRED</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="flexiCeiling" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber flexi ceiling. Amount is in units. Applicable only to postpaid.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="flexiLimit" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber flexi limit. Amount is in units. Applicable only to postpaid.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="subscriberState" type="tns:OcsProfile_SubscriberState" minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber state. Values: MIGRATION, FREEZE, ACTIVE, SUSPEND, RESUME</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="subscriberNotificationType"
                           type="tns:OcsProfile_SubscriberNotificationType"
                           minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Defines subscriber notification type. Values: NOTHING, VOICE, ALL</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="accountId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Account ID of SP. If missing then VF values are used: 10 for prepaid and 20 for postpaid. Needs to be included SET request for provisioning MVNO SP partner in PRE2POST and POST2PRE </xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setOcsProfileRequest" type="tns:SetOcsProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service ocsProfile - This service activates subscription with requested tariff in Alcatel IN. Although limited set of features can be modified via this service, it is also possible to read complete supported structure of bundles.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetOcsProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service ocsProfile - This service activates subscription with requested tariff in Alcatel IN. Although limited set of features can be modified via this service, it is also possible to read complete supported structure of bundles.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setOcsProfileResponse" type="tns:SetOcsProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service ocsProfile - This service activates subscription with requested tariff in Alcatel IN. Although limited set of features can be modified via this service, it is also possible to read complete supported structure of bundles.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteOcsProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service ocsProfile - This service activates subscription with requested tariff in Alcatel IN. Although limited set of features can be modified via this service, it is also possible to read complete supported structure of bundles.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteOcsProfileRequest" type="tns:DeleteOcsProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service ocsProfile - This service activates subscription with requested tariff in Alcatel IN. Although limited set of features can be modified via this service, it is also possible to read complete supported structure of bundles.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteOcsProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service ocsProfile - This service activates subscription with requested tariff in Alcatel IN. Although limited set of features can be modified via this service, it is also possible to read complete supported structure of bundles.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteOcsProfileResponse" type="tns:DeleteOcsProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service ocsProfile - This service activates subscription with requested tariff in Alcatel IN. Although limited set of features can be modified via this service, it is also possible to read complete supported structure of bundles.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetOcsProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service ocsProfile - This service activates subscription with requested tariff in Alcatel IN. Although limited set of features can be modified via this service, it is also possible to read complete supported structure of bundles.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getOcsProfileRequest" type="tns:GetOcsProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service ocsProfile - This service activates subscription with requested tariff in Alcatel IN. Although limited set of features can be modified via this service, it is also possible to read complete supported structure of bundles.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetOcsProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service ocsProfile - This service activates subscription with requested tariff in Alcatel IN. Although limited set of features can be modified via this service, it is also possible to read complete supported structure of bundles.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="subscriberType" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identifies type of subscriber: PREPAID, POSTPAID, PRE2POST, POST2PRE, FAKE, ADSL, ITS</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="tariff" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Main Tariff Plan associated to subscriber.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="spendingLimit" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Amount of account spending limit in units. Mandatory in create only for POSTPAID. Mandatory in set only for PRE2POST.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="classOfService" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Subscriber’s class of service.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="confiscatedCredit" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Subscriber’s confiscated credit. For subscriber creation determines initial credit. Amount is in units. Applicable only for prepaid..</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="language" type="tns:OcsProfile_Language" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Subscriber’s preferred language. Values: CZECH, ENGLISH</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="balanceBillingDate" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Indicates billing date due the balance is billed. Applicable only for postpaid. Valid date in format YYYYMMDD.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="balanceDefinitionId" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Balance definition ID. Applicable only for postpaid. Valid balance definition ID according SurePay LLD.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="airTimeExpiry" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>The date of current airtime expiration. ALU platform is limited only to format YYYYMMDD.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="serviceExpiry" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>The date of service expiration. ALU platform is limited only to format YYYYMMDD.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="firstCall" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>First IVR call indicator. While SET operation is used, only True can be set.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="ivrBarring" type="tns:OcsProfile_IvrBarring" minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identifies whether subscriber has barred voucher-based recharges (Y = barred owing to invalid recharges; N = not barred). Values: RECHARGES, NOTBARRED</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="flexiCeiling" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Subscriber flexi ceiling. Amount is in units. Applicable only to postpaid.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="flexiLimit" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Subscriber flexi limit. Amount is in units. Applicable only to postpaid.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="subscriberState" type="tns:OcsProfile_SubscriberState" minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>Subscriber state. Values: MIGRATION, FREEZE, ACTIVE, SUSPEND, RESUME</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="subscriberNotificationType"
                                    type="tns:OcsProfile_SubscriberNotificationType"
                                    minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>Defines subscriber notification type. Values: NOTHING, VOICE, ALL</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="accountId" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Account ID of SP. If missing then VF values are used: 10 for prepaid and 20 for postpaid. Needs to be included SET request for provisioning MVNO SP partner in PRE2POST and POST2PRE </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="cumulativeRechargeAmount" type="xs:decimal" minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>Cumulative recharge in CZK since 1.5.2014.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="loanAmount" type="xs:decimal" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Loan amount in CZK.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="loanOptOutDate" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation> Date of setting OCS Loan opt-out or null in case of Opt-in.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="timeLastActivation" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Date of SIM activation.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="balances" minOccurs="0" maxOccurs="unbounded">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="primaryBalance" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Current primary balance in units without subscriber’s outstanding charges.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="secondaryBalance" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Current secondary balance in units without subscriber’s secondary outstanding charges.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                        <xs:element name="outstandingCharges" minOccurs="0" maxOccurs="unbounded">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="primaryOc" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Current postpaid primary outstanding charge in units.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="secondaryOc" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Current postpaid secondary outstanding charge in units.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getOcsProfileResponse" type="tns:GetOcsProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service ocsProfile - This service activates subscription with requested tariff in Alcatel IN. Although limited set of features can be modified via this service, it is also possible to read complete supported structure of bundles.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:simpleType name="OcsRecharge_Operation">
      <xs:restriction base="xs:string">
         <xs:enumeration value="ADJUST"/>
         <xs:enumeration value="VOUCHER"/>
         <xs:enumeration value="PAYMENT"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="OcsRecharge_TransactionType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="DEBIT"/>
         <xs:enumeration value="CREDIT"/>
         <xs:enumeration value="SET"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="OcsRecharge_BalanceType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="PRIMARY"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="SetOcsRechargeRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service ocsRecharge - This service allows recharging or adjustment of balance by several ways. There is supported only one type of recharge in one service request. When type of operation is selected there has to be filled exact set of other parameters belonging to each operation (see note below).  Otherwise the request will be rejected by service provisioning.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="operation" type="tns:OcsRecharge_Operation" minOccurs="1"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Specifies requested type of recharge. Based on value of this attribute the following set of parameters is set. Values: ADJUST, VOUCHER, PAYMENT</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="amount" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Amount of adjustment in CZK.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="transactionType" type="tns:OcsRecharge_TransactionType" minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Specifies type of adjustment. Values: DEBIT, CREDIT, SET</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="balanceType" type="tns:OcsRecharge_BalanceType" minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Specifies type of balance for ADJUST operation. If missing, primary balance is used as default. For now only primary balance is valid. Values: PRIMARY</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="taxCodeId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Specifies tax code identification for ADJUST operation.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="taxAmount" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Specified tax amount for ADJUST operation. In units.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="taxPercentage" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Specified tax percentage for ADJUST operation.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="pin" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>PIN from a Voucher that is known by network element.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="adjustmentReason" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Specifies adjustment reason.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setOcsRechargeRequest" type="tns:SetOcsRechargeRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service ocsRecharge - This service allows recharging or adjustment of balance by several ways. There is supported only one type of recharge in one service request. When type of operation is selected there has to be filled exact set of other parameters belonging to each operation (see note below).  Otherwise the request will be rejected by service provisioning.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetOcsRechargeResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service ocsRecharge - This service allows recharging or adjustment of balance by several ways. There is supported only one type of recharge in one service request. When type of operation is selected there has to be filled exact set of other parameters belonging to each operation (see note below).  Otherwise the request will be rejected by service provisioning.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="airTimeExpiry" type="xs:dateTime" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>The date of new airtime expiration for VOUCHER operation. This is calculated value by InstantLink. Valid date in format YYYYMMDD.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="serviceExpiry" type="xs:dateTime" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>The date of new service expiration for VOUCHER operation. This is calculated value by InstantLink. Valid date in format YYYYMMDD.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setOcsRechargeResponse" type="tns:SetOcsRechargeResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service ocsRecharge - This service allows recharging or adjustment of balance by several ways. There is supported only one type of recharge in one service request. When type of operation is selected there has to be filled exact set of other parameters belonging to each operation (see note below).  Otherwise the request will be rejected by service provisioning.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreatePortedNumberRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service portedNumber - Specifies current operator for MSISDN in case that it was ported. In case that  MSISDN was not ported (does not exist in FNR network element) inactive state of service is returned (MSISDN belongs to operator according to standard numbering plan).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="operatorCode" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Operator code (NRN) ~ OpID. When both operatorCode and operatorName is included in Create or Set request than operatorCode wins and operatorName is ignored. Example: 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 250, 255, 256, 261, 262, 277, 299, 300, 321, 333.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="operatorName" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Operator name that correlates with NRN. When both operatorCode and operatorName is included in Create or Set request than operatorCode wins and operatorName is ignored. Example: O2, T-MOBILE, VODAFONE, MOBILKOM, ADVANTEL.229, AGMO_CZ.299, AXFONE.210, BT_LIMITED.211, CD-TELEMATIKA.228, CD-TELEMATIKA.233, CENTRONET.240, CESKE_RADIOKOMUNIKACE.230,CESKY_BEZDRAT.215, CEZ_ICT_SERVICES.221, COPROSYS.207, DATINEL.256, DIAL_TELECOM.201, DIAL_TELECOM.222, FASTER_CZ.209, FAYN_TELECOMMUNICATIONS.235, FIXNET.244, GTS_CZECH.234, GTS_CZECH.255, GTS_NOVERA.212, HA-VEL_INTERNET.241, INTELIA_HOLDING.208, INTERCONNECT_EUROPE.227, IPEX.225, KARNEVAL_MEDIA.217, MATERNA_COMMUNICATIONS.300, MAXPROGRES.218, MICHAL_NAJMAN.243, MOBILKOM.261, NEJ_TV.333, NETPHONE.239, NEW_TELEKOM.219, O2.202, RIO_MEDIA.203, RIO_MEDIA.223, SMART_COMP.226, SPINOCO_CZECH_REPUBLIC.238, TC_SERVIS.231, T-MOBILE.224, T-MOBILE.250, T-MOBILE.321, T-SYSTEMS_CZECH_REPUBLIC.236, UNIENT_COMMUNICATIONS.248, UPC_CESKA_REPUBLIKA.216, VM_TELECOM_CZ.206, VODAFONE.214, VODAFONE.277, VOINET.204, VOLNY.220, WIA.242, XPHONET_CZ.237</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createPortedNumberRequest" type="tns:CreatePortedNumberRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service portedNumber - Specifies current operator for MSISDN in case that it was ported. In case that  MSISDN was not ported (does not exist in FNR network element) inactive state of service is returned (MSISDN belongs to operator according to standard numbering plan).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreatePortedNumberResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service portedNumber - Specifies current operator for MSISDN in case that it was ported. In case that  MSISDN was not ported (does not exist in FNR network element) inactive state of service is returned (MSISDN belongs to operator according to standard numbering plan).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createPortedNumberResponse" type="tns:CreatePortedNumberResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service portedNumber - Specifies current operator for MSISDN in case that it was ported. In case that  MSISDN was not ported (does not exist in FNR network element) inactive state of service is returned (MSISDN belongs to operator according to standard numbering plan).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetPortedNumberRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service portedNumber - Specifies current operator for MSISDN in case that it was ported. In case that  MSISDN was not ported (does not exist in FNR network element) inactive state of service is returned (MSISDN belongs to operator according to standard numbering plan).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="operatorCode" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Operator code (NRN) ~ OpID. When both operatorCode and operatorName is included in Create or Set request than operatorCode wins and operatorName is ignored. Example: 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 250, 255, 256, 261, 262, 277, 299, 300, 321, 333.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="operatorName" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Operator name that correlates with NRN. When both operatorCode and operatorName is included in Create or Set request than operatorCode wins and operatorName is ignored. Example: O2, T-MOBILE, VODAFONE, MOBILKOM, ADVANTEL.229, AGMO_CZ.299, AXFONE.210, BT_LIMITED.211, CD-TELEMATIKA.228, CD-TELEMATIKA.233, CENTRONET.240, CESKE_RADIOKOMUNIKACE.230,CESKY_BEZDRAT.215, CEZ_ICT_SERVICES.221, COPROSYS.207, DATINEL.256, DIAL_TELECOM.201, DIAL_TELECOM.222, FASTER_CZ.209, FAYN_TELECOMMUNICATIONS.235, FIXNET.244, GTS_CZECH.234, GTS_CZECH.255, GTS_NOVERA.212, HA-VEL_INTERNET.241, INTELIA_HOLDING.208, INTERCONNECT_EUROPE.227, IPEX.225, KARNEVAL_MEDIA.217, MATERNA_COMMUNICATIONS.300, MAXPROGRES.218, MICHAL_NAJMAN.243, MOBILKOM.261, NEJ_TV.333, NETPHONE.239, NEW_TELEKOM.219, O2.202, RIO_MEDIA.203, RIO_MEDIA.223, SMART_COMP.226, SPINOCO_CZECH_REPUBLIC.238, TC_SERVIS.231, T-MOBILE.224, T-MOBILE.250, T-MOBILE.321, T-SYSTEMS_CZECH_REPUBLIC.236, UNIENT_COMMUNICATIONS.248, UPC_CESKA_REPUBLIKA.216, VM_TELECOM_CZ.206, VODAFONE.214, VODAFONE.277, VOINET.204, VOLNY.220, WIA.242, XPHONET_CZ.237</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setPortedNumberRequest" type="tns:SetPortedNumberRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service portedNumber - Specifies current operator for MSISDN in case that it was ported. In case that  MSISDN was not ported (does not exist in FNR network element) inactive state of service is returned (MSISDN belongs to operator according to standard numbering plan).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetPortedNumberResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service portedNumber - Specifies current operator for MSISDN in case that it was ported. In case that  MSISDN was not ported (does not exist in FNR network element) inactive state of service is returned (MSISDN belongs to operator according to standard numbering plan).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setPortedNumberResponse" type="tns:SetPortedNumberResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service portedNumber - Specifies current operator for MSISDN in case that it was ported. In case that  MSISDN was not ported (does not exist in FNR network element) inactive state of service is returned (MSISDN belongs to operator according to standard numbering plan).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeletePortedNumberRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service portedNumber - Specifies current operator for MSISDN in case that it was ported. In case that  MSISDN was not ported (does not exist in FNR network element) inactive state of service is returned (MSISDN belongs to operator according to standard numbering plan).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deletePortedNumberRequest" type="tns:DeletePortedNumberRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service portedNumber - Specifies current operator for MSISDN in case that it was ported. In case that  MSISDN was not ported (does not exist in FNR network element) inactive state of service is returned (MSISDN belongs to operator according to standard numbering plan).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeletePortedNumberResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service portedNumber - Specifies current operator for MSISDN in case that it was ported. In case that  MSISDN was not ported (does not exist in FNR network element) inactive state of service is returned (MSISDN belongs to operator according to standard numbering plan).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deletePortedNumberResponse" type="tns:DeletePortedNumberResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service portedNumber - Specifies current operator for MSISDN in case that it was ported. In case that  MSISDN was not ported (does not exist in FNR network element) inactive state of service is returned (MSISDN belongs to operator according to standard numbering plan).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetPortedNumberRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service portedNumber - Specifies current operator for MSISDN in case that it was ported. In case that  MSISDN was not ported (does not exist in FNR network element) inactive state of service is returned (MSISDN belongs to operator according to standard numbering plan).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getPortedNumberRequest" type="tns:GetPortedNumberRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service portedNumber - Specifies current operator for MSISDN in case that it was ported. In case that  MSISDN was not ported (does not exist in FNR network element) inactive state of service is returned (MSISDN belongs to operator according to standard numbering plan).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetPortedNumberResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service portedNumber - Specifies current operator for MSISDN in case that it was ported. In case that  MSISDN was not ported (does not exist in FNR network element) inactive state of service is returned (MSISDN belongs to operator according to standard numbering plan).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="operatorCode" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Operator code (NRN) ~ OpID. When both operatorCode and operatorName is included in Create or Set request than operatorCode wins and operatorName is ignored. Example: 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 250, 255, 256, 261, 262, 277, 299, 300, 321, 333.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="operatorName" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Operator name that correlates with NRN. When both operatorCode and operatorName is included in Create or Set request than operatorCode wins and operatorName is ignored. Example: O2, T-MOBILE, VODAFONE, MOBILKOM, ADVANTEL.229, AGMO_CZ.299, AXFONE.210, BT_LIMITED.211, CD-TELEMATIKA.228, CD-TELEMATIKA.233, CENTRONET.240, CESKE_RADIOKOMUNIKACE.230,CESKY_BEZDRAT.215, CEZ_ICT_SERVICES.221, COPROSYS.207, DATINEL.256, DIAL_TELECOM.201, DIAL_TELECOM.222, FASTER_CZ.209, FAYN_TELECOMMUNICATIONS.235, FIXNET.244, GTS_CZECH.234, GTS_CZECH.255, GTS_NOVERA.212, HA-VEL_INTERNET.241, INTELIA_HOLDING.208, INTERCONNECT_EUROPE.227, IPEX.225, KARNEVAL_MEDIA.217, MATERNA_COMMUNICATIONS.300, MAXPROGRES.218, MICHAL_NAJMAN.243, MOBILKOM.261, NEJ_TV.333, NETPHONE.239, NEW_TELEKOM.219, O2.202, RIO_MEDIA.203, RIO_MEDIA.223, SMART_COMP.226, SPINOCO_CZECH_REPUBLIC.238, TC_SERVIS.231, T-MOBILE.224, T-MOBILE.250, T-MOBILE.321, T-SYSTEMS_CZECH_REPUBLIC.236, UNIENT_COMMUNICATIONS.248, UPC_CESKA_REPUBLIKA.216, VM_TELECOM_CZ.206, VODAFONE.214, VODAFONE.277, VOINET.204, VOLNY.220, WIA.242, XPHONET_CZ.237</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getPortedNumberResponse" type="tns:GetPortedNumberResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service portedNumber - Specifies current operator for MSISDN in case that it was ported. In case that  MSISDN was not ported (does not exist in FNR network element) inactive state of service is returned (MSISDN belongs to operator according to standard numbering plan).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreatePortedNumberNotificationRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service portedNumberNotification - Ported Number Notification (PNN) service notifies subscriber prior each call to ported number.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createPortedNumberNotificationRequest"
               type="tns:CreatePortedNumberNotificationRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service portedNumberNotification - Ported Number Notification (PNN) service notifies subscriber prior each call to ported number.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreatePortedNumberNotificationResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service portedNumberNotification - Ported Number Notification (PNN) service notifies subscriber prior each call to ported number.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createPortedNumberNotificationResponse"
               type="tns:CreatePortedNumberNotificationResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service portedNumberNotification - Ported Number Notification (PNN) service notifies subscriber prior each call to ported number.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeletePortedNumberNotificationRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service portedNumberNotification - Ported Number Notification (PNN) service notifies subscriber prior each call to ported number.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deletePortedNumberNotificationRequest"
               type="tns:DeletePortedNumberNotificationRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service portedNumberNotification - Ported Number Notification (PNN) service notifies subscriber prior each call to ported number.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeletePortedNumberNotificationResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service portedNumberNotification - Ported Number Notification (PNN) service notifies subscriber prior each call to ported number.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deletePortedNumberNotificationResponse"
               type="tns:DeletePortedNumberNotificationResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service portedNumberNotification - Ported Number Notification (PNN) service notifies subscriber prior each call to ported number.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetPortedNumberNotificationRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service portedNumberNotification - Ported Number Notification (PNN) service notifies subscriber prior each call to ported number.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getPortedNumberNotificationRequest"
               type="tns:GetPortedNumberNotificationRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service portedNumberNotification - Ported Number Notification (PNN) service notifies subscriber prior each call to ported number.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetPortedNumberNotificationResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service portedNumberNotification - Ported Number Notification (PNN) service notifies subscriber prior each call to ported number.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getPortedNumberNotificationResponse"
               type="tns:GetPortedNumberNotificationResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service portedNumberNotification - Ported Number Notification (PNN) service notifies subscriber prior each call to ported number.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service profile - This service activates basic postpaid and prepaid profiles. It represents the customer subscription in HLR.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Valid subscriber IMSI number.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="profile" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The requested profile.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createProfileRequest" type="tns:CreateProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service profile - This service activates basic postpaid and prepaid profiles. It represents the customer subscription in HLR.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service profile - This service activates basic postpaid and prepaid profiles. It represents the customer subscription in HLR.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createProfileResponse" type="tns:CreateProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service profile - This service activates basic postpaid and prepaid profiles. It represents the customer subscription in HLR.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service profile - This service activates basic postpaid and prepaid profiles. It represents the customer subscription in HLR.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:choice>
                  <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="imsi" type="xs:long" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Valid subscriber IMSI number.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:choice>
               <xs:element name="profile" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The requested profile.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setProfileRequest" type="tns:SetProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service profile - This service activates basic postpaid and prepaid profiles. It represents the customer subscription in HLR.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service profile - This service activates basic postpaid and prepaid profiles. It represents the customer subscription in HLR.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setProfileResponse" type="tns:SetProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service profile - This service activates basic postpaid and prepaid profiles. It represents the customer subscription in HLR.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service profile - This service activates basic postpaid and prepaid profiles. It represents the customer subscription in HLR.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:choice>
                  <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="imsi" type="xs:long" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Valid subscriber IMSI number.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:choice>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteProfileRequest" type="tns:DeleteProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service profile - This service activates basic postpaid and prepaid profiles. It represents the customer subscription in HLR.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service profile - This service activates basic postpaid and prepaid profiles. It represents the customer subscription in HLR.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteProfileResponse" type="tns:DeleteProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service profile - This service activates basic postpaid and prepaid profiles. It represents the customer subscription in HLR.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service profile - This service activates basic postpaid and prepaid profiles. It represents the customer subscription in HLR.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:choice>
                  <xs:element name="voiceMsisdn" type="xs:long" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="imsi" type="xs:long" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Valid subscriber IMSI number.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:choice>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getProfileRequest" type="tns:GetProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service profile - This service activates basic postpaid and prepaid profiles. It represents the customer subscription in HLR.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service profile - This service activates basic postpaid and prepaid profiles. It represents the customer subscription in HLR.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="voiceMsisdn" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="imsi" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Valid subscriber IMSI number.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="profile" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>The requested profile.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="vlr" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Returns actual vlr where customer is currently located.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getProfileResponse" type="tns:GetProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service profile - This service activates basic postpaid and prepaid profiles. It represents the customer subscription in HLR.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:simpleType name="VoiceMail_Language">
      <xs:restriction base="xs:string">
         <xs:enumeration value="CZECH"/>
         <xs:enumeration value="ENGLISH"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="SetVoiceMailRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service voiceMail - The service can provide email and sms notification, blocked, language, and serviceSmsEnabled. Note: When SET operation is used have to be set at least one of these attributes language, emptyCallNotification, blocked and serviceSmsEnabled.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="language" type="tns:VoiceMail_Language" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Sets the Voice Mail language. Values: CZECH, ENGLISH</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="emptyCallNotification" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Enables Who Called for Voice Mail box, when no message is deposited. Default value is true.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="blocked" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Determines wheher service is blocked.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="serviceSmsEnabled" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Enables SMS notification when message is stored in voiceMail.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setVoiceMailRequest" type="tns:SetVoiceMailRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service voiceMail - The service can provide email and sms notification, blocked, language, and serviceSmsEnabled. Note: When SET operation is used have to be set at least one of these attributes language, emptyCallNotification, blocked and serviceSmsEnabled.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetVoiceMailResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service voiceMail - The service can provide email and sms notification, blocked, language, and serviceSmsEnabled. Note: When SET operation is used have to be set at least one of these attributes language, emptyCallNotification, blocked and serviceSmsEnabled.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setVoiceMailResponse" type="tns:SetVoiceMailResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service voiceMail - The service can provide email and sms notification, blocked, language, and serviceSmsEnabled. Note: When SET operation is used have to be set at least one of these attributes language, emptyCallNotification, blocked and serviceSmsEnabled.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteVoiceMailRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service voiceMail - The service can provide email and sms notification, blocked, language, and serviceSmsEnabled. Note: When SET operation is used have to be set at least one of these attributes language, emptyCallNotification, blocked and serviceSmsEnabled.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteVoiceMailRequest" type="tns:DeleteVoiceMailRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service voiceMail - The service can provide email and sms notification, blocked, language, and serviceSmsEnabled. Note: When SET operation is used have to be set at least one of these attributes language, emptyCallNotification, blocked and serviceSmsEnabled.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteVoiceMailResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service voiceMail - The service can provide email and sms notification, blocked, language, and serviceSmsEnabled. Note: When SET operation is used have to be set at least one of these attributes language, emptyCallNotification, blocked and serviceSmsEnabled.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteVoiceMailResponse" type="tns:DeleteVoiceMailResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service voiceMail - The service can provide email and sms notification, blocked, language, and serviceSmsEnabled. Note: When SET operation is used have to be set at least one of these attributes language, emptyCallNotification, blocked and serviceSmsEnabled.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetVoiceMailRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service voiceMail - The service can provide email and sms notification, blocked, language, and serviceSmsEnabled. Note: When SET operation is used have to be set at least one of these attributes language, emptyCallNotification, blocked and serviceSmsEnabled.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getVoiceMailRequest" type="tns:GetVoiceMailRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service voiceMail - The service can provide email and sms notification, blocked, language, and serviceSmsEnabled. Note: When SET operation is used have to be set at least one of these attributes language, emptyCallNotification, blocked and serviceSmsEnabled.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetVoiceMailResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service voiceMail - The service can provide email and sms notification, blocked, language, and serviceSmsEnabled. Note: When SET operation is used have to be set at least one of these attributes language, emptyCallNotification, blocked and serviceSmsEnabled.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="language" type="tns:VoiceMail_Language" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Sets the Voice Mail language. Values: CZECH, ENGLISH</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="email" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Enables settings of email address for service voiceMail</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="emptyCallNotification" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Enables Who Called for Voice Mail box, when no message is deposited. Default value is true.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="blocked" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Determines wheher service is blocked.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="serviceSmsEnabled" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Enables SMS notification when message is stored in voiceMail.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="activeGreetingType" type="xs:long" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Enables SMS notification when message has GreetingMessage in voiceMail. Possible values: 0 = number announcement, 1 = system prompt followed by name tag, 2 = personal greeting	Type of Voce Mail greeting.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getVoiceMailResponse" type="tns:GetVoiceMailResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service voiceMail - The service can provide email and sms notification, blocked, language, and serviceSmsEnabled. Note: When SET operation is used have to be set at least one of these attributes language, emptyCallNotification, blocked and serviceSmsEnabled.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateVoiceMailDestinationRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service voiceMailDestination - The service enables to set email address for sending email with wav attachment. 		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="email" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Enables settings of email address for service voiceMail</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createVoiceMailDestinationRequest"
               type="tns:CreateVoiceMailDestinationRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service voiceMailDestination - The service enables to set email address for sending email with wav attachment. 		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateVoiceMailDestinationResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service voiceMailDestination - The service enables to set email address for sending email with wav attachment. 		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createVoiceMailDestinationResponse"
               type="tns:CreateVoiceMailDestinationResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service voiceMailDestination - The service enables to set email address for sending email with wav attachment. 		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetVoiceMailDestinationRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service voiceMailDestination - The service enables to set email address for sending email with wav attachment. 		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="email" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Enables settings of email address for service voiceMail</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setVoiceMailDestinationRequest" type="tns:SetVoiceMailDestinationRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service voiceMailDestination - The service enables to set email address for sending email with wav attachment. 		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetVoiceMailDestinationResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service voiceMailDestination - The service enables to set email address for sending email with wav attachment. 		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setVoiceMailDestinationResponse"
               type="tns:SetVoiceMailDestinationResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service voiceMailDestination - The service enables to set email address for sending email with wav attachment. 		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteVoiceMailDestinationRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service voiceMailDestination - The service enables to set email address for sending email with wav attachment. 		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteVoiceMailDestinationRequest"
               type="tns:DeleteVoiceMailDestinationRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service voiceMailDestination - The service enables to set email address for sending email with wav attachment. 		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteVoiceMailDestinationResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service voiceMailDestination - The service enables to set email address for sending email with wav attachment. 		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteVoiceMailDestinationResponse"
               type="tns:DeleteVoiceMailDestinationResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service voiceMailDestination - The service enables to set email address for sending email with wav attachment. 		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetVoiceMailPinRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service voiceMailPin - The service enables to reset pin and modify pin for given voiceMsisdn.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="pin" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Modify voiceMail PIN to new value. Reset pin is used when parameter missing in request.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setVoiceMailPinRequest" type="tns:SetVoiceMailPinRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service voiceMailPin - The service enables to reset pin and modify pin for given voiceMsisdn.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetVoiceMailPinResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service voiceMailPin - The service enables to reset pin and modify pin for given voiceMsisdn.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setVoiceMailPinResponse" type="tns:SetVoiceMailPinResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service voiceMailPin - The service enables to reset pin and modify pin for given voiceMsisdn.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:simpleType name="EpsSubscription_Odb">
      <xs:restriction base="xs:string">
         <xs:enumeration value="NONE"/>
         <xs:enumeration value="ALL"/>
         <xs:enumeration value="HPLMN"/>
         <xs:enumeration value="VPLMN"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="CreateEpsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service epsSubscription - This service activates basic LTE profiles. It represents the customer subscription in HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="msisdn" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The MSISDN of the subscriber</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="profileId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Profile ID of the subscriber in HSS </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="apnProfile" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>APN profile of the subscriber in HSS. Has priority over profile ID.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="odb" type="tns:EpsSubscription_Odb" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>EPS Operator Determined Barring (ODB) indicator to be applied to the subscriber: (NONE) the subscriber has access to all EPS packet oriented services, (ALL) all EPS packet oriented services are barred for the subscriber, (HPLMN) EPS packet oriented services are barred for the subscriber from access points that are within the home PLM network, whilst the subscriber is roaming in a visited PLM network. Should be used only in a response. (VPLMN) EPS packet oriented services are barred for the subscriber from access points that are within the roamed visited PLM network Should be used only in a response. The default value is NONE. Values: NONE, ALL, HPLMN, VPLMN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="roamingAllowed" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Tells if the subscriber is allowed to roam and has access to the EPS service. Default value is false</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="individualRatFrequencyPriorityId" type="xs:long" minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>The subscriber Profile Identity for Radio Access Technology (RAT)/Frequency Priority. If defined, during traffic the value overrides the value in the corresponding attribute of the associated configured Profile.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="copyAPN" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Copy individual APNs from HLR to HSS-EPS. Optional parameter, if omitted or set to false then HLR is not checked and subscriber is created without any individual APNs.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createEpsSubscriptionRequest" type="tns:CreateEpsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service epsSubscription - This service activates basic LTE profiles. It represents the customer subscription in HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateEpsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service epsSubscription - This service activates basic LTE profiles. It represents the customer subscription in HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createEpsSubscriptionResponse" type="tns:CreateEpsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service epsSubscription - This service activates basic LTE profiles. It represents the customer subscription in HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetEpsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service epsSubscription - This service activates basic LTE profiles. It represents the customer subscription in HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="msisdn" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The MSISDN of the subscriber</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="profileId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Profile ID of the subscriber in HSS </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="apnProfile" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>APN profile of the subscriber in HSS. Has priority over profile ID.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="odb" type="tns:EpsSubscription_Odb" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>EPS Operator Determined Barring (ODB) indicator to be applied to the subscriber: (NONE) the subscriber has access to all EPS packet oriented services, (ALL) all EPS packet oriented services are barred for the subscriber, (HPLMN) EPS packet oriented services are barred for the subscriber from access points that are within the home PLM network, whilst the subscriber is roaming in a visited PLM network. Should be used only in a response. (VPLMN) EPS packet oriented services are barred for the subscriber from access points that are within the roamed visited PLM network Should be used only in a response. The default value is NONE. Values: NONE, ALL, HPLMN, VPLMN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="roamingAllowed" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Tells if the subscriber is allowed to roam and has access to the EPS service. Default value is false</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="individualRatFrequencyPriorityId" type="xs:long" minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>The subscriber Profile Identity for Radio Access Technology (RAT)/Frequency Priority. If defined, during traffic the value overrides the value in the corresponding attribute of the associated configured Profile.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="copyAPN" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Copy individual APNs from HLR to HSS-EPS. Optional parameter, if omitted or set to false then HLR is not checked and subscriber is created without any individual APNs.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setEpsSubscriptionRequest" type="tns:SetEpsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service epsSubscription - This service activates basic LTE profiles. It represents the customer subscription in HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetEpsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service epsSubscription - This service activates basic LTE profiles. It represents the customer subscription in HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setEpsSubscriptionResponse" type="tns:SetEpsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service epsSubscription - This service activates basic LTE profiles. It represents the customer subscription in HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteEpsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service epsSubscription - This service activates basic LTE profiles. It represents the customer subscription in HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteEpsSubscriptionRequest" type="tns:DeleteEpsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service epsSubscription - This service activates basic LTE profiles. It represents the customer subscription in HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteEpsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service epsSubscription - This service activates basic LTE profiles. It represents the customer subscription in HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteEpsSubscriptionResponse" type="tns:DeleteEpsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service epsSubscription - This service activates basic LTE profiles. It represents the customer subscription in HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetEpsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service epsSubscription - This service activates basic LTE profiles. It represents the customer subscription in HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getEpsSubscriptionRequest" type="tns:GetEpsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service epsSubscription - This service activates basic LTE profiles. It represents the customer subscription in HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetEpsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service epsSubscription - This service activates basic LTE profiles. It represents the customer subscription in HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="msisdn" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>The MSISDN of the subscriber</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="profileId" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Profile ID of the subscriber in HSS </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="apnProfile" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>APN profile of the subscriber in HSS. Has priority over profile ID.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="odb" type="tns:EpsSubscription_Odb" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>EPS Operator Determined Barring (ODB) indicator to be applied to the subscriber: (NONE) the subscriber has access to all EPS packet oriented services, (ALL) all EPS packet oriented services are barred for the subscriber, (HPLMN) EPS packet oriented services are barred for the subscriber from access points that are within the home PLM network, whilst the subscriber is roaming in a visited PLM network. Should be used only in a response. (VPLMN) EPS packet oriented services are barred for the subscriber from access points that are within the roamed visited PLM network Should be used only in a response. The default value is NONE. Values: NONE, ALL, HPLMN, VPLMN</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="roamingAllowed" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Tells if the subscriber is allowed to roam and has access to the EPS service. Default value is false</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="individualRatFrequencyPriorityId" type="xs:long" minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>The subscriber Profile Identity for Radio Access Technology (RAT)/Frequency Priority. If defined, during traffic the value overrides the value in the corresponding attribute of the associated configured Profile.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="copyAPN" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Copy individual APNs from HLR to HSS-EPS. Optional parameter, if omitted or set to false then HLR is not checked and subscriber is created without any individual APNs.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getEpsSubscriptionResponse" type="tns:GetEpsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service epsSubscription - This service activates basic LTE profiles. It represents the customer subscription in HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateEpsApnRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service epsApn - This service assigns individual APN to HSS Evolved Packet System (EPS) user.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="apnId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>ID of APN as is defined in HSS EPS</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="apnName" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Specifies APN. Either parameter apn or apnId has to be always presented in provisioning request. In case of both parameters apn and apnId are presented, the value of parameter apnId will be ignored</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="apnIpV4" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Specifies APN static IP address - IPv4.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="apnIpV6" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Specifies APN static IP address - IPv6.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createEpsApnRequest" type="tns:CreateEpsApnRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service epsApn - This service assigns individual APN to HSS Evolved Packet System (EPS) user.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateEpsApnResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service epsApn - This service assigns individual APN to HSS Evolved Packet System (EPS) user.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createEpsApnResponse" type="tns:CreateEpsApnResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service epsApn - This service assigns individual APN to HSS Evolved Packet System (EPS) user.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteEpsApnRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service epsApn - This service assigns individual APN to HSS Evolved Packet System (EPS) user.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="apnId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>ID of APN as is defined in HSS EPS</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="apnName" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Specifies APN. Either parameter apn or apnId has to be always presented in provisioning request. In case of both parameters apn and apnId are presented, the value of parameter apnId will be ignored</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteEpsApnRequest" type="tns:DeleteEpsApnRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service epsApn - This service assigns individual APN to HSS Evolved Packet System (EPS) user.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteEpsApnResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service epsApn - This service assigns individual APN to HSS Evolved Packet System (EPS) user.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteEpsApnResponse" type="tns:DeleteEpsApnResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service epsApn - This service assigns individual APN to HSS Evolved Packet System (EPS) user.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetEpsApnRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service epsApn - This service assigns individual APN to HSS Evolved Packet System (EPS) user.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getEpsApnRequest" type="tns:GetEpsApnRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service epsApn - This service assigns individual APN to HSS Evolved Packet System (EPS) user.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetEpsApnResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service epsApn - This service assigns individual APN to HSS Evolved Packet System (EPS) user.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="apnId" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>ID of APN as is defined in HSS EPS</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="apnName" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Specifies APN. Either parameter apn or apnId has to be always presented in provisioning request. In case of both parameters apn and apnId are presented, the value of parameter apnId will be ignored</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="apns" minOccurs="0" maxOccurs="unbounded">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="apnId" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>ID of APN as is defined in HSS EPS.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="apnIpV4" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Specifies APN static IP address - IPv4.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="apnIpV6" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Specifies APN static IP address - IPv6.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getEpsApnResponse" type="tns:GetEpsApnResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service epsApn - This service assigns individual APN to HSS Evolved Packet System (EPS) user.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateEpsImsiChangeRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service epsImsiChange - This service enables change subscriber IMSI inside HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="imsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Old IMSI</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="newImsi" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>New IMSI</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createEpsImsiChangeRequest" type="tns:CreateEpsImsiChangeRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service epsImsiChange - This service enables change subscriber IMSI inside HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateEpsImsiChangeResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service epsImsiChange - This service enables change subscriber IMSI inside HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createEpsImsiChangeResponse" type="tns:CreateEpsImsiChangeResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service epsImsiChange - This service enables change subscriber IMSI inside HSS Evolved Packet System (EPS).
		</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateOcsRCRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service ocsRC - Recurring Charge applies recurring charge to subscriber.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="recurringChargeId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Recurring charge associated to subscriber</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="groupId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Group id of VPN group to which subscriber belongs</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="discount" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Discount of renewal fee.In percents.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="discountCode" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Discount code for renewal fee discount.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="multiplier" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Multiplies the nominal RC charge.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="ocsStartDate" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Start date applied to recurring charge</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="ocsEndDate" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>End date applied to recurring charge</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="overrideRate" type="xs:long" minOccurs="0" nillable="true">
                  <xs:annotation>
                     <xs:documentation>The individual price rate.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createOcsRCRequest" type="tns:CreateOcsRCRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service ocsRC - Recurring Charge applies recurring charge to subscriber.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateOcsRCResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service ocsRC - Recurring Charge applies recurring charge to subscriber.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createOcsRCResponse" type="tns:CreateOcsRCResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service ocsRC - Recurring Charge applies recurring charge to subscriber.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteOcsRCRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service ocsRC - Recurring Charge applies recurring charge to subscriber.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="recurringChargeId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Recurring charge associated to subscriber</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="groupId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Group id of VPN group to which subscriber belongs</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="getAddInfo" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>if TRUE then renewalDateMinusOne is returned in the response</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteOcsRCRequest" type="tns:DeleteOcsRCRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service ocsRC - Recurring Charge applies recurring charge to subscriber.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteOcsRCResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service ocsRC - Recurring Charge applies recurring charge to subscriber.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="renewalDateMinusOne" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Renewal date of recurring charge minus one day.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteOcsRCResponse" type="tns:DeleteOcsRCResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service ocsRC - Recurring Charge applies recurring charge to subscriber.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetOcsRCRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service ocsRC - Recurring Charge applies recurring charge to subscriber.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide service</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getOcsRCRequest" type="tns:GetOcsRCRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service ocsRC - Recurring Charge applies recurring charge to subscriber.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetOcsRCResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service ocsRC - Recurring Charge applies recurring charge to subscriber.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="recurringChargeId" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Recurring charge associated to subscriber</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="groupId" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Group id of VPN group to which subscriber belongs</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="discount" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Discount of renewal fee.In percents.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="discountCode" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Discount code for renewal fee discount.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="getAddInfo" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>if TRUE then renewalDateMinusOne is returned in the response</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="multiplier" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Multiplies the nominal RC charge.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="ocsStartDate" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Start date applied to recurring charge</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="ocsEndDate" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>End date applied to recurring charge</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="renewalDateMinusOne" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Renewal date of recurring charge minus one day.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="overrideRate" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The individual price rate.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getOcsRCResponse" type="tns:GetOcsRCResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service ocsRC - Recurring Charge applies recurring charge to subscriber.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetOcsRCRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service ocsRC - Recurring Charge applies recurring charge to subscriber.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="recurringChargeId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Recurring charge associated to subscriber</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="groupId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Group id of VPN group to which subscriber belongs</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="multiplier" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Multiplies the nominal RC charge.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="ocsEndDate" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>End date applied to recurring charge</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="overrideRate" type="xs:long" minOccurs="0" nillable="true">
                  <xs:annotation>
                     <xs:documentation>The individual price rate.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setOcsRCRequest" type="tns:SetOcsRCRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service ocsRC - Recurring Charge applies recurring charge to subscriber.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetOcsRCResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service ocsRC - Recurring Charge applies recurring charge to subscriber.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setOcsRCResponse" type="tns:SetOcsRCResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service ocsRC - Recurring Charge applies recurring charge to subscriber.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetOcsBucketRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service ocsBucket -  This service enables setting of various enhanced buckets on Alcatel IN.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:choice>
                  <xs:element name="voiceMsisdn" type="xs:long" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="groupId" type="xs:string" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies SFT group to which provide the service. Valid SFT account ID.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:choice>
               <xs:element name="bucket" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation> Subscriber’s bucket.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="adjustAmount" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation> Subscriber’s adjustment amount for bucket. Amount in units.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="leftoverBalance" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation> Subscriber’s number of left units within the period in units.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="rolloverBalance" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s number of free units rolled over from previous period related to specific bucket in units.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="absoluteExtraAmount" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The extra free allowance for each bucket in the bundle. Parameter is mutual exclusive to percentageExtraAmount. Units are: Credits = units, Minutes = seconds, SMS = SMS. </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="percentageExtraAmount" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The extra free allowance percentage based on amount value for each bucket in the bundle.Parameter is mutual exclusive to absoluteExtraAmount.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="extraDiscountCode" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Discount code extra allowance. Field is evaluated only if absoluteExtraAmount or percentageExtraAmount is used. Valid discount code (0..9999). </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Start date applied to bucket. Valid date format YYYYMMDD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="endDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>End date applied bucket. Valid date format YYYYMMDD.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="lexCountValue" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Set personal spending limit for the bucket counter in units. For personal spending limit reset/termination use 0 as the value. Available only for MSISDN not for GROUP! </xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setOcsBucketRequest" type="tns:SetOcsBucketRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service ocsBucket -  This service enables setting of various enhanced buckets on Alcatel IN.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetOcsBucketResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service ocsBucket -  This service enables setting of various enhanced buckets on Alcatel IN.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setOcsBucketResponse" type="tns:SetOcsBucketResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service ocsBucket -  This service enables setting of various enhanced buckets on Alcatel IN.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteOcsBucketRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service ocsBucket -  This service enables setting of various enhanced buckets on Alcatel IN.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:choice>
                  <xs:element name="voiceMsisdn" type="xs:long" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="groupId" type="xs:string" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies SFT group to which provide the service. Valid SFT account ID.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:choice>
               <xs:element name="bucket" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation> Subscriber’s bucket.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteOcsBucketRequest" type="tns:DeleteOcsBucketRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service ocsBucket -  This service enables setting of various enhanced buckets on Alcatel IN.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteOcsBucketResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service ocsBucket -  This service enables setting of various enhanced buckets on Alcatel IN.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteOcsBucketResponse" type="tns:DeleteOcsBucketResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service ocsBucket -  This service enables setting of various enhanced buckets on Alcatel IN.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetOcsBucketRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service ocsBucket -  This service enables setting of various enhanced buckets on Alcatel IN.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:choice>
                  <xs:element name="voiceMsisdn" type="xs:long" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies the subscriber to whom provide the service.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element name="groupId" type="xs:string" minOccurs="0" nillable="false">
                     <xs:annotation>
                        <xs:documentation>Identifies SFT group to which provide the service. Valid SFT account ID.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:choice>
               <xs:element name="bucket" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation> Subscriber’s bucket.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getOcsBucketRequest" type="tns:GetOcsBucketRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service ocsBucket -  This service enables setting of various enhanced buckets on Alcatel IN.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetOcsBucketResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service ocsBucket -  This service enables setting of various enhanced buckets on Alcatel IN.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="adjustAmount" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation> Subscriber’s adjustment amount for bucket. Amount in units.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="leftoverBalance" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation> Subscriber’s number of left units within the period in units.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="rolloverBalance" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Subscriber’s number of free units rolled over from previous period related to specific bucket in units.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="absoluteExtraAmount" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>The extra free allowance for each bucket in the bundle. Parameter is mutual exclusive to percentageExtraAmount. Units are: Credits = units, Minutes = seconds, SMS = SMS. </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="percentageExtraAmount" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>The extra free allowance percentage based on amount value for each bucket in the bundle.Parameter is mutual exclusive to absoluteExtraAmount.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="extraDiscountCode" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Discount code extra allowance. Field is evaluated only if absoluteExtraAmount or percentageExtraAmount is used. Valid discount code (0..9999). </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Start date applied to bucket. Valid date format YYYYMMDD.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="endDate" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>End date applied bucket. Valid date format YYYYMMDD.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="lexCountValue" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Set personal spending limit for the bucket counter in units. For personal spending limit reset/termination use 0 as the value. Available only for MSISDN not for GROUP! </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getOcsBucketResponse" type="tns:GetOcsBucketResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service ocsBucket -  This service enables setting of various enhanced buckets on Alcatel IN.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetGprsProfileSharedFupGroupRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service gprsProfileSharedFupGroup - This service enables retrieving details of shared FUP group. Returned details contain information about master subscription along with detailed information for every member (information returned for each member is the same as result of ‘GET’ operation on service GPRS Profile). Service supports only operation ‘GET’.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the master subscriber of shared FUP group</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="pricePlan" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the price plan of master subscriber that is being shared</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Valid start date</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getGprsProfileSharedFupGroupRequest"
               type="tns:GetGprsProfileSharedFupGroupRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service gprsProfileSharedFupGroup - This service enables retrieving details of shared FUP group. Returned details contain information about master subscription along with detailed information for every member (information returned for each member is the same as result of ‘GET’ operation on service GPRS Profile). Service supports only operation ‘GET’.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetGprsProfileSharedFupGroupResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service gprsProfileSharedFupGroup - This service enables retrieving details of shared FUP group. Returned details contain information about master subscription along with detailed information for every member (information returned for each member is the same as result of ‘GET’ operation on service GPRS Profile). Service supports only operation ‘GET’.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="finishDate" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>End date of the price plan</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="fupLimitId" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Individual limit on subscription level, ID from predefined set, can be null.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="numberOfAutoRebuys" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Number of autorebuys, which can happen during one bill cycle. Can be null. Default value is 999999, which means unlimited. 0 means no autorebuy can happen.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="autoRebuyFupLimitId" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Specifies FUP bundle ID, which will be used when AutoRebuy is triggered.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="superchargerId" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Specifies FUP bundle ID, which will be used as the supercharger.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="activePeriod" minOccurs="0" maxOccurs="unbounded">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Start date of currently active period</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="finishDate" type="xs:dateTime" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>End date of currently active period</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="usage" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Usage in active period in bytes</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="totalUsage" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Total Usage in active period in bytes</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="fupLimit" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>FUP limit for active period.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="superchargerId" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Specifies FUP bundle ID of the supercharger.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="numberOfAutoRebuys" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Number of remaining autorebuys within related bill cycle. Can be null. Default value is 999999, which means unlimited. 0 means no autorebuy can happen.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                        <xs:element name="subs" minOccurs="0" maxOccurs="unbounded">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="memberMsisdn" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>MSISDN of shared FUP group member</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="type" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Type of the customer. Based on the customer type OMM alters default behaviour of GPRS usage charging.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="billPeriod" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Current bill period of post-paid customer.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="pricePlans" minOccurs="0" maxOccurs="unbounded">
                                    <xs:complexType>
                                       <xs:sequence>
                                          <xs:element name="pricePlan" type="xs:long" minOccurs="0" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>Identifies the price plan – please refer to table in service gprsProfilePricePlan</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                          <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>Start date of the price plan</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                          <xs:element name="finishDate" type="xs:dateTime" minOccurs="0" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>End date of the price plan Missing (null) value specifies indefinite period</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                          <xs:element name="masterMsisdn" type="xs:long" minOccurs="0" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>MSISDN of shared FUP group master subscriber</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                          <xs:element name="fupLimitId" type="xs:long" minOccurs="0" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>Individual limit on subscription level, ID from predefined set, can be null.</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                          <xs:element name="numberOfAutoRebuys" type="xs:long" minOccurs="0" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>Number of autorebuys, which can happen during one bill cycle. Can be null. Default value is 999999, which means unlimited. 0 means no autorebuy can happen.</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                          <xs:element name="autoRebuyFupLimitId" type="xs:long" minOccurs="0" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>Specifies FUP bundle ID, which will be used when AutoRebuy is triggered.</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                          <xs:element name="superchargerId" type="xs:long" minOccurs="0" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>Specifies FUP bundle ID of the supercharger.</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                          <xs:element name="activePeriod" minOccurs="0" maxOccurs="unbounded">
                                             <xs:complexType>
                                                <xs:sequence>
                                                   <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                                                      <xs:annotation>
                                                         <xs:documentation>Start date of currently active period</xs:documentation>
                                                      </xs:annotation>
                                                   </xs:element>
                                                   <xs:element name="finishDate" type="xs:dateTime" minOccurs="0" nillable="false">
                                                      <xs:annotation>
                                                         <xs:documentation>End date of currently active period</xs:documentation>
                                                      </xs:annotation>
                                                   </xs:element>
                                                   <xs:element name="usage" type="xs:long" minOccurs="0" nillable="false">
                                                      <xs:annotation>
                                                         <xs:documentation>Usage in active period in bytes</xs:documentation>
                                                      </xs:annotation>
                                                   </xs:element>
                                                   <xs:element name="totalUsage" type="xs:long" minOccurs="0" nillable="false">
                                                      <xs:annotation>
                                                         <xs:documentation>Total Usage in active period in bytes</xs:documentation>
                                                      </xs:annotation>
                                                   </xs:element>
                                                   <xs:element name="fupLimit" type="xs:long" minOccurs="0" nillable="false">
                                                      <xs:annotation>
                                                         <xs:documentation>FUP limit for active period.</xs:documentation>
                                                      </xs:annotation>
                                                   </xs:element>
                                                   <xs:element name="numberOfAutoRebuys" type="xs:long" minOccurs="0" nillable="false">
                                                      <xs:annotation>
                                                         <xs:documentation>Number of remaining autorebuys within related bill cycle. Can be null. Default value is 999999, which means unlimited. 0 means no autorebuy can happen.</xs:documentation>
                                                      </xs:annotation>
                                                   </xs:element>
                                                </xs:sequence>
                                             </xs:complexType>
                                          </xs:element>
                                       </xs:sequence>
                                    </xs:complexType>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getGprsProfileSharedFupGroupResponse"
               type="tns:GetGprsProfileSharedFupGroupResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service gprsProfileSharedFupGroup - This service enables retrieving details of shared FUP group. Returned details contain information about master subscription along with detailed information for every member (information returned for each member is the same as result of ‘GET’ operation on service GPRS Profile). Service supports only operation ‘GET’.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:simpleType name="PcrfProfile_VfContentFilter">
      <xs:restriction base="xs:string">
         <xs:enumeration value="ADULT"/>
         <xs:enumeration value="CHILD"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="SetPcrfProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service pcrfProfile - This service modifies customer subscription in Huawei RM9000</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="category" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber category</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="billPeriod" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Current bill period of post-paid customer.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="state" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Customer’s status.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vfContentFilter" type="tns:PcrfProfile_VfContentFilter" minOccurs="0"
                           nillable="false">
                  <xs:annotation>
                     <xs:documentation>Content filter, default value on PCRF is adult. Values: ADULT, CHILD</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="servicePackages" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="packageName" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>The name of service package subscribed to customer</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Start date of the service package</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="endDate" type="xs:dateTime" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>End date of the service package</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="services" minOccurs="0" maxOccurs="unbounded">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="serviceName" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>The name of service</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Start date of the service</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="endDate" type="xs:dateTime" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>End date of the service</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setPcrfProfileRequest" type="tns:SetPcrfProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service pcrfProfile - This service modifies customer subscription in Huawei RM9000</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetPcrfProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service pcrfProfile - This service modifies customer subscription in Huawei RM9000</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setPcrfProfileResponse" type="tns:SetPcrfProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service pcrfProfile - This service modifies customer subscription in Huawei RM9000</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetPcrfProfileRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service pcrfProfile - This service modifies customer subscription in Huawei RM9000</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getPcrfProfileRequest" type="tns:GetPcrfProfileRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service pcrfProfile - This service modifies customer subscription in Huawei RM9000</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetPcrfProfileResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service pcrfProfile - This service modifies customer subscription in Huawei RM9000</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="category" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Subscriber category</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="type" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Subscriber type</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="billPeriod" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Current bill period of post-paid customer.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="vfContentFilter" type="tns:PcrfProfile_VfContentFilter" minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>Content filter, default value on PCRF is adult. Values: ADULT, CHILD</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="servicePackages" minOccurs="0" maxOccurs="unbounded">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="packageName" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>The name of service package subscribed to customer</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Start date of the service package</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="endDate" type="xs:dateTime" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>End date of the service package</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="roamingType" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Type of subscriber’s roaming</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="services" minOccurs="0" maxOccurs="unbounded">
                                    <xs:complexType>
                                       <xs:sequence>
                                          <xs:element name="serviceName" type="xs:long" minOccurs="0" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>The name of service</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                          <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>Start date of the service</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                          <xs:element name="endDate" type="xs:dateTime" minOccurs="0" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>End date of the service</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                          <xs:element name="roamingType" type="xs:string" minOccurs="0" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>Type of subscriber’s roaming</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                          <xs:element name="quotas" minOccurs="0" maxOccurs="unbounded">
                                             <xs:complexType>
                                                <xs:sequence>
                                                   <xs:element name="quotaName" type="xs:string" minOccurs="0" nillable="false">
                                                      <xs:annotation>
                                                         <xs:documentation>The name of quota subscribed to customer</xs:documentation>
                                                      </xs:annotation>
                                                   </xs:element>
                                                   <xs:element name="value" type="xs:long" minOccurs="0" nillable="false">
                                                      <xs:annotation>
                                                         <xs:documentation>Initial value of the quota</xs:documentation>
                                                      </xs:annotation>
                                                   </xs:element>
                                                   <xs:element name="balance" type="xs:long" minOccurs="0" nillable="false">
                                                      <xs:annotation>
                                                         <xs:documentation>The balance of this quota.</xs:documentation>
                                                      </xs:annotation>
                                                   </xs:element>
                                                   <xs:element name="consumption" type="xs:long" minOccurs="0" nillable="false">
                                                      <xs:annotation>
                                                         <xs:documentation>The consumed value on this quota</xs:documentation>
                                                      </xs:annotation>
                                                   </xs:element>
                                                </xs:sequence>
                                             </xs:complexType>
                                          </xs:element>
                                       </xs:sequence>
                                    </xs:complexType>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getPcrfProfileResponse" type="tns:GetPcrfProfileResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service pcrfProfile - This service modifies customer subscription in Huawei RM9000</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateGprsProfilePeriodRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service gprsProfilePeriod - The synchronization request between SurePay and OMM based on notifaction sent by SurePay</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="pricePlan" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the price plan (subscription)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="startDate" type="xs:dateTime" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Start date of the price plan (subscription) – not used by V4, mandatory for V2</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="startDatePeriod" type="xs:dateTime" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscription period start date (not including timezone)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="endDatePeriod" type="xs:dateTime" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscription period end date (not including timezone)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="footprint" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Zone where customer starts DAS (Daily All Service) period on eSM (SurePay)</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createGprsProfilePeriodRequest" type="tns:CreateGprsProfilePeriodRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service gprsProfilePeriod - The synchronization request between SurePay and OMM based on notifaction sent by SurePay</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateGprsProfilePeriodResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service gprsProfilePeriod - The synchronization request between SurePay and OMM based on notifaction sent by SurePay</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createGprsProfilePeriodResponse"
               type="tns:CreateGprsProfilePeriodResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service gprsProfilePeriod - The synchronization request between SurePay and OMM based on notifaction sent by SurePay</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateOcsFnFBundleRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service ocsFnFBundle - OCS FnF bundle is very specific implementation on Alcatel platform. The FnF Bundle service allows subscribers to manage and maintain their lists of favourite numbers. Maximal 4 favourite numbers are allowed by Alcatel platform.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="favourite1" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the favourite MSISDN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="favourite2" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the favourite MSISDN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="favourite3" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the favourite MSISDN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="favourite4" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the favourite MSISDN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="bundle" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s bundle (promotional Tariff Plan with discount and/or Buckets attached to it.)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="discount" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Discount of renewal fee.In percents.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="discountCode" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Discount code for renewal fee discount.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="startDate" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Start date applied to bundle</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="endDate" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>End date applied to bundle</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createOcsFnFBundleRequest" type="tns:CreateOcsFnFBundleRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service ocsFnFBundle - OCS FnF bundle is very specific implementation on Alcatel platform. The FnF Bundle service allows subscribers to manage and maintain their lists of favourite numbers. Maximal 4 favourite numbers are allowed by Alcatel platform.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateOcsFnFBundleResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service ocsFnFBundle - OCS FnF bundle is very specific implementation on Alcatel platform. The FnF Bundle service allows subscribers to manage and maintain their lists of favourite numbers. Maximal 4 favourite numbers are allowed by Alcatel platform.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createOcsFnFBundleResponse" type="tns:CreateOcsFnFBundleResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service ocsFnFBundle - OCS FnF bundle is very specific implementation on Alcatel platform. The FnF Bundle service allows subscribers to manage and maintain their lists of favourite numbers. Maximal 4 favourite numbers are allowed by Alcatel platform.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetOcsFnFBundleRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service ocsFnFBundle - OCS FnF bundle is very specific implementation on Alcatel platform. The FnF Bundle service allows subscribers to manage and maintain their lists of favourite numbers. Maximal 4 favourite numbers are allowed by Alcatel platform.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="favourite1" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the favourite MSISDN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="favourite2" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the favourite MSISDN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="favourite3" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the favourite MSISDN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="favourite4" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the favourite MSISDN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="bundle" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s bundle (promotional Tariff Plan with discount and/or Buckets attached to it.)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="startDate" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Start date applied to bundle</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="endDate" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>End date applied to bundle</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="renewalDateMinusOne" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>End date applied to bundle</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setOcsFnFBundleRequest" type="tns:SetOcsFnFBundleRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service ocsFnFBundle - OCS FnF bundle is very specific implementation on Alcatel platform. The FnF Bundle service allows subscribers to manage and maintain their lists of favourite numbers. Maximal 4 favourite numbers are allowed by Alcatel platform.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetOcsFnFBundleResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service ocsFnFBundle - OCS FnF bundle is very specific implementation on Alcatel platform. The FnF Bundle service allows subscribers to manage and maintain their lists of favourite numbers. Maximal 4 favourite numbers are allowed by Alcatel platform.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setOcsFnFBundleResponse" type="tns:SetOcsFnFBundleResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service ocsFnFBundle - OCS FnF bundle is very specific implementation on Alcatel platform. The FnF Bundle service allows subscribers to manage and maintain their lists of favourite numbers. Maximal 4 favourite numbers are allowed by Alcatel platform.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteOcsFnFBundleRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service ocsFnFBundle - OCS FnF bundle is very specific implementation on Alcatel platform. The FnF Bundle service allows subscribers to manage and maintain their lists of favourite numbers. Maximal 4 favourite numbers are allowed by Alcatel platform.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="bundle" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Subscriber’s bundle (promotional Tariff Plan with discount and/or Buckets attached to it.)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="getAddInfo" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>if TRUE then renewalDateMinusOne is returned in the response</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteOcsFnFBundleRequest" type="tns:DeleteOcsFnFBundleRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service ocsFnFBundle - OCS FnF bundle is very specific implementation on Alcatel platform. The FnF Bundle service allows subscribers to manage and maintain their lists of favourite numbers. Maximal 4 favourite numbers are allowed by Alcatel platform.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteOcsFnFBundleResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service ocsFnFBundle - OCS FnF bundle is very specific implementation on Alcatel platform. The FnF Bundle service allows subscribers to manage and maintain their lists of favourite numbers. Maximal 4 favourite numbers are allowed by Alcatel platform.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteOcsFnFBundleResponse" type="tns:DeleteOcsFnFBundleResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service ocsFnFBundle - OCS FnF bundle is very specific implementation on Alcatel platform. The FnF Bundle service allows subscribers to manage and maintain their lists of favourite numbers. Maximal 4 favourite numbers are allowed by Alcatel platform.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateAtosVpnRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service atosVpn - AtosVpn provides create, set and delete VPN on network element ATOS.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="vpnName" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Up to 60 characters used to identify the VPN. It is unique within the VPN service, i.e. there are no two VPN subscribers with the same name. Only A-Z a-z 0-9 _ - . , : ; and spaces
are supported.Characters present in the local alphabet may also be supported in certain deployments.Parameter has to be also used as subscriberIdType and its value as subscriberId in create request.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="blockF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag that enables blocking of originating calls for all VPN Extensions and also terminating calls to Mobile Extensions in roaming.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="callAdmissionControlF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if the OL Call Admission Control feature is:- active (true) - inactive (false)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="callBackPrn" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Callback service prefix specific for VPN.Only numerical digits. This is a market adaptation and not part of the standard product.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="callBackF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if the OL Call Deflection feature is:- active (true) - inactive (false)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="callDeflectionF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if the OL Call Deflection feature is: -  active (true) -  inactive (false)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="chargingId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Charging Identifier. This is included in CDRs and is intended to map to a specific key used for charging in Service Provider BSS systems.Alphanumeric maximum length 9.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="cliDisplayType" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicates how the outgoing CLI is to be sent for on-net calls.1  Display private number 2  Display public number 3  Display according to number dialled </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="clipnsMode" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating whether CLIP No Screening is:- active (1) - inactive (0)It allows provisioned number to be sent as the outgoing CLI for off-net calls instead of the real number associated to the extension making the call.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="clipnsNumber" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Number configured to CLIP No Screening</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="defUniquePrefix" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Prefix used in iVPN to make extensions unique throughout all participating countries when the PNP is not global (a given extension may exist in several countries). If present, it is propagated to each PNP range, when the range is created. </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="distinctRing" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Distinctive ringing. It allows the user to select specific ring-tones depending on the type and call scenario. Flag indicating whether Distinctive Ringing is :-  active (1) -  inactive (0) </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drOffNet" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating whether OFF Net scenario is active (1) or inactive (0) in order to configure Distinctive Ringing</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drOnNet" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating whether ON NET scenario is active (1) or inactive (0) in order to configure Distinctive Ringing</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drOnNetGroup" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating whether ON NET IN GROUP scenario is active (1) or inactive (0) in order to configure Distinctive Ringing</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drToneOffNet" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Ring Tone of the Distinctive Ringing OFF NET scenario</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drToneOnNet" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Ring Tone of the Distinctive Ringing ON NET scenario</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drToneOnNetGroup" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Ring Tone of the Distinctive Ringing ON NET IN GROUP scenario</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="escapeCode" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>An Escape Code (EC) is a sequence of digits which when dialled before the called number make the call automatically considered as an off-net call to a public number.
The Escape Code is specific to a company VPN. It is defined with either one or two digits and is usually set to 0.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="escapeCodeType" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Escape code type. Possible values:- Escape code for NONE (0)-  Escape code TYPE I (1) -  Escape code TYPE II (2)-  Escape code for FIXED (3) If the Escape Code option is activated 
for specific devices, then calls from those devices to public numbers must be prefixed by the escapeCode</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="euptStickyF" type="xs:boolean" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>True to set the new EUPT as sticky Any EU Profile created based on this EUP Template will be created as an sticky EU Profile An Sticky EUP cannot be linked to the EU 
calendar. It can only be manually activated and remains active until another EUP is manually activated Mandatory when euptTemplateName is used. EUPT – End User Profile Template</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="euptTemplateDesc" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>EUP Template descriptive commentary EUPT – End User Profile Template</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="euptTemplateName" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>EUP Template Name Mandatory when parameter euptStickyF is used .EUPT – End User Profile Template</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="extLength" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>If the flag „variable length‟ is not set to true (i.e. indicates fixed length), this field will specify the length of VPN short code extensions. If the flag indicates variable extensions, this field will contain a proposed length.Length shall be between 2 and 15 digits.If group code exists for a given VPN, private extension plus group code shall not be higher than 15. </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="forcedPabxF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if Forced On PBX service  is:-  active (true) -  inactive (false)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="forceOnNetF" type="xs:boolean" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>If this flag is activated, then calls to public numbers using the Escape Code will be treated as on-net when the dialled number belongs to an extension in the same VPN as the caller. Values: 
-  active (true) -  inactive (false).</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fraudBarring" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if Fraud Barring should be applied for all originating calls from the company VPN. Possible values are:- Inactive(0)- Manual(2)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fraudDetectionAction" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicates the action to apply in case of fraud detection. Possible values are:- No Action (0)- Automatic Fraud Barring(1)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fraudDetectionAlarm" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicates if alarm is send in case of fraud detection. Possible values are:- Send alarm (true) - Not send alarm (false)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fraudDetectionF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if Fraud Detection is active at VPN Level:- active (true) - inactive (false)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fraudThresGroup" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Fraud Threshold Level for Groups. Positive numeric value (including 0) from 1 to 9 digits. Zero value means fraud detection is disabled at Group Level.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fraudThresNatExt" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Fraud Threshold Level for Individual Extensions. Positive numeric value (including 0)  from 1 to 9 digits.   Zero value means fraud detection is disabled at Extension Level.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fraudThresPbx" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Fraud Threshold Level for PBXs. Positive numeric value (including 0) from 1 to 9 digits.  Zero value means fraud detection is disabled at PBX Level.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fraudThresVpn" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Fraud Threshold Level for the VPN. Positive numeric value (including 0) from 1 to 9 digits. Zero value means fraud threshold disabled at VPN level.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fullAccessCode" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Prefix that enables VPN Extensions to call both on-net and off-net destinations. </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="globalAccId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>MP global VPN ID. For international VPNs only. Global VPN Name that identifies and differentiates the VPN as International. </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="globalPnpF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating that the PNP extension ranges are global to all countries participating in an iVPN (i.e. a given extension may only exist in one country).This field is only applicable if the iVPN 
feature is available. As international VPNs are not supported, the flag is set to true.Possible values are -  local PNP (false)-  global PNP (true) </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="groupCodeLength" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Length of group code. The Group Code is used for inter-group short code dialling when the dialled extension belongs to a group with a group code defined.It can take the values in the range 
[0...3]. When the value is 0, PNP ranges can only be defined at VPN level and no Group codes can be defined when provisioning a group.This attribute cannot be modified later, and it is checked against when a group is created with a Group Code.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="intDestinationsF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if International Destinations calls are barred when fraud Barring is active. It has the following values:- active (true) - inactive (false)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="languageCode" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>VPN Default language. Valid values depend on the country.CS - Czech DE - German EN - English</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="location" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Location information must be provisioned at the VPN level and is used for location routing e.g. for an Emergency Call (Location Number + Emergency Number). Only numerical digits are valid.
</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="mohGroupsF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if Music On Hold group functionality is:-  active (true) -  inactive (false)This parameter indicates if music shall be played for all CQ and SBO services configured in the VPN. 
</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="networkResilienceF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if the OL Network Resilience feature is:-  active (true) -  inactive (false)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="offNetAccessCode" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Prefix that enables VPN Extensions to call off-net destinations. </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="onNetAccessCode" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Prefix that enables VPN Extensions to call on-net destinations.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="paymentDispute" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicates if ODB Barring action should be applied. Possible values are:- Inactive (0)- Bar all Outgoing Calls and also all Incoming Calls(1)-  Bar all Outgoing Calls and also Incoming Calls to Mobile 
Extension in roaming (2)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="premiumServF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if calls to premium service numbers are barred when fraud Barring is active. Possible values:- active (true) - inactive (false)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="premNumbersF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if calls to premium numbers are barred when Fraud Barring is active. Possible values:-  active (true) -  inactive (false)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="privateCallPrefix" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Private Calls Prefix. Enables personal /private calls to be made which the VPN marks as “Private”.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="provStatus" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag that reflects the status of the VPN Service Subscriber in other systems. Initially, may only have active value: AC</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="reservedAccId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Reserved account ID used externally to identify a pool of released long numbers when a VPN Extension is removed. </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="serviceBackupF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if the OL Service Backup feature is:-  active (true) -  inactive (false)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="specialChargingF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicates that CDRs must include a special charging indication for VPNs configured to contain solely Lync Extensions. Active (true) or inactive (false).</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="specialNumMode" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Special Number Mode. Possible values:-  At Service level (1)-  At VPN level (2)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="templateId" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Master Template Identifier. This specifies the template to use for the company VPN, which in turn contains all the settings that can be assigned inEnd User Profiles. It must refer to an 
existing templateId.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="user" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identification of the user performing the request. Free text not related to any existing entity in the database.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="varLengthF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating whether VPN Extensions have fixed or variable length private short codes. Once it is set to “variable”, it cannot be updated to “fixed”. However, it is changeable from “fixed” to “variable” at any time.Possible values are:-  variable (true) -  fixed (false).</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vpnAccessCode" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>VPN Access Code. Allows External Extensions (that reside in another operator´s network) access to the VPN originating features.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vpnDescription" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Up to 150 characters for describing the VPN.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="welcomeMessage" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Up to 250 characters.  Message to be shown to End-Users upon login to the NGIN GUI  </xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createAtosVpnRequest" type="tns:CreateAtosVpnRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service atosVpn - AtosVpn provides create, set and delete VPN on network element ATOS.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateAtosVpnResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service atosVpn - AtosVpn provides create, set and delete VPN on network element ATOS.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="vpnId" type="xs:long" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="euptTemplateId" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identifier of the EUP template created.Parameter is returned after successful create.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createAtosVpnResponse" type="tns:CreateAtosVpnResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service atosVpn - AtosVpn provides create, set and delete VPN on network element ATOS.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteAtosVpnRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service atosVpn - AtosVpn provides create, set and delete VPN on network element ATOS.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="vpnId" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="user" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identification of the user performing the request. Free text not related to any existing entity in the database.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteAtosVpnRequest" type="tns:DeleteAtosVpnRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service atosVpn - AtosVpn provides create, set and delete VPN on network element ATOS.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteAtosVpnResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service atosVpn - AtosVpn provides create, set and delete VPN on network element ATOS.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteAtosVpnResponse" type="tns:DeleteAtosVpnResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service atosVpn - AtosVpn provides create, set and delete VPN on network element ATOS.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateAtosEndUsersRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service atosEndUsers - This service adds, modifies and deletes an End-User with his devices, his services and his template.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="address" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Existing Group identifier</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="groupId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Existing Group identifier</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="templateId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifier of the End-User Profile Template to be used for creating the default End-User Profile for the user being created. If not provided, the default template of the VPN would be used.
</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="user" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identification of the user performing the request. Free text not related to any existing entity in database.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="userId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>User identifier used to identify the End-User in the Presence Server. This is a unique value in the NGIN system. It must be in sipAddress format. If it is not provided, a userId would be automatically generated for the End-User. </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="userName" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>User name. If null or empty value is provided, a default value is assigned from NGIN system. </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vpnId" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>VPN identification</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="devices" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="address" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>First instance of parameter has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in create, set and delete requests.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="deviceName" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Device name Default name based in those 1- Mobile 2 - PABX Fixed3 - PSTN Fixed 4 - External PSTN5 - SIP Fixed 8 - Virtual SIP Fixed9 - PABX IP 11 LYNC12- NGSM</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="isPrimaryF" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>When none of the devices in the list is "isPrimaryF  = true", by default this value is assigned to the first record of the list.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
               <xs:element name="arrayOfServices" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="serviceType" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Services associated to the End-User.ACF - Advanced Call Forwarding AG - Agent AR - Absence Feature CPG - Call Pickup Group CSVID - Video Conference CTD - Click To Dial
EUICS - End User ICS HC - Hunting Chain MA - Manager assistant MDV - Multidevice RBWF - Ring Back When Free SKIP - PAS Skip</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createAtosEndUsersRequest" type="tns:CreateAtosEndUsersRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service atosEndUsers - This service adds, modifies and deletes an End-User with his devices, his services and his template.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateAtosEndUsersResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service atosEndUsers - This service adds, modifies and deletes an End-User with his devices, his services and his template.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="userDataId" type="xs:long" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>End User identifier (id=userDataId) Parameter is returned after correct creation.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createAtosEndUsersResponse" type="tns:CreateAtosEndUsersResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service atosEndUsers - This service adds, modifies and deletes an End-User with his devices, his services and his template.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateAtosExtRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service atosExt - This service creates, updates, deletes an Individual Extension inside/from an existing VPN and/or Group.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="address" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Public address belongs to the extension.
First instance of parameter has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in create, request and also if natExtId missing then has to be in set or delete requests.
</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="actionId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Field indicating what to do if a call is restricted by the ICS Service.1 - Voicemail 2 - Divert to Number 3 - Announcement</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="blockF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Parameter has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in set and delete requests.Individual Extension Identifier to be updated.Parameter is returned after successful creation.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="chargingId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Charging Identifier. This is included in CDRs and is intended to map to a specific key used for charging in Service Provider BSS systems.  Alphanumeric maximum length 9.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="cliDisplayType" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicates how the outgoing CLI is to be sent for on-net calls.1 - Display private number 2 - Display public number 3 - Display according to number dialled 4 - Inherit from VPN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="cliDisplayTypeAdd" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Only in case of a mobile extension with geographical number in order to use mobile or fixed as CLI: Mobile (0), Fixed (1)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="clipnsMode" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if CLIP No Screening is :-  active (1) -  inactive (0) -  inherited from VPN (2)It allows provisioned number to be sent as the outgoing CLI for off-net calls instead of the real 
number associated to the extension making the call.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="clipnsNumber" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Number configured to CLIP No Screening</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="displayName" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Up to 40 characters of textual information. This may be added to the call information sent over the SIP protocol, as per the Incoming Call Display feature. Just considered for Individual Extensions having sipAddress and for lync extension.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="distinctRing" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Distinctive ringing. It allows the user to select specific ring-tones depending on the type and call scenario.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drOffNet" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating whether OFF Net scenario is active (1) or inactive (0) in order to configure Distinctive Ringing</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drOnNet" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating whether ON NET scenario is active (1) or inactive (0) in order to configure Distinctive Ringing</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drOnNetGroup" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating whether ON NET IN GROUP scenario is active (1) or inactive (0) in order to configure Distinctive Ringing</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drToneOffNet" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Ring Tone of the Distinctive Ringing OFF NET scenario</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drToneOnNet" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Ring Tone of the Distinctive Ringing ON NET scenario</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drToneOnNetGroup" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Ring Tone of the Distinctive Ringing ON NET IN GROUP scenario</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fraudBarring" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if Fraud Barring should be applied for originating calls. Possible values are:-  Inactive(0)-  Manual(2)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fraudDetectionF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if Fraud Detection is:-  active (true) -  inactive (false)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fwdNumber" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if Fraud Detection is:-  active (true) -  inactive (false)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="groupId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>User group ID, if subscriber depends on a group. Value -1 to select the whole VPN. </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="imsi" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>IMSI for mobile subscriber.Subscriber Identity for mobile subscriber. It’s a unique 15 digits number.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="lac" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>First 2-5 digits of the geographical number (configurable). This is used to route local calls that are dialled without the Local Area Code (PSTN Local Dialling).Mandatory in certain 
deployments when geographical number is provided.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="languageCode" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>VPN default language code or a new language code. Valid values depend on the country.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="location" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Individual Extension location. It is used for emergency call routing. Its length depends on the country. Only numerical digits are valid.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="natExtTypeId" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The Extension Type. Find valid values in the catalogue1 - Mobile 2 - External Mobile 3 - PSTN 4 - External PSTN 5 - SIP 8 - Virtual SIP 11 - Lync 12 – nGSM</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="paymentDispute" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicates if ODB Barring action should be applied. Possible values are:-  Inactive (0)- Bar all Outgoing Calls and also all Incoming Calls(1)-  Bar all Outgoing Calls and also Incoming Calls to 
Mobile Extension in roaming (2)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="privateCallsF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag to activate the Private call feature for the extension.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="provStatus" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Provision status. Initially, may only have the value: AC</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="selectiveClirF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating that the CLI Restriction shall be removed for on-net calls. Possible values are remove (true) and not remove (false).</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="shortNumber" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Short number for Individual subscriber associated to an extension in the VPN Private Numbering Plan. May be null if a short number is not assigned.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="srvIcsF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if subscriber has ICS activated. ICS barrings are checked only if flag is true.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="userId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>User identifier used to identify a subscriber in the Presence Server. This is a unique value inside the NGIN system. It must be in sipAddress format</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="user" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identification of the user performing the request. Free text not related to any existing entity in the database.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vpnId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>VPN Identifier.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="favouriteNumbers" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="favouriteNumber" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Favourite number associated to the extension.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
               <xs:element name="arrayOfAddress" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="address" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Public address belongs to the extension.First instance of parameter has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in create, request and also if natExtId missing then has to be in set or delete requests.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="addressType" type="xs:long" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Type of address:1 - Mobile number  4 - Sip address 5 - Lync ISDN number 7 - Secondary Mobile number </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createAtosExtRequest" type="tns:CreateAtosExtRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service atosExt - This service creates, updates, deletes an Individual Extension inside/from an existing VPN and/or Group.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateAtosExtResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service atosExt - This service creates, updates, deletes an Individual Extension inside/from an existing VPN and/or Group.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="natExtId" type="xs:long" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Parameter has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in set and delete requests.Individual Extension Identifier to be updated.Parameter is returned after successful creation.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createAtosExtResponse" type="tns:CreateAtosExtResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service atosExt - This service creates, updates, deletes an Individual Extension inside/from an existing VPN and/or Group.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetAtosExtRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service atosExt - This service creates, updates, deletes an Individual Extension inside/from an existing VPN and/or Group.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="natExtId" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Parameter has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in set and delete requests.Individual Extension Identifier to be updated.Parameter is returned after successful creation.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="actionId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Field indicating what to do if a call is restricted by the ICS Service.1 - Voicemail 2 - Divert to Number 3 - Announcement</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="blockF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Parameter has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in set and delete requests.Individual Extension Identifier to be updated.Parameter is returned after successful creation.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="chargingId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Charging Identifier. This is included in CDRs and is intended to map to a specific key used for charging in Service Provider BSS systems.  Alphanumeric maximum length 9.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="cliDisplayType" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicates how the outgoing CLI is to be sent for on-net calls.1 - Display private number 2 - Display public number 3 - Display according to number dialled 4 - Inherit from VPN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="cliDisplayTypeAdd" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Only in case of a mobile extension with geographical number in order to use mobile or fixed as CLI: Mobile (0), Fixed (1)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="clipnsMode" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if CLIP No Screening is :-  active (1) -  inactive (0) -  inherited from VPN (2)It allows provisioned number to be sent as the outgoing CLI for off-net calls instead of the real 
number associated to the extension making the call.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="clipnsNumber" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Number configured to CLIP No Screening</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="displayName" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Up to 40 characters of textual information. This may be added to the call information sent over the SIP protocol, as per the Incoming Call Display feature. Just considered for Individual Extensions having sipAddress and for lync extension.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="distinctRing" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Distinctive ringing. It allows the user to select specific ring-tones depending on the type and call scenario.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drOffNet" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating whether OFF Net scenario is active (1) or inactive (0) in order to configure Distinctive Ringing</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drOnNet" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating whether ON NET scenario is active (1) or inactive (0) in order to configure Distinctive Ringing</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drOnNetGroup" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating whether ON NET IN GROUP scenario is active (1) or inactive (0) in order to configure Distinctive Ringing</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drToneOffNet" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Ring Tone of the Distinctive Ringing OFF NET scenario</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drToneOnNet" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Ring Tone of the Distinctive Ringing ON NET scenario</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="drToneOnNetGroup" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Ring Tone of the Distinctive Ringing ON NET IN GROUP scenario</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fraudBarring" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if Fraud Barring should be applied for originating calls. Possible values are:-  Inactive(0)-  Manual(2)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fraudDetectionF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if Fraud Detection is:-  active (true) -  inactive (false)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="fwdNumber" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if Fraud Detection is:-  active (true) -  inactive (false)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="groupId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>User group ID, if subscriber depends on a group. Value -1 to select the whole VPN. </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="imsi" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>IMSI for mobile subscriber.Subscriber Identity for mobile subscriber. It’s a unique 15 digits number.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="lac" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>First 2-5 digits of the geographical number (configurable). This is used to route local calls that are dialled without the Local Area Code (PSTN Local Dialling).Mandatory in certain 
deployments when geographical number is provided.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="languageCode" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>VPN default language code or a new language code. Valid values depend on the country.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="location" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Individual Extension location. It is used for emergency call routing. Its length depends on the country. Only numerical digits are valid.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="natExtTypeId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>The Extension Type. Find valid values in the catalogue1 - Mobile 2 - External Mobile 3 - PSTN 4 - External PSTN 5 - SIP 8 - Virtual SIP 11 - Lync 12 – nGSM</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="paymentDispute" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicates if ODB Barring action should be applied. Possible values are:-  Inactive (0)- Bar all Outgoing Calls and also all Incoming Calls(1)-  Bar all Outgoing Calls and also Incoming Calls to 
Mobile Extension in roaming (2)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="privateCallsF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag to activate the Private call feature for the extension.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="provStatus" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Provision status. Initially, may only have the value: AC</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="secGroupId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Secondary group ID, if subscriber depends on a group. This field is used when subscriber moves from a user group to another, and corresponds to the former group.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="secShortNumber" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Secondary short number. Used similarly as ShortNumber field.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="selectiveClirF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating that the CLI Restriction shall be removed for on-net calls. Possible values are remove (true) and not remove (false).</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="shortNumber" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Short number for Individual subscriber associated to an extension in the VPN Private Numbering Plan. May be null if a short number is not assigned.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="srvIcsF" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Flag indicating if subscriber has ICS activated. ICS barrings are checked only if flag is true.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="userId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>User identifier used to identify a subscriber in the Presence Server. This is a unique value inside the NGIN system. It must be in sipAddress format</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="user" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identification of the user performing the request. Free text not related to any existing entity in the database.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vpnId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>VPN Identifier.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="favouriteNumbers" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="favouriteNumber" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Favourite number associated to the extension.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
               <xs:element name="arrayOfAddress" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="address" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Public address belongs to the extension.First instance of parameter has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in create, request and also if natExtId missing then has to be in set or delete requests.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="addressType" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Type of address:1 - Mobile number  4 - Sip address 5 - Lync ISDN number 7 - Secondary Mobile number </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setAtosExtRequest" type="tns:SetAtosExtRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service atosExt - This service creates, updates, deletes an Individual Extension inside/from an existing VPN and/or Group.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetAtosExtResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service atosExt - This service creates, updates, deletes an Individual Extension inside/from an existing VPN and/or Group.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setAtosExtResponse" type="tns:SetAtosExtResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service atosExt - This service creates, updates, deletes an Individual Extension inside/from an existing VPN and/or Group.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteAtosExtRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service atosExt - This service creates, updates, deletes an Individual Extension inside/from an existing VPN and/or Group.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="natExtId" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Parameter has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in set and delete requests.Individual Extension Identifier to be updated.Parameter is returned after successful creation.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="user" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identification of the user performing the request. Free text not related to any existing entity in the database.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="arrayOfAddress" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="address" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Public address belongs to the extension.First instance of parameter has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in create, request and also if natExtId missing then has to be in set or delete requests.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="addressType" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Type of address:1 - Mobile number  4 - Sip address 5 - Lync ISDN number 7 - Secondary Mobile number </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteAtosExtRequest" type="tns:DeleteAtosExtRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service atosExt - This service creates, updates, deletes an Individual Extension inside/from an existing VPN and/or Group.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteAtosExtResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service atosExt - This service creates, updates, deletes an Individual Extension inside/from an existing VPN and/or Group.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteAtosExtResponse" type="tns:DeleteAtosExtResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service atosExt - This service creates, updates, deletes an Individual Extension inside/from an existing VPN and/or Group.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateAtosExtTransferRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service atosExtTransfer - This service moves existing Individual Extension to another existing VPN in network element Atos. InstantLink returns new natExtId after successful migration.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="address" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>If parameter exists in request then has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in create request.Valid MSISDN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="natExtId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>If parameter exists in request then has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in create request.Valid MSISDN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="msisdn" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>If parameter exists in request then has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in create request.Identifier of Individual Extension to be moved.
New value of parameter is returned after successful movement.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="addressType" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>1 - Mobile number 3 - Geographical number 4 - Sip address 5 - Lync ISDN number 7 - Secondary Mobile number 8 - Personal Number Mandatory if the parameter address is present in the request
</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="groupId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Destination user group ID identifier.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="shortNumber" type="xs:string" minOccurs="0" nillable="true">
                  <xs:annotation>
                     <xs:documentation>Destination user group ID identifier.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="vpnId" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>ID of an existing VPN where should be the individual extension moved.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="user" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identification of the user performing the request. Free text not related to any existing entity in database.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createAtosExtTransferRequest" type="tns:CreateAtosExtTransferRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service atosExtTransfer - This service moves existing Individual Extension to another existing VPN in network element Atos. InstantLink returns new natExtId after successful migration.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateAtosExtTransferResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service atosExtTransfer - This service moves existing Individual Extension to another existing VPN in network element Atos. InstantLink returns new natExtId after successful migration.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="natExtId" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>If parameter exists in request then has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in create request.Valid MSISDN</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createAtosExtTransferResponse" type="tns:CreateAtosExtTransferResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service atosExtTransfer - This service moves existing Individual Extension to another existing VPN in network element Atos. InstantLink returns new natExtId after successful migration.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateDnsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service dnsSubscription - This service enables inserting, deleting and retrieving information to DNS</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="e164" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber or range to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="pubid" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>pubid value must start with the string “sip:” (URI format) If pubid identifies range then parameter range must be set to TRUE</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="range" type="xs:boolean" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies whether provisioning an individual number or whole range</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createDnsSubscriptionRequest" type="tns:CreateDnsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service dnsSubscription - This service enables inserting, deleting and retrieving information to DNS</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateDnsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service dnsSubscription - This service enables inserting, deleting and retrieving information to DNS</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createDnsSubscriptionResponse" type="tns:CreateDnsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service dnsSubscription - This service enables inserting, deleting and retrieving information to DNS</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteDnsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service dnsSubscription - This service enables inserting, deleting and retrieving information to DNS</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="e164" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber or range to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="range" type="xs:boolean" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies whether provisioning an individual number or whole range</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteDnsSubscriptionRequest" type="tns:DeleteDnsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service dnsSubscription - This service enables inserting, deleting and retrieving information to DNS</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteDnsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service dnsSubscription - This service enables inserting, deleting and retrieving information to DNS</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteDnsSubscriptionResponse" type="tns:DeleteDnsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service dnsSubscription - This service enables inserting, deleting and retrieving information to DNS</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetDnsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service dnsSubscription - This service enables inserting, deleting and retrieving information to DNS</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="e164" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber or range to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="range" type="xs:boolean" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies whether provisioning an individual number or whole range</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getDnsSubscriptionRequest" type="tns:GetDnsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service dnsSubscription - This service enables inserting, deleting and retrieving information to DNS</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetDnsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service dnsSubscription - This service enables inserting, deleting and retrieving information to DNS</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="pubid" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>pubid value must start with the string “sip:” (URI format) If pubid identifies range then parameter range must be set to TRUE</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getDnsSubscriptionResponse" type="tns:GetDnsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service dnsSubscription - This service enables inserting, deleting and retrieving information to DNS</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateImsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service imsSubscription - This service handles the IMS subscription in the HSS.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="subscriberId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service, in kind of SIP format.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="chargingId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifier used for charging purposes</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="chargingProfId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identify the Charging Profile, including a reference to HSS–ChargingProfId of HSS-ChargingProfile Object Class.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="isPsi" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicates whether the Public Identities of the subscriber are Public
Service Identities (PSI), either Distinct or Wildcarded. It is set only at creation time. If TRUE, the user and all its public identities are considered PSI ones.
</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="privacyIndicator" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicates whether data sharing with the Application Server is allowed or not.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="subscriberBarringInd" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicates whether the subscriber and all its users are barred or not.This parameter is present for legacy purpose only, its value is ignored for CREATE and SET operations. GET operation always returns value FALSE.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="privateUser" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="privateUserId" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Case sensitive attribute used to identify each user</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="msisdn" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>The same MSISDN is used as subscriberID in SIP format.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="allowedAuthMechanism" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>The authentication mechanisms supported by the user.
Digest - default value
SSO (Single Sign-On) 
NBA (NASS Bundled Authentication mechanism)
</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="userPassword" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Case sensitive password associated to the private user.
The HSS attributes userPassword must be set to a value that is not empty.
This attribute is NOT retrieved when using GET operation.
</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="userBarringInd" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Indicates if the user is barred or not at a user level.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="roamingAllowed" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Indicates whether the user is allowed to roam or not</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
               <xs:element name="publicData" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="publicIdValue" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Key attribute to identify the public identity (SIP URL).</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="privateUserId" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Indicates which user this IMS Public Identity (IMPU) belongs to.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="implicitRegSet" type="xs:long" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identify if the Public Identity belongs to the user’s Implicit Registration set. If provisioned, this attribute must be set to 0 when the Public Identity is a Wildcarded PSI.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="isDefault" type="xs:boolean" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identify the default public identity within an Implicit Registration Set. This parameter is mandatory for CREATE for legacy purpose only and its value gets ignored in the CREATE operation.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="sessionBaringInd" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Attribute to identify if the public identity is barred from use or not</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="subscriberServiceProfileId" type="xs:string" minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>Reference to the connected subscirberServiceProfile</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
               <xs:element name="subSrvProfile" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="ServiceProfileId" type="xs:string" minOccurs="1" nillable="false"/>
                        <xs:element name="maxNumberSessions" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Maximum number of simultaneous sessions allowed for the terminal.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="confServiceProfiles" minOccurs="0" maxOccurs="unbounded">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="value" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Values are system configuration dependent, defined for ATOS application server. 
The current defined triggers are:
NON_SIP_EXT_TYPE_VIP, SIP_EXT_TYPE_VIP, MULTIRANGE_PBX_VIP, GREEN_LINE_VIP, FAC_VIP, CALL_PICKUP_VIP, CALL_TOGGLE_STORE_VIP, CALL_TOGGLE_RECOVERY_VIP, FOP_MO_VIP, FOP_MT_VIP, ADV_SERV_OL_FOP_VIP, ANN_ROUTING_VIP, ANN_VALIDATION_VIP, AC_DIAL_IN_VIP, AC_DIAL_OUT_VIP

testing configuration service profiles:
NON_SIP_EXT_TYPE_B, NON_SIP_EXT_TYPE_B, SIP_EXT_TYPE_B, MULTIRANGE_PBX_B, SIP_EXT_TYPE_B, MULTIRANGE_PBX_B, GREEN_LINE_B, CALL_PICKUP_B, CALL_TOGGLE_STORE_B, CALL_TOGGLE_RECOVERY_B, FOP_MO_B, FOP_MT_B, ADV_SERV_OL_FOP_B, ANN_ROUTING_B, ANN_VALIDATION_B, AC_DIAL_IN_B, AC_DIAL_OUT_B</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createImsSubscriptionRequest" type="tns:CreateImsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service imsSubscription - This service handles the IMS subscription in the HSS.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateImsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service imsSubscription - This service handles the IMS subscription in the HSS.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createImsSubscriptionResponse" type="tns:CreateImsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service imsSubscription - This service handles the IMS subscription in the HSS.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetImsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service imsSubscription - This service handles the IMS subscription in the HSS.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="subscriberId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service, in kind of SIP format.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="chargingId" type="xs:long" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifier used for charging purposes</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="chargingProfId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identify the Charging Profile, including a reference to HSS–ChargingProfId of HSS-ChargingProfile Object Class.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="isPsi" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicates whether the Public Identities of the subscriber are Public
Service Identities (PSI), either Distinct or Wildcarded. It is set only at creation time. If TRUE, the user and all its public identities are considered PSI ones.
</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="privacyIndicator" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicates whether data sharing with the Application Server is allowed or not.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="subscriberBarringInd" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Indicates whether the subscriber and all its users are barred or not.This parameter is present for legacy purpose only, its value is ignored for CREATE and SET operations. GET operation always returns value FALSE.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="privateUser" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="privateUserId" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Case sensitive attribute used to identify each user</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="msisdn" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>The same MSISDN is used as subscriberID in SIP format.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="allowedAuthMechanism" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>The authentication mechanisms supported by the user.
Digest - default value
SSO (Single Sign-On) 
NBA (NASS Bundled Authentication mechanism)
</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="userPassword" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Case sensitive password associated to the private user.
The HSS attributes userPassword must be set to a value that is not empty.
This attribute is NOT retrieved when using GET operation.
</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="userBarringInd" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Indicates if the user is barred or not at a user level.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="roamingAllowed" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Indicates whether the user is allowed to roam or not</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
               <xs:element name="publicData" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="publicIdValue" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Key attribute to identify the public identity (SIP URL).</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="privateUserId" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Indicates which user this IMS Public Identity (IMPU) belongs to.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="implicitRegSet" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identify if the Public Identity belongs to the user’s Implicit Registration set. If provisioned, this attribute must be set to 0 when the Public Identity is a Wildcarded PSI.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="isDefault" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identify the default public identity within an Implicit Registration Set. This parameter is mandatory for CREATE for legacy purpose only and its value gets ignored in the CREATE operation.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="sessionBaringInd" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Attribute to identify if the public identity is barred from use or not</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="subscriberServiceProfileId" type="xs:string" minOccurs="0"
                                    nillable="false">
                           <xs:annotation>
                              <xs:documentation>Reference to the connected subscirberServiceProfile</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
               <xs:element name="subSrvProfile" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="ServiceProfileId" type="xs:string" minOccurs="1" nillable="false"/>
                        <xs:element name="maxNumberSessions" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Maximum number of simultaneous sessions allowed for the terminal.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="confServiceProfiles" minOccurs="0" maxOccurs="unbounded">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="value" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Values are system configuration dependent, defined for ATOS application server. 
The current defined triggers are:
NON_SIP_EXT_TYPE_VIP, SIP_EXT_TYPE_VIP, MULTIRANGE_PBX_VIP, GREEN_LINE_VIP, FAC_VIP, CALL_PICKUP_VIP, CALL_TOGGLE_STORE_VIP, CALL_TOGGLE_RECOVERY_VIP, FOP_MO_VIP, FOP_MT_VIP, ADV_SERV_OL_FOP_VIP, ANN_ROUTING_VIP, ANN_VALIDATION_VIP, AC_DIAL_IN_VIP, AC_DIAL_OUT_VIP

testing configuration service profiles:
NON_SIP_EXT_TYPE_B, NON_SIP_EXT_TYPE_B, SIP_EXT_TYPE_B, MULTIRANGE_PBX_B, SIP_EXT_TYPE_B, MULTIRANGE_PBX_B, GREEN_LINE_B, CALL_PICKUP_B, CALL_TOGGLE_STORE_B, CALL_TOGGLE_RECOVERY_B, FOP_MO_B, FOP_MT_B, ADV_SERV_OL_FOP_B, ANN_ROUTING_B, ANN_VALIDATION_B, AC_DIAL_IN_B, AC_DIAL_OUT_B</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setImsSubscriptionRequest" type="tns:SetImsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service imsSubscription - This service handles the IMS subscription in the HSS.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetImsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service imsSubscription - This service handles the IMS subscription in the HSS.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setImsSubscriptionResponse" type="tns:SetImsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service imsSubscription - This service handles the IMS subscription in the HSS.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteImsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service imsSubscription - This service handles the IMS subscription in the HSS.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="subscriberId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service, in kind of SIP format.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteImsSubscriptionRequest" type="tns:DeleteImsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service imsSubscription - This service handles the IMS subscription in the HSS.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteImsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service imsSubscription - This service handles the IMS subscription in the HSS.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteImsSubscriptionResponse" type="tns:DeleteImsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service imsSubscription - This service handles the IMS subscription in the HSS.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetImsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service imsSubscription - This service handles the IMS subscription in the HSS.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="subscriberId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service, in kind of SIP format.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getImsSubscriptionRequest" type="tns:GetImsSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service imsSubscription - This service handles the IMS subscription in the HSS.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetImsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service imsSubscription - This service handles the IMS subscription in the HSS.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="chargingId" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identifier used for charging purposes</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="chargingProfId" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identify the Charging Profile, including a reference to HSS–ChargingProfId of HSS-ChargingProfile Object Class.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="isPsi" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Indicates whether the Public Identities of the subscriber are Public
Service Identities (PSI), either Distinct or Wildcarded. It is set only at creation time. If TRUE, the user and all its public identities are considered PSI ones.
</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="privacyIndicator" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Indicates whether data sharing with the Application Server is allowed or not.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="subscriberBarringInd" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Indicates whether the subscriber and all its users are barred or not.This parameter is present for legacy purpose only, its value is ignored for CREATE and SET operations. GET operation always returns value FALSE.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="privateUser" minOccurs="0" maxOccurs="unbounded">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="privateUserId" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Case sensitive attribute used to identify each user</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="msisdn" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>The same MSISDN is used as subscriberID in SIP format.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="allowedAuthMechanism" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>The authentication mechanisms supported by the user.
Digest - default value
SSO (Single Sign-On) 
NBA (NASS Bundled Authentication mechanism)
</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="userPassword" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Case sensitive password associated to the private user.
The HSS attributes userPassword must be set to a value that is not empty.
This attribute is NOT retrieved when using GET operation.
</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="userBarringInd" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Indicates if the user is barred or not at a user level.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="roamingAllowed" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Indicates whether the user is allowed to roam or not</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                        <xs:element name="publicData" minOccurs="0" maxOccurs="unbounded">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="publicIdValue" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Key attribute to identify the public identity (SIP URL).</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="privateUserId" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Indicates which user this IMS Public Identity (IMPU) belongs to.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="implicitRegSet" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Identify if the Public Identity belongs to the user’s Implicit Registration set. If provisioned, this attribute must be set to 0 when the Public Identity is a Wildcarded PSI.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="isDefault" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Identify the default public identity within an Implicit Registration Set. This parameter is mandatory for CREATE for legacy purpose only and its value gets ignored in the CREATE operation.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="sessionBaringInd" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Attribute to identify if the public identity is barred from use or not</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="subscriberServiceProfileId" type="xs:string" minOccurs="0"
                                             nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Reference to the connected subscirberServiceProfile</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                        <xs:element name="subSrvProfile" minOccurs="0" maxOccurs="unbounded">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="ServiceProfileId" type="xs:string" minOccurs="0" nillable="false"/>
                                 <xs:element name="maxNumberSessions" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Maximum number of simultaneous sessions allowed for the terminal.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="confServiceProfiles" minOccurs="0" maxOccurs="unbounded">
                                    <xs:complexType>
                                       <xs:sequence>
                                          <xs:element name="value" type="xs:string" minOccurs="0" nillable="false">
                                             <xs:annotation>
                                                <xs:documentation>Values are system configuration dependent, defined for ATOS application server. 
The current defined triggers are:
NON_SIP_EXT_TYPE_VIP, SIP_EXT_TYPE_VIP, MULTIRANGE_PBX_VIP, GREEN_LINE_VIP, FAC_VIP, CALL_PICKUP_VIP, CALL_TOGGLE_STORE_VIP, CALL_TOGGLE_RECOVERY_VIP, FOP_MO_VIP, FOP_MT_VIP, ADV_SERV_OL_FOP_VIP, ANN_ROUTING_VIP, ANN_VALIDATION_VIP, AC_DIAL_IN_VIP, AC_DIAL_OUT_VIP

testing configuration service profiles:
NON_SIP_EXT_TYPE_B, NON_SIP_EXT_TYPE_B, SIP_EXT_TYPE_B, MULTIRANGE_PBX_B, SIP_EXT_TYPE_B, MULTIRANGE_PBX_B, GREEN_LINE_B, CALL_PICKUP_B, CALL_TOGGLE_STORE_B, CALL_TOGGLE_RECOVERY_B, FOP_MO_B, FOP_MT_B, ADV_SERV_OL_FOP_B, ANN_ROUTING_B, ANN_VALIDATION_B, AC_DIAL_IN_B, AC_DIAL_OUT_B</xs:documentation>
                                             </xs:annotation>
                                          </xs:element>
                                       </xs:sequence>
                                    </xs:complexType>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getImsSubscriptionResponse" type="tns:GetImsSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service imsSubscription - This service handles the IMS subscription in the HSS.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateUmpSipCredRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service umpSipCred - UMP SIP Credentials service provides possibility to create, set, delete and get SIP credentials in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="isdn" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>ISDN number Parameter has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in create, set, delete and get requests.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="domain" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>vodafone.cz (production platform)  ims.lab.vodafone.cz (test platform)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="customerId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Negative number for V4_customers.Positive number is for V2 customers.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="pwd" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Password</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="sipUri" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>String – format 420xxxxxxxxx@ims.mnc003.mcc230.3gppnetwork.org ISDN@ims.mnc003.mcc230.3gppnetwork.org (production 8.1 and 8.4 platform) ISDN@ims.lab.vodafone.cz (test 8.1 platform)
ISDN@ims.mnc003.mcc230.3gppnetwork.org (test 8.4 platform)</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createUmpSipCredRequest" type="tns:CreateUmpSipCredRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service umpSipCred - UMP SIP Credentials service provides possibility to create, set, delete and get SIP credentials in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateUmpSipCredResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service umpSipCred - UMP SIP Credentials service provides possibility to create, set, delete and get SIP credentials in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createUmpSipCredResponse" type="tns:CreateUmpSipCredResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service umpSipCred - UMP SIP Credentials service provides possibility to create, set, delete and get SIP credentials in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteUmpSipCredRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service umpSipCred - UMP SIP Credentials service provides possibility to create, set, delete and get SIP credentials in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="isdn" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>ISDN number Parameter has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in create, set, delete and get requests.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteUmpSipCredRequest" type="tns:DeleteUmpSipCredRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service umpSipCred - UMP SIP Credentials service provides possibility to create, set, delete and get SIP credentials in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteUmpSipCredResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service umpSipCred - UMP SIP Credentials service provides possibility to create, set, delete and get SIP credentials in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteUmpSipCredResponse" type="tns:DeleteUmpSipCredResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service umpSipCred - UMP SIP Credentials service provides possibility to create, set, delete and get SIP credentials in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetUmpSipCredRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service umpSipCred - UMP SIP Credentials service provides possibility to create, set, delete and get SIP credentials in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="isdn" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>ISDN number Parameter has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in create, set, delete and get requests.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="domain" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>vodafone.cz (production platform)  ims.lab.vodafone.cz (test platform)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="customerId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Negative number for V4_customers.Positive number is for V2 customers.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="newIsdn" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>New ISDN or MSISDN</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="pwd" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Password</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="sipUri" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>String – format 420xxxxxxxxx@ims.mnc003.mcc230.3gppnetwork.org ISDN@ims.mnc003.mcc230.3gppnetwork.org (production 8.1 and 8.4 platform) ISDN@ims.lab.vodafone.cz (test 8.1 platform)
ISDN@ims.mnc003.mcc230.3gppnetwork.org (test 8.4 platform)</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setUmpSipCredRequest" type="tns:SetUmpSipCredRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service umpSipCred - UMP SIP Credentials service provides possibility to create, set, delete and get SIP credentials in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetUmpSipCredResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service umpSipCred - UMP SIP Credentials service provides possibility to create, set, delete and get SIP credentials in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setUmpSipCredResponse" type="tns:SetUmpSipCredResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service umpSipCred - UMP SIP Credentials service provides possibility to create, set, delete and get SIP credentials in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetUmpHardwareRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service umpHardware - UMP Hardware service provides possibility to create, set, set(restart), delete and get record of hardware (for example phone) in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="extensionNumber" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>ISDNThe first instance  of list has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in get requests.Paramaters macAddress or extensionNumber have to be in get request.
</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="extNumbers" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="extensionNumber" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>ISDNThe first instance  of list has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in get requests.Paramaters macAddress or extensionNumber have to be in get request.
</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getUmpHardwareRequest" type="tns:GetUmpHardwareRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service umpHardware - UMP Hardware service provides possibility to create, set, set(restart), delete and get record of hardware (for example phone) in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetUmpHardwareResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service umpHardware - UMP Hardware service provides possibility to create, set, set(restart), delete and get record of hardware (for example phone) in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="customerId" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Negative number for V4 customers and positive number for V2 customers.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="customerName" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Customer name</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="hardwareType" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>eBS code of IP phone</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="localityName" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Name of locality</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="sbcHostname" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Host name of Session Border Controler sbc1.vodafone.cz or sbc3.vodafone.cz (ATOS 8.1) isip99.vodafone.cz or bsip99.vodafone.cz (ATOS 8.4 test platform) isip01.vodafone.cz or bsip01.vodafone.cz cz (ATOS 8.4 production platform)</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="serialNumber" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Serial number of hardware - IMEI</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="newMacAddress" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Destionation (new) MAC address More information about operation set is below.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="restartHw" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Restart hardware via UMP method If parameter is in request, than restart of hardware is called but any new values for update are ignored. Therefore parameter should be sent only alone in request.
</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="responseGetByIsdn" minOccurs="0" maxOccurs="unbounded">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="customerId" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Negative number for V4 customers and positive number for V2 customers.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="hardwareType" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>eBS code of IP phone Returns only for get request with extensionNumber (ISDN).</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="macAddress" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Media Access Control - MAC address identifies hardware.Returns only for get request with extensionNumber (ISDN).</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="serialNumber" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Serial number of hardware - IMEI Returns only for get request with extensionNumber (ISDN).</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getUmpHardwareResponse" type="tns:GetUmpHardwareResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service umpHardware - UMP Hardware service provides possibility to create, set, set(restart), delete and get record of hardware (for example phone) in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateUmpHardwareRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service umpHardware - UMP Hardware service provides possibility to create, set, set(restart), delete and get record of hardware (for example phone) in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="customerId" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Negative number for V4 customers and positive number for V2 customers.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="customerName" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Customer name</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="hardwareType" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>eBS code of IP phone</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="localityName" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Name of locality</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="macAddress" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Media Access Control - MAC address identifies hardware for provisioning.Parameter has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in create, set, delete and get requests.Paramaters macAddress or extensionNumber have to be in get request.
</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="sbcHostname" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Host name of Session Border Controler sbc1.vodafone.cz or sbc3.vodafone.cz (ATOS 8.1) isip99.vodafone.cz or bsip99.vodafone.cz (ATOS 8.4 test platform) isip01.vodafone.cz or bsip01.vodafone.cz cz (ATOS 8.4 production platform)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="serialNumber" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Serial number of hardware - IMEI</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="extNumbers" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="extensionNumber" type="xs:string" minOccurs="1" nillable="false">
                           <xs:annotation>
                              <xs:documentation>ISDNThe first instance  of list has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in get requests.Paramaters macAddress or extensionNumber have to be in get request.
</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createUmpHardwareRequest" type="tns:CreateUmpHardwareRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service umpHardware - UMP Hardware service provides possibility to create, set, set(restart), delete and get record of hardware (for example phone) in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateUmpHardwareResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service umpHardware - UMP Hardware service provides possibility to create, set, set(restart), delete and get record of hardware (for example phone) in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createUmpHardwareResponse" type="tns:CreateUmpHardwareResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service umpHardware - UMP Hardware service provides possibility to create, set, set(restart), delete and get record of hardware (for example phone) in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteUmpHardwareRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service umpHardware - UMP Hardware service provides possibility to create, set, set(restart), delete and get record of hardware (for example phone) in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="macAddress" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Media Access Control - MAC address identifies hardware for provisioning.Parameter has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in create, set, delete and get requests.Paramaters macAddress or extensionNumber have to be in get request.
</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteUmpHardwareRequest" type="tns:DeleteUmpHardwareRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service umpHardware - UMP Hardware service provides possibility to create, set, set(restart), delete and get record of hardware (for example phone) in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteUmpHardwareResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service umpHardware - UMP Hardware service provides possibility to create, set, set(restart), delete and get record of hardware (for example phone) in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteUmpHardwareResponse" type="tns:DeleteUmpHardwareResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service umpHardware - UMP Hardware service provides possibility to create, set, set(restart), delete and get record of hardware (for example phone) in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetUmpHardwareRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service umpHardware - UMP Hardware service provides possibility to create, set, set(restart), delete and get record of hardware (for example phone) in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="customerId" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Negative number for V4 customers and positive number for V2 customers.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="customerName" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Customer name</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="hardwareType" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>eBS code of IP phone</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="localityName" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Name of locality</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="macAddress" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Media Access Control - MAC address identifies hardware for provisioning.Parameter has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in create, set, delete and get requests.Paramaters macAddress or extensionNumber have to be in get request.
</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="serialNumber" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Serial number of hardware - IMEI</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="newMacAddress" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Destionation (new) MAC address More information about operation set is below.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="restartHw" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Restart hardware via UMP method If parameter is in request, than restart of hardware is called but any new values for update are ignored. Therefore parameter should be sent only alone in request.
</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="extNumbers" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="extensionNumber" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>ISDNThe first instance  of list has to be also used as subscriberIdType (Main identifier) and its value as subscriberId in get requests.Paramaters macAddress or extensionNumber have to be in get request.
</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setUmpHardwareRequest" type="tns:SetUmpHardwareRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service umpHardware - UMP Hardware service provides possibility to create, set, set(restart), delete and get record of hardware (for example phone) in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetUmpHardwareResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service umpHardware - UMP Hardware service provides possibility to create, set, set(restart), delete and get record of hardware (for example phone) in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setUmpHardwareResponse" type="tns:SetUmpHardwareResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service umpHardware - UMP Hardware service provides possibility to create, set, set(restart), delete and get record of hardware (for example phone) in UMP (Unified Device Management Platform) network element.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetSuppServiceRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service suppService - This service sets more parameters for V4 services: Barring By Customer (BARRING), Call Forwarding (CF), Call Hold (CH), Call Waiting (CW), CLIP, CLIR, COLP, COLR, International Calls HR (ICHR), 	Inactive Missed Call Alert (MCA), Multi Party (MPTY) and Ported Number Notification (PNN).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="sourceElement" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identification of the server where are subscriber’s service data stored. </xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="targetElement" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identification of the server where the service will be set.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="user" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Mandatory only for NGIN e.g. targetElement=NGIN. Identification of the user performing the request. Free text not related to any existing entity in database.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="callHold" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Call Hold - enables holding incoming call while customer is speaking with someone else.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="clip" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>CLIP - provides the subscriber with the line identity of the subscriber who is calling.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="clir" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>CLIR activation / deactivation parameter Mandatory if parameter clirType present in the reqeuest</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="missedCallAlert" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Missed Call Alert (DCF) activation / deactivation parameter</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="mcaLanguage" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Mandatory if mcaActive presente in the request</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="multiParty" type="xs:boolean" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Multi Party (MPTY) - enables the conference calls.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="barringCustomer" minOccurs="0" maxOccurs="1">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="incomingCall" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of incoming voice calls.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="incomingSms" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of incoming SMSs</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="incomingFax" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of incoming FAX calls</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="incomingData" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of incoming data calls</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingCall" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing voice calls</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingSms" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing SMS</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingFax" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing FAX calls</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingData" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing data calls</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingIcCall" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing data calls</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingIcSms" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing international SMSs</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingIcFax" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing international FAX calls</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingIcData" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing international data calls</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="incomingRCall" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of incoming voice calls in roaming</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="incomingRSms" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of incoming SMSs in roaming</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="incomingRFax" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of incoming FAX calls in roaming</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="incomingRData" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of incoming data calls in roaming</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingIcRCall" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing international voice calls in roaming</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingIcRSms" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing international SMSs in roaming</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingIcRFax" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing international FAX calls in roaming</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingIcRData" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of outgoing international data calls in roaming</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="blockingPassword" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Password that should be provided by  customer while operating with the service from handset.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="controlServices" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Mode of  controlling customer. By the service can be set ONLYOPERATOR  (subscriber is not allowed to set barring) or SUBSCRIBER (subscriber can set barring with password or Operator).  Other values UNSUPPORTEDSERVICE (subscrier is located in VLR that does not support service – automated change by GSM ) and BLOCKEDPASSWORD (customer blocked password – operator have to unblock) are for display purpose.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
               <xs:element name="barringOperator" minOccurs="0" maxOccurs="1">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="incomingCall" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of all incoming calls (OBI). </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="incomingSms" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of all incoming SMSs .</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingCall" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of all outgoing calls .</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="outgoingSMS" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of all outgoing SMSs. </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="audiotexEnt" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring of Outgoing Premium Rate calls  Entertainment .</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="audiotexInf" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Barring  of Outgoing Premium Rate calls  Information.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="oick" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Originating calls forwarding  .</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="mnpAnnouncement" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Operator specific barring (type 2) when registered in HPLMN (OSB2).</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
               <xs:element name="callForward" minOccurs="0" maxOccurs="1">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="busyVoice" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for voice call forwarding on mobile subscriber busy </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="cfBusyNotification" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>This flag indicates whether the forwarding notification is active or not for busy call forwarding.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="busyFax" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for FAX call forwarding on mobile subscriber busy</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="busyData" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for data call forwarding on mobile subscriber busy</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="unreachableVoice" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for voice call forwarding on mobile subscriber not reachable</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="cfNotReachNotification" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>This flag indicates whether the forwarding notification is active or not for not reachable call forwarding.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="unreachableFax" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for FAX call forwarding on mobile subscriber not reachable</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="unreachableData" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for data call forwarding on mobile subscriber not reachable</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="noReplyTime" type="xs:long" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>No reply time (5s – 30s) may be specified in 5s steps. For set noReplyTime has to be sent also notRespondingVoice or notRespondingFax or notRespondingData</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="notRespondingVoice" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for voice call forwarding on mobile subscriber not responding</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="cfNoAnsNotification" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>This flag indicates whether the forwarding notification is active or not for no answer call forwarding on NGIN.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="notRespondingFax" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for FAX call forwarding on mobile subscriber not responding</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="notRespondingData" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for data call forwarding on mobile subscriber not responding</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="unconditionalVoice" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for unconditional voice call forwarding</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="cfUncondNotification" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>This flag indicates whether the forwarding notification is active or not for unconditional call forwarding.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="unconditionalFax" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for unconditional FAX call forwarding</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="unconditionalData" type="xs:long" minOccurs="0" nillable="true">
                           <xs:annotation>
                              <xs:documentation>The MSISDN number for unconditional data call forwarding</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
               <xs:element name="callWaiting" minOccurs="0" maxOccurs="1">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="voice" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Call Waiting service for voice calls</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="fax" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Call Waiting service for FAX calls</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="data" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Call Waiting service for data calls</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setSuppServiceRequest" type="tns:SetSuppServiceRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service suppService - This service sets more parameters for V4 services: Barring By Customer (BARRING), Call Forwarding (CF), Call Hold (CH), Call Waiting (CW), CLIP, CLIR, COLP, COLR, International Calls HR (ICHR), 	Inactive Missed Call Alert (MCA), Multi Party (MPTY) and Ported Number Notification (PNN).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetSuppServiceResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service suppService - This service sets more parameters for V4 services: Barring By Customer (BARRING), Call Forwarding (CF), Call Hold (CH), Call Waiting (CW), CLIP, CLIR, COLP, COLR, International Calls HR (ICHR), 	Inactive Missed Call Alert (MCA), Multi Party (MPTY) and Ported Number Notification (PNN).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setSuppServiceResponse" type="tns:SetSuppServiceResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service suppService - This service sets more parameters for V4 services: Barring By Customer (BARRING), Call Forwarding (CF), Call Hold (CH), Call Waiting (CW), CLIP, CLIR, COLP, COLR, International Calls HR (ICHR), 	Inactive Missed Call Alert (MCA), Multi Party (MPTY) and Ported Number Notification (PNN).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetSuppServiceRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service suppService - This service sets more parameters for V4 services: Barring By Customer (BARRING), Call Forwarding (CF), Call Hold (CH), Call Waiting (CW), CLIP, CLIR, COLP, COLR, International Calls HR (ICHR), 	Inactive Missed Call Alert (MCA), Multi Party (MPTY) and Ported Number Notification (PNN).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="targetElement" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identification of the server where the service will be set.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="getType" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Used only for targetElement=MTAS. ALL - return profile and subscribers’ individual parameters INDIVIDUAL - return only subscribers’ individual parameters. If not set ALL parameters are returned.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="user" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Mandatory only for NGIN e.g. targetElement=NGIN. Identification of the user performing the request. Free text not related to any existing entity in database.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getSuppServiceRequest" type="tns:GetSuppServiceRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service suppService - This service sets more parameters for V4 services: Barring By Customer (BARRING), Call Forwarding (CF), Call Hold (CH), Call Waiting (CW), CLIP, CLIR, COLP, COLR, International Calls HR (ICHR), 	Inactive Missed Call Alert (MCA), Multi Party (MPTY) and Ported Number Notification (PNN).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetSuppServiceResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service suppService - This service sets more parameters for V4 services: Barring By Customer (BARRING), Call Forwarding (CF), Call Hold (CH), Call Waiting (CW), CLIP, CLIR, COLP, COLR, International Calls HR (ICHR), 	Inactive Missed Call Alert (MCA), Multi Party (MPTY) and Ported Number Notification (PNN).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="sourceElement" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identification of the server where are subscriber’s service data stored. </xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="callHold" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Call Hold - enables holding incoming call while customer is speaking with someone else.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="clip" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>CLIP - provides the subscriber with the line identity of the subscriber who is calling.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="clir" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>CLIR activation / deactivation parameter Mandatory if parameter clirType present in the reqeuest</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="missedCallAlert" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Missed Call Alert (DCF) activation / deactivation parameter</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="mcaLanguage" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Mandatory if mcaActive presente in the request</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="multiParty" type="xs:boolean" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Multi Party (MPTY) - enables the conference calls.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                        <xs:element name="barringCustomer" minOccurs="0" maxOccurs="1">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="incomingCall" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of incoming voice calls.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="incomingSms" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of incoming SMSs</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="incomingFax" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of incoming FAX calls</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="incomingData" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of incoming data calls</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="outgoingCall" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of outgoing voice calls</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="outgoingSms" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of outgoing SMS</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="outgoingFax" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of outgoing FAX calls</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="outgoingData" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of outgoing data calls</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="outgoingIcCall" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of outgoing data calls</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="outgoingIcSms" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of outgoing international SMSs</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="outgoingIcFax" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of outgoing international FAX calls</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="outgoingIcData" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of outgoing international data calls</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="incomingRCall" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of incoming voice calls in roaming</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="incomingRSms" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of incoming SMSs in roaming</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="incomingRFax" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of incoming FAX calls in roaming</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="incomingRData" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of incoming data calls in roaming</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="outgoingIcRCall" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of outgoing international voice calls in roaming</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="outgoingIcRSms" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of outgoing international SMSs in roaming</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="outgoingIcRFax" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of outgoing international FAX calls in roaming</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="outgoingIcRData" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of outgoing international data calls in roaming</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="blockingPassword" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Password that should be provided by  customer while operating with the service from handset.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="controlServices" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Mode of  controlling customer. By the service can be set ONLYOPERATOR  (subscriber is not allowed to set barring) or SUBSCRIBER (subscriber can set barring with password or Operator).  Other values UNSUPPORTEDSERVICE (subscrier is located in VLR that does not support service – automated change by GSM ) and BLOCKEDPASSWORD (customer blocked password – operator have to unblock) are for display purpose.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                        <xs:element name="barringOperator" minOccurs="0" maxOccurs="1">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="incomingCall" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of all incoming calls (OBI). </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="incomingSms" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of all incoming SMSs .</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="outgoingCall" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of all outgoing calls .</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="outgoingSMS" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of all outgoing SMSs. </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="audiotexEnt" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring of Outgoing Premium Rate calls  Entertainment .</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="audiotexInf" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Barring  of Outgoing Premium Rate calls  Information.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="oick" type="xs:string" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Originating calls forwarding  .</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="mnpAnnouncement" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Operator specific barring (type 2) when registered in HPLMN (OSB2).</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                        <xs:element name="callForward" minOccurs="0" maxOccurs="1">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="busyVoice" type="xs:long" minOccurs="0" nillable="true">
                                    <xs:annotation>
                                       <xs:documentation>The MSISDN number for voice call forwarding on mobile subscriber busy </xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="cfBusyNotification" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>This flag indicates whether the forwarding notification is active or not for busy call forwarding.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="busyFax" type="xs:long" minOccurs="0" nillable="true">
                                    <xs:annotation>
                                       <xs:documentation>The MSISDN number for FAX call forwarding on mobile subscriber busy</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="busyData" type="xs:long" minOccurs="0" nillable="true">
                                    <xs:annotation>
                                       <xs:documentation>The MSISDN number for data call forwarding on mobile subscriber busy</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="unreachableVoice" type="xs:long" minOccurs="0" nillable="true">
                                    <xs:annotation>
                                       <xs:documentation>The MSISDN number for voice call forwarding on mobile subscriber not reachable</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="cfNotReachNotification" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>This flag indicates whether the forwarding notification is active or not for not reachable call forwarding.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="unreachableFax" type="xs:long" minOccurs="0" nillable="true">
                                    <xs:annotation>
                                       <xs:documentation>The MSISDN number for FAX call forwarding on mobile subscriber not reachable</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="unreachableData" type="xs:long" minOccurs="0" nillable="true">
                                    <xs:annotation>
                                       <xs:documentation>The MSISDN number for data call forwarding on mobile subscriber not reachable</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="noReplyTime" type="xs:long" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>No reply time (5s – 30s) may be specified in 5s steps. For set noReplyTime has to be sent also notRespondingVoice or notRespondingFax or notRespondingData</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="notRespondingVoice" type="xs:long" minOccurs="0" nillable="true">
                                    <xs:annotation>
                                       <xs:documentation>The MSISDN number for voice call forwarding on mobile subscriber not responding</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="cfNoAnsNotification" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>This flag indicates whether the forwarding notification is active or not for no answer call forwarding on NGIN.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="notRespondingFax" type="xs:long" minOccurs="0" nillable="true">
                                    <xs:annotation>
                                       <xs:documentation>The MSISDN number for FAX call forwarding on mobile subscriber not responding</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="notRespondingData" type="xs:long" minOccurs="0" nillable="true">
                                    <xs:annotation>
                                       <xs:documentation>The MSISDN number for data call forwarding on mobile subscriber not responding</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="unconditionalVoice" type="xs:long" minOccurs="0" nillable="true">
                                    <xs:annotation>
                                       <xs:documentation>The MSISDN number for unconditional voice call forwarding</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="cfUncondNotification" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>This flag indicates whether the forwarding notification is active or not for unconditional call forwarding.</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="unconditionalFax" type="xs:long" minOccurs="0" nillable="true">
                                    <xs:annotation>
                                       <xs:documentation>The MSISDN number for unconditional FAX call forwarding</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="unconditionalData" type="xs:long" minOccurs="0" nillable="true">
                                    <xs:annotation>
                                       <xs:documentation>The MSISDN number for unconditional data call forwarding</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                        <xs:element name="callWaiting" minOccurs="0" maxOccurs="1">
                           <xs:complexType>
                              <xs:sequence>
                                 <xs:element name="voice" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Call Waiting service for voice calls</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="fax" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Call Waiting service for FAX calls</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                                 <xs:element name="data" type="xs:boolean" minOccurs="0" nillable="false">
                                    <xs:annotation>
                                       <xs:documentation>Call Waiting service for data calls</xs:documentation>
                                    </xs:annotation>
                                 </xs:element>
                              </xs:sequence>
                           </xs:complexType>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getSuppServiceResponse" type="tns:GetSuppServiceResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service suppService - This service sets more parameters for V4 services: Barring By Customer (BARRING), Call Forwarding (CF), Call Hold (CH), Call Waiting (CW), CLIP, CLIR, COLP, COLR, International Calls HR (ICHR), 	Inactive Missed Call Alert (MCA), Multi Party (MPTY) and Ported Number Notification (PNN).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateMtasSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation CREATE of service mtasSubscription - The MTAS Profile service creates / updates / deletes / gets MTAS subscription for subscribers.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="profile" type="xs:string" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber type.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createMtasSubscriptionRequest" type="tns:CreateMtasSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Request for operation CREATE of service mtasSubscription - The MTAS Profile service creates / updates / deletes / gets MTAS subscription for subscribers.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateMtasSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation CREATE of service mtasSubscription - The MTAS Profile service creates / updates / deletes / gets MTAS subscription for subscribers.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="createMtasSubscriptionResponse" type="tns:CreateMtasSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Response for operation CREATE of service mtasSubscription - The MTAS Profile service creates / updates / deletes / gets MTAS subscription for subscribers.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetMtasSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation SET of service mtasSubscription - The MTAS Profile service creates / updates / deletes / gets MTAS subscription for subscribers.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="profile" type="xs:string" minOccurs="0" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber type.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setMtasSubscriptionRequest" type="tns:SetMtasSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Request for operation SET of service mtasSubscription - The MTAS Profile service creates / updates / deletes / gets MTAS subscription for subscribers.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="SetMtasSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation SET of service mtasSubscription - The MTAS Profile service creates / updates / deletes / gets MTAS subscription for subscribers.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="setMtasSubscriptionResponse" type="tns:SetMtasSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Response for operation SET of service mtasSubscription - The MTAS Profile service creates / updates / deletes / gets MTAS subscription for subscribers.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteMtasSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation DELETE of service mtasSubscription - The MTAS Profile service creates / updates / deletes / gets MTAS subscription for subscribers.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteMtasSubscriptionRequest" type="tns:DeleteMtasSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Request for operation DELETE of service mtasSubscription - The MTAS Profile service creates / updates / deletes / gets MTAS subscription for subscribers.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DeleteMtasSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation DELETE of service mtasSubscription - The MTAS Profile service creates / updates / deletes / gets MTAS subscription for subscribers.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response"/>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="deleteMtasSubscriptionResponse" type="tns:DeleteMtasSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Response for operation DELETE of service mtasSubscription - The MTAS Profile service creates / updates / deletes / gets MTAS subscription for subscribers.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetMtasSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Complex type of request for operation GET of service mtasSubscription - The MTAS Profile service creates / updates / deletes / gets MTAS subscription for subscribers.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="tns:ComptelAdapterRequestBase">
            <xs:sequence>
               <xs:element name="voiceMsisdn" type="xs:long" minOccurs="1" nillable="false">
                  <xs:annotation>
                     <xs:documentation>Identifies the subscriber to whom provide the service</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getMtasSubscriptionRequest" type="tns:GetMtasSubscriptionRequest">
      <xs:annotation>
         <xs:documentation>Request for operation GET of service mtasSubscription - The MTAS Profile service creates / updates / deletes / gets MTAS subscription for subscribers.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="GetMtasSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Complex type of response for operation GET of service mtasSubscription - The MTAS Profile service creates / updates / deletes / gets MTAS subscription for subscribers.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="cmn:Response">
            <xs:sequence>
               <xs:element name="responseMessage" minOccurs="0">
                  <xs:complexType>
                     <xs:sequence>
                        <xs:element name="profile" type="xs:string" minOccurs="0" nillable="false">
                           <xs:annotation>
                              <xs:documentation>Identifies the subscriber type.</xs:documentation>
                           </xs:annotation>
                        </xs:element>
                     </xs:sequence>
                  </xs:complexType>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="getMtasSubscriptionResponse" type="tns:GetMtasSubscriptionResponse">
      <xs:annotation>
         <xs:documentation>Response for operation GET of service mtasSubscription - The MTAS Profile service creates / updates / deletes / gets MTAS subscription for subscribers.</xs:documentation>
      </xs:annotation>
   </xs:element>
</xs:schema>